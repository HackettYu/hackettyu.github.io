<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>每周分享第 4 期</title>
      <link href="/weekly_04/"/>
      <url>/weekly_04/</url>
      
        <content type="html"><![CDATA[<h2 id="文摘"><a href="#文摘" class="headerlink" title="文摘"></a>文摘</h2><hr><p>1、<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Value_definition_syntax#%E6%80%BB%E7%BB%93" target="_blank" rel="noopener">CSS属性值定义语法</a><br><code>|</code> =&gt; <code>\</code></p><table><thead><tr><th>符号</th><th>名称</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>组合符号</td><td></td><td></td><td></td></tr><tr><td></td><td>并置</td><td>各部分必须出现且按顺序出现</td><td>solid <code>&lt;length&gt;</code></td></tr><tr><td>&amp;&amp;</td><td>“与”组合符</td><td>各部分必须出现，但可以不按顺序</td><td><code>&lt;length&gt;</code> &amp;&amp; <code>&lt;string&gt;</code></td></tr><tr><td>\</td><td>“或”组合符</td><td>各部分至少出现一个，可以不按顺序</td><td><code>&lt;&#39;border-image-outset&#39;&gt;</code> \ <code>&lt;&#39;border-image-slice&#39;&gt;</code></td></tr><tr><td>\</td><td>“互斥”组合符</td><td>各部分恰好出现一个</td><td>smaller \ small \ normal \ big \ bigger</td></tr><tr><td>[ ]</td><td>方括号</td><td>强调优先级</td><td>bold [ thin &amp;&amp; <code>&lt;length&gt;</code> ]</td></tr><tr><td>数量符号</td><td></td><td></td><td></td></tr><tr><td></td><td>无数量符号</td><td>恰好一次</td><td>solid</td></tr><tr><td>*</td><td>星号</td><td>零次、一次或多次</td><td>bold smaller*</td></tr><tr><td>+</td><td>加号</td><td>一次或多次</td><td>bold smaller+</td></tr><tr><td>？</td><td>问号</td><td>零次或一次（即可选）</td><td>bold smaller？</td></tr><tr><td>{A,B}</td><td>大括号</td><td>至少A次，至多B次</td><td>bold smaller{1,3}</td></tr><tr><td>#</td><td>井号</td><td>一次或多次，但多次出现必须以逗号分隔</td><td>bold smaller#</td></tr></tbody></table><p>2、python3 打印圣诞树<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">"for i in list(range(0, 5)) + list(range(2, 8)) + list(range(3, 12)) + [2, 2]: print(' ' * int((40-2*i-i/2)) + '*' * int((4*i+1+i)))"</span></span><br></pre></td></tr></table></figure></p><p>3、python3 开启内置服务器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server</span><br></pre></td></tr></table></figure></p><p>4、windows 装 python2 和 python3 后安装 python2 的 pip 包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install &lt;package&gt;</span><br></pre></td></tr></table></figure></p><p>5、windows 修改 dns command</p><ul><li>netsh interface ip set dns “以太网” static 114.114.114.114    # 设置 dns 管理员权限下<br>6、全球 BGP<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">telnet route-server.ip.att.NET</span><br><span class="line">username: rviews</span><br><span class="line">password: rviews</span><br><span class="line">show route all</span><br></pre></td></tr></table></figure></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>—-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—&nbsp;&nbsp;&nbsp;&nbsp;—-<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>—-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—-<br>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>—-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—-</p>]]></content>
      
      
      <categories>
          
          <category> weekly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> weekly </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>每周分享第 3 期</title>
      <link href="/weekly_03/"/>
      <url>/weekly_03/</url>
      
        <content type="html"><![CDATA[<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><hr><p>1、<a href="https://segmentfault.com/a/1190000000721142" target="_blank" rel="noopener">html2docset</a><br>html 文件转 docset</p><h2 id="文摘"><a href="#文摘" class="headerlink" title="文摘"></a>文摘</h2><hr><p>1、镜像网站<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=windows --domains \&lt;name&gt; --no-parent \&lt;url&gt;</span><br><span class="line">wget -m \&lt;url&gt;    </span><br><span class="line">wget -r -p -k -np \&lt;url&gt;</span><br></pre></td></tr></table></figure></p><p>2、python 2.x to python 3.x<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> lib2to3.main <span class="keyword">import</span> main</span><br><span class="line">sys.exit(main(<span class="string">"lib2to3.fixes"</span>))</span><br></pre></td></tr></table></figure></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><hr><blockquote><p><a href="http://www.ruanyifeng.com/blog/2018/12/weekly-issue-36.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/12/weekly-issue-36.html</a></p></blockquote><p>美国一个编程培训班的老板，写了一篇文章。他说自己很担忧。现在，那么多人学习编程，他的公司全靠培训赚钱，将来会不会程序员过剩？</p><p>培训班的目的，就是让那些没有受过四年计算机教育的人，经过四个月的培训，找到一份软件开发的工作。某种程度上，这种做法是可行的，大量的程序员就是通过这种模式生产出来。</p><p>但是，人工智能正变得越来越强，终有一天，简单代码都会由计算机自已生成，低级程序员的需求将会大量减少。另一方面，云服务的兴起，使得很多任务不需要自己编程，可以购买云服务，这也减少了程序员的需求。</p><p>同时，由于不断的抽象和封装，应用层的软件开发正变得越来越简单，如果只是简单地遵循在线教程，就能编写软件，或者将一系列API混合在一起，就能做出一个服务，有必要向开发人员支付高额薪水吗？毕竟开发过程是那么简单。</p><p>他认为，学习编程是值得的，它可以帮助你理解世界。但是，梦想仅仅学会软件开发，就能解决你的人生问题是不现实的。”只是能够编写一个安卓程序，不会为你赢得竞争优势，也没法在这个超级饱和的科技世界里，获得自己的一席之地。这个世界里，每个想法都已由十位企业家在你前面完成了。”</p><p>由于其他行业不景气，大量年轻人正在转向软件业就业。但是，程序员的淘汰也很厉害，上车的人多，下车的人也多。大家应该对这一点有清醒的认识。</p><p>（完）</p>]]></content>
      
      
      <categories>
          
          <category> weekly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> weekly </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>切换 eclipse 编译版本</title>
      <link href="/181215_2/"/>
      <url>/181215_2/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><hr><p>导入其它编译器或别人的项目的时候，有时候 jre 会不一样</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><hr><ul><li><p>查看你的工程编译版本：</p><ul><li><p>命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javap -verbose src/source.class</span><br></pre></td></tr></table></figure><p>可以直接看前面显示的 version</p></li><li>eclipse 打开 src/*.class</li></ul></li><li><p>对应信息：</p></li></ul><table><thead><tr><th style="text-align:center">版本号</th><th style="text-align:center">对应十进制</th><th style="text-align:center">jdk 版本号</th></tr></thead><tbody><tr><td style="text-align:center">2E</td><td style="text-align:center">46</td><td style="text-align:center">1.2</td></tr><tr><td style="text-align:center">2F</td><td style="text-align:center">47</td><td style="text-align:center">1.3</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">48</td><td style="text-align:center">1.4</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">49</td><td style="text-align:center">1.5</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">50</td><td style="text-align:center">1.6</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">51</td><td style="text-align:center">1.7</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">52</td><td style="text-align:center">1.8</td></tr></tbody></table><ul><li>切换 eclipse 编译版本<ul><li>全局<br><code>Preferences--&gt;Java--&gt;Compiler-&gt;Compiler compliance level</code></li><li>局部<br><code>工程右键--&gt;属性--&gt;Java Compiler</code></li></ul></li></ul><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><hr><blockquote><p><a href="https://blog.csdn.net/gnail_oug/article/details/47145047" target="_blank" rel="noopener">https://blog.csdn.net/gnail_oug/article/details/47145047</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>每周分享第 2 期</title>
      <link href="/weekly_02/"/>
      <url>/weekly_02/</url>
      
        <content type="html"><![CDATA[<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>1、<a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener">Windows Subsystem for Linux Installation Guide for Windows 10</a></p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><hr><p>1、IP 查询 API</p><ul><li>实例：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://freeapi.ipip.net/118.28.8.8</span><br></pre></td></tr></table></figure></li></ul><p>2、<a href="https://github.com/pagehelper/Mybatis-PageHelper" target="_blank" rel="noopener">Mybatis-PageHelper</a><br>Mybatis通用分页插件</p><h2 id="文摘"><a href="#文摘" class="headerlink" title="文摘"></a>文摘</h2><hr><ul><li><a href="https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6" target="_blank" rel="noopener">文件描述符</a><br>文件描述符（File descriptor）是计算机科学中的一个术语，是一个用于表述指向文件的引用的抽象化概念。</li><li>linux使用的进程间通信方式<ul><li>管道（pipe）,流管道(s_pipe)和有名管（FIFO）</li><li>信号（signal）</li><li>消息队列</li><li>共享内存</li><li>信号量</li><li>套接字（socket)</li></ul></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><hr><p>一周都在弄报告 ）0（<br>（完）</p>]]></content>
      
      
      <categories>
          
          <category> weekly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> weekly </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Cannot find one or more componets. Please reinstall the application</title>
      <link href="/181215_1/"/>
      <url>/181215_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><hr><p>打开 mssqlserver manager 时提示 <code>Cannot find one or more componets. Please reinstall the application</code></p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><hr><p>这个原因是系统找不到你的 vs shell 位置，原因可能是：</p><ul><li>没安装</li><li>没安装正确</li></ul><p>从这里下载好 <a href="https://visualstudio.microsoft.com/zh-hans/vs/older-downloads/isolated-shell/?rr=https%3A%2F%2Fwww.google.com%2F" target="_blank" rel="noopener">vs shell</a></p><p>安装前删除注册表：<code>计算机\HKEY_CURRENT_USER\Software\Microsoft\SQL Server Management Studio\14.0_Remote</code></p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><hr><p>hy 没安装是因为 hy 把 vs shell 位置移动了，但注册表没改变，更惨的是卸载后重新安装时因为 hy 之前的 d 盘符不用了了，安装程序又不能换安装位置却一直提示 <code>invail drive</code>，hy 打算删除错误注册表…… 放弃:)</p>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>每周分享第 1 期</title>
      <link href="/weekly_01/"/>
      <url>/weekly_01/</url>
      
        <content type="html"><![CDATA[<h2 id="新闻"><a href="#新闻" class="headerlink" title="新闻"></a>新闻</h2><hr><p>1、<code>一句话新闻</code> <a href="https://www.blog.google/products/translate/new-look-google-translate-web/" target="_blank" rel="noopener">谷歌翻译新增文档翻译功能</a><br><img src="/image/weekly_01_google_ts.gif" alt="weekly_01_google_ts.gif"></p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><hr><p>1、<a href="http://www.cnblogs.com/geek6/p/3951677.html" target="_blank" rel="noopener">java 23种设计模式</a></p><ul><li>设计模式的分类<br><img src="http://dl.iteye.com/upload/attachment/0083/1179/57a92d42-4d84-3aa9-a8b9-63a0b02c2c36.jpg" alt=""></li><li>设计模式的六大原则</li><li>Java的23中设计模式</li></ul><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><hr><p>1、<a href="https://sergiubucur.itch.io/falling-through-code" target="_blank" rel="noopener">falling-through-code</a></p><ul><li><code>falling-through-code</code> 是一个关于代码的 web 游戏。<br><img src="/image/weekly_01_falling_through_code.gif" alt="weekly_01_falling_through_code.gif"></li></ul><p>2、<a href="https://zhusandiao.gitbooks.io/grammar-club/content/" target="_blank" rel="noopener">语法俱乐部</a></p><p>3、<a href="https://design-patterns.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="noopener">图说设计模式</a></p><p>4、<a href="https://rubiks-cube-solver.com/" target="_blank" rel="noopener">rubiks-cube-solver</a></p><ul><li><code>rubiks-cube-solver</code> 是一个解模式的程序。</li></ul><h2 id="文摘"><a href="#文摘" class="headerlink" title="文摘"></a>文摘</h2><hr><p>1、<a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E9%9D%A2%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">反模式</a></p><ul><li>被认为是坏的软件开发实践的模式是反模式。</li></ul><p>2、<a href="https://zh.wikipedia.org/wiki/Foobar" target="_blank" rel="noopener">foobar</a></p><ul><li>foobar是计算机程序领域里的术语，并无实际用途和参考意义。在计算机程序设计与计算机技术的相关文档中，术语foobar是一个常见的无名氏化名，常被作为“伪变量”使用。</li></ul><p>3、<a href="https://ocg-rule.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">游戏王 ocg 规则</a></p><p>4、<a href="https://github.com/linchuanXu/word-statistics-cet4" target="_blank" rel="noopener">12年36套四级真题试卷的单词频率统计程序</a></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><hr><ul><li>这个 weekly 是模仿 <a href="https://github.com/ruanyf/weekly" target="_blank" rel="noopener">阮一峰技术分享周刊</a> 并结合博主自身写的周记。<br>（完）</li></ul>]]></content>
      
      
      <categories>
          
          <category> weekly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> weekly </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>j2ee 的 jstl 找不到包</title>
      <link href="/181208_1/"/>
      <url>/181208_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>hy 在 eclipse 导入一个 jsp 工程时，因为里面的 jsp 页面使用了 jsp 的 c 语句导致运行时抛出如下异常：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved <span class="keyword">in</span> either web.xml or the jar files deployed with this application</span><br><span class="line"></span><br><span class="line">org.apache.jasper.JasperException: The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved <span class="keyword">in</span> either web.xml or the jar files deployed with this application</span><br></pre></td></tr></table></figure></p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>这个问题的可能原因之一是找不到 jstl 的 jar 包，需要两个包 jstl.jar 和 standar.jar。<br>下载地址：</p><ul><li><a href="http://repo2.maven.org/maven2/javax/servlet/jstl/" target="_blank" rel="noopener">jstl</a></li><li><a href="http://repo2.maven.org/maven2/taglibs/standard/" target="_blank" rel="noopener">standard</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows git bash 配置颜色主题</title>
      <link href="/181202_1/"/>
      <url>/181202_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在使用 git 配置时点击了颜色配置工具跳转到了一个 <a href="http://ciembor.github.io/4bit/#" target="_blank" rel="noopener">github page</a> 里，发现是一个可视化配置的工具，它可以生成多种终端的颜色主题文件。</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>windows 下的 git bash 的响应配置文件是 <code>c/${username}/.minttyrc</code>，所以你现在项目导出的文件类型也应该是 mintty 的，不过好像要右键打开新的链接，自身不会跳转。</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>下面是我的配置文件，导出的文件是下半部分，上半部是其它配置。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">BoldAsFont=-<span class="number">1</span></span><br><span class="line">Locale=zh_CN</span><br><span class="line">Charset=UTF-<span class="number">8</span></span><br><span class="line">Language=zh_CN</span><br><span class="line">FontHeight=<span class="number">12</span></span><br><span class="line">Font=Consolas</span><br><span class="line"></span><br><span class="line">BackgroundColour=<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span></span><br><span class="line">ForegroundColour=<span class="number">166</span>,<span class="number">196</span>,<span class="number">225</span></span><br><span class="line">CursorColour=<span class="number">166</span>,<span class="number">196</span>,<span class="number">225</span></span><br><span class="line">Black=<span class="number">61</span>,<span class="number">61</span>,<span class="number">61</span></span><br><span class="line">BoldBlack=<span class="number">83</span>,<span class="number">83</span>,<span class="number">83</span></span><br><span class="line">Red=<span class="number">210</span>,<span class="number">63</span>,<span class="number">105</span></span><br><span class="line">BoldRed=<span class="number">229</span>,<span class="number">144</span>,<span class="number">168</span></span><br><span class="line">Green=<span class="number">105</span>,<span class="number">210</span>,<span class="number">63</span></span><br><span class="line">BoldGreen=<span class="number">168</span>,<span class="number">229</span>,<span class="number">144</span></span><br><span class="line">Yellow=<span class="number">210</span>,<span class="number">168</span>,<span class="number">63</span></span><br><span class="line">BoldYellow=<span class="number">229</span>,<span class="number">205</span>,<span class="number">144</span></span><br><span class="line">Blue=<span class="number">63</span>,<span class="number">105</span>,<span class="number">210</span></span><br><span class="line">BoldBlue=<span class="number">144</span>,<span class="number">168</span>,<span class="number">229</span></span><br><span class="line">Magenta=<span class="number">168</span>,<span class="number">63</span>,<span class="number">210</span></span><br><span class="line">BoldMagenta=<span class="number">205</span>,<span class="number">144</span>,<span class="number">229</span></span><br><span class="line">Cyan=<span class="number">63</span>,<span class="number">210</span>,<span class="number">168</span></span><br><span class="line">BoldCyan=<span class="number">144</span>,<span class="number">229</span>,<span class="number">205</span></span><br><span class="line">White=<span class="number">233</span>,<span class="number">233</span>,<span class="number">233</span></span><br><span class="line">BoldWhite=<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSH 登录时出现如下错误：Disconnected:No supported authentication methods available</title>
      <link href="/181113_1/"/>
      <url>/181113_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ssh 登录时出现如下错误：Disconnected:No supported authentication methods<br>原因：PasswordAuthentication 的默认值为 yes，SSH服务将其值置为 no 以禁用密码验证登录，导致此类故障。需要修改 PasswordAuthentication 配置解决此问题。</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">PasswordAuthentication yes</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo 配置 dns 分流的问题</title>
      <link href="/181025_2/"/>
      <url>/181025_2/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>hexo 同时部署在 coding page 和 github page 后，在域名服务器设置 dns 分流后发现 coding 一直无法申请 ssl。</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>网上说的把 dns 设置境外线路和国内线路让 dns 分流让国内访问 coding 国外访问 github 加速网页加载，不过分流要看用户配置的 dns 不是看 ip。<br>这导致 我的 coding ssl 证书 申请不成功 因为域名验证成功的必要条件还是要让证书服务提供方能读取到申请者（即 Coding Pages 服务器）所提供的验证信息<br>所以要先暂停境外的分流再申请 coding 的 ssl。</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>我一直找不到问题的原因是我使用的 dns 是 <code>1.1.1.1</code>，这是国外的 dns，导致我一直使用的是 github page，没有加载到 coding page。</p>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>centos 7 防火墙命令 firewall-cmd</title>
      <link href="/181025_1/"/>
      <url>/181025_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>centos 7 和 centos 6 有不同的防火墙命令，centos 7 的是 firewall-cmd，如果没安装，安装方法如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install firewalld</span><br></pre></td></tr></table></figure></p><p>开启防火墙<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld.service</span><br></pre></td></tr></table></figure></p><p>关闭防火墙<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure></p><p>开机自动启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br></pre></td></tr></table></figure></p><p>关闭开机制动启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure></p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>基本的添加端口：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=9001/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=9001/udp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p>查看：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure></p><h2 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-service=https //临时</span><br><span class="line">firewall-cmd --zone=public --add-port=8080-8081/tcp //临时</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-service=https //永久</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=8080-8081/tcp //永久</span><br></pre></td></tr></table></figure><p>删除<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --remove-rich-rule=<span class="string">"rule family="</span>ipv4<span class="string">" source address="</span>192.168.1.1<span class="string">"</span></span><br></pre></td></tr></table></figure></p><p>查询<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-service ftp</span><br><span class="line">yes</span><br><span class="line">firewall-cmd --query-service ssh</span><br><span class="line">yes</span><br><span class="line">firewall-cmd --query-service samba</span><br><span class="line">no</span><br><span class="line">firewall-cmd --query-service http</span><br><span class="line">no</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于 java swap 函数</title>
      <link href="/181018_1/"/>
      <url>/181018_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在写算法的时候，书本里使用的 c 语言里的 swap 函数，头一热就在 java 里写了一个。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> temp = a;</span><br><span class="line">      a = b;</span><br><span class="line">      b = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>美滋滋运行自己的排序算法，居然原样输出，后来发现 java 里没有引用这个概念，自己写的函数不能真正的交换。</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>这样写：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> itself, <span class="keyword">int</span> dummy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> itself;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    a = swap(b, b = a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>还可以这样：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInteger</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> x;                   <span class="comment">// single data member</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">MyInteger</span><span class="params">(<span class="keyword">int</span> xIn)</span> </span>&#123; x = xIn; &#125; <span class="comment">// constructor</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> x; &#125;  <span class="comment">// retrieve value</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertValue</span><span class="params">(<span class="keyword">int</span> xIn)</span> </span>&#123; x = xIn;&#125; <span class="comment">// insert</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swapping</span> </span>&#123;</span><br><span class="line">   <span class="comment">// swap: pass references to objects</span></span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(MyInteger rWrap, MyInteger sWrap)</span> </span>&#123;</span><br><span class="line">      <span class="comment">// interchange values inside objects</span></span><br><span class="line">      <span class="keyword">int</span> t = rWrap.getValue();</span><br><span class="line">      rWrap.insertValue(sWrap.getValue());</span><br><span class="line">      sWrap.insertValue(t);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> a = <span class="number">23</span>, b = <span class="number">47</span>;</span><br><span class="line">      System.out.println(<span class="string">"Before. a:"</span> + a + <span class="string">", b: "</span> + b);</span><br><span class="line">      MyInteger aWrap = <span class="keyword">new</span> MyInteger(a);</span><br><span class="line">      MyInteger bWrap = <span class="keyword">new</span> MyInteger(b);</span><br><span class="line">      swap(aWrap, bWrap);</span><br><span class="line">      a = aWrap.getValue();</span><br><span class="line">      b = bWrap.getValue();</span><br><span class="line">      System.out.println(<span class="string">"After.  a:"</span> + a + <span class="string">", b: "</span> + b);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>是不是三行代码的方式更简单~~~</p>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>一段用 html 创建流程图的源码</title>
      <link href="/181016_1/"/>
      <url>/181016_1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>flowchart.js · Playground<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">          .end-element &#123; background-color : #FFCCFF; &#125;</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.0/raphael-min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://flowchart.js.org/flowchart-latest.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;script src="../release/flowchart.min.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">            window.onload = function () &#123;</span></span><br><span class="line"><span class="undefined">                var btn = document.getElementById("run"),</span></span><br><span class="line"><span class="undefined">                    cd = document.getElementById("code"),</span></span><br><span class="line"><span class="undefined">                    chart;</span></span><br><span class="line"><span class="undefined">                (btn.onclick = function () &#123;</span></span><br><span class="line"><span class="undefined">                    var code = cd.value;</span></span><br><span class="line"><span class="undefined">                    if (chart) &#123;</span></span><br><span class="line"><span class="undefined">                      chart.clean();</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                    chart = flowchart.parse(code);</span></span><br><span class="line"><span class="undefined">                    chart.drawSVG('canvas', &#123;</span></span><br><span class="line"><span class="undefined">                      // 'x': 30,</span></span><br><span class="line"><span class="undefined">                      // 'y': 50,</span></span><br><span class="line"><span class="undefined">                      'line-width': 3,</span></span><br><span class="line"><span class="undefined">                      'maxWidth': 3,//ensures the flowcharts fits within a certian width</span></span><br><span class="line"><span class="undefined">                      'line-length': 50,</span></span><br><span class="line"><span class="undefined">                      'text-margin': 10,</span></span><br><span class="line"><span class="undefined">                      'font-size': 14,</span></span><br><span class="line"><span class="undefined">                      'font': 'normal',</span></span><br><span class="line"><span class="undefined">                      'font-family': 'Helvetica',</span></span><br><span class="line"><span class="undefined">                      'font-weight': 'normal',</span></span><br><span class="line"><span class="undefined">                      'font-color': 'black',</span></span><br><span class="line"><span class="undefined">                      'line-color': 'black',</span></span><br><span class="line"><span class="undefined">                      'element-color': 'black',</span></span><br><span class="line"><span class="undefined">                      'fill': 'white',</span></span><br><span class="line"><span class="undefined">                      'yes-text': 'yes',</span></span><br><span class="line"><span class="undefined">                      'no-text': 'no',</span></span><br><span class="line"><span class="undefined">                      'arrow-end': 'block',</span></span><br><span class="line"><span class="undefined">                      'scale': 1,</span></span><br><span class="line"><span class="undefined">                      'symbols': &#123;</span></span><br><span class="line"><span class="undefined">                        'start': &#123;</span></span><br><span class="line"><span class="undefined">                          'font-color': 'red',</span></span><br><span class="line"><span class="undefined">                          'element-color': 'green',</span></span><br><span class="line"><span class="undefined">                          'fill': 'yellow'</span></span><br><span class="line"><span class="undefined">                        &#125;,</span></span><br><span class="line"><span class="undefined">                        'end':&#123;</span></span><br><span class="line"><span class="undefined">                          'class': 'end-element'</span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined">                      &#125;,</span></span><br><span class="line"><span class="undefined">                      'flowstate' : &#123;</span></span><br><span class="line"><span class="undefined">                        'past' : &#123; 'fill' : '#CCCCCC', 'font-size' : 12&#125;,</span></span><br><span class="line"><span class="undefined">                        'current' : &#123;'fill' : 'yellow', 'font-color' : 'red', 'font-weight' : 'bold'&#125;,</span></span><br><span class="line"><span class="undefined">                        'future' : &#123; 'fill' : '#FFFF99'&#125;,</span></span><br><span class="line"><span class="undefined">                        'request' : &#123; 'fill' : 'blue'&#125;,</span></span><br><span class="line"><span class="undefined">                        'invalid': &#123;'fill' : '#444444'&#125;,</span></span><br><span class="line"><span class="undefined">                        'approved' : &#123; 'fill' : '#58C4A3', 'font-size' : 12, 'yes-text' : 'APPROVED', 'no-text' : 'n/a' &#125;,</span></span><br><span class="line"><span class="undefined">                        'rejected' : &#123; 'fill' : '#C45879', 'font-size' : 12, 'yes-text' : 'n/a', 'no-text' : 'REJECTED' &#125;</span></span><br><span class="line"><span class="undefined">                      &#125;</span></span><br><span class="line"><span class="undefined">                    &#125;);</span></span><br><span class="line"><span class="undefined">                    $('[id^=sub1]').click(function()&#123;</span></span><br><span class="line"><span class="undefined">                      alert('info here');</span></span><br><span class="line"><span class="undefined">                    &#125;);</span></span><br><span class="line"><span class="undefined">                &#125;)();</span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"code"</span> <span class="attr">style</span>=<span class="string">"width: 100%;"</span> <span class="attr">rows</span>=<span class="string">"11"</span>&gt;</span></span><br><span class="line">st=&gt;start: Start|past:&gt;http://www.google.com[blank]</span><br><span class="line">e=&gt;end: End:&gt;http://www.google.com</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http://www.google.com</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|request</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br><span class="line"></span><br><span class="line">st@&gt;op1(&#123;"stroke":"Red"&#125;)@&gt;cond(&#123;"stroke":"Red","stroke-width":6,"arrow-end":"classic-wide-long"&#125;)@&gt;c2(&#123;"stroke":"Red"&#125;)@&gt;op2(&#123;"stroke":"Red"&#125;)@&gt;e(&#123;"stroke":"Red"&#125;)<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"run"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>Run<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Windows 下磁盘多余的图标删除</title>
      <link href="/181010_1/"/>
      <url>/181010_1/</url>
      
        <content type="html"><![CDATA[<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>在注册表里打开下面两个路径看除了默认是否还有其它的，网上的方法只有第一条：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace</span><br></pre></td></tr></table></figure></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ul><li>第一条是系统的。</li><li>第二条是用户的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>电脑缺少 windows media player</title>
      <link href="/181008_1/"/>
      <url>/181008_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>因为电脑缺少 windows media play 无法安装 windows 版本的 icloud<br>尝试在功能上打开失败，尝试用 dism 打开失败，尝试官网安装包安装</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>直接在可选功能里安装，因为之前自己卸载了</p>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux ln 命令之硬链接和软连接</title>
      <link href="/181006_1/"/>
      <url>/181006_1/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本来像利用 link 一个 cheat 文件在 <code>/user</code> 下发现 cat 后时乱码<br>发现 windows 下直接创建 link 会怎样</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><blockquote><p><a href="https://wangchujiang.com/linux-command/c/ln.html" target="_blank" rel="noopener">https://wangchujiang.com/linux-command/c/ln.html</a><br>利用 bash 的 ln 命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln &#123;$filename1&#125; &#123;$$filename2&#125;</span><br><span class="line">cat &#123;$filename2&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><blockquote><p><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-hardandsymb-links/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/l-cn-hardandsymb-links/index.html</a></p></blockquote><ul><li>硬链接<ul><li>建立硬链接时，在另外的目录或本目录中增加目标文件的一个目录项，这样，一个文件就登记在多个目录中。如图所示的m2.c文件就在目录mub1和liu中都建立了目录项。<br>创建硬链接后，己经存在的文件的I节点号（Inode）会被多个目录文件项使用。一个文件的硬链接数可以在目录的长列表格式的第二列中看到，无额外链接的文件的链接数为l。<br>在默认情况下，ln命令创建硬链接。ln命令会增加链接数，rm命令会减少链接数。一个文件除非链接数为0，否则不会从文件系统中被物理地删除。<br>对硬链接有如下限制：<ul><li>不能对目录文件做硬链接。</li><li>不能在不同的文件系统之间做硬链接。就是说，链接文件和被链接文件必须位于同一个文件系统中。</li></ul></li></ul></li></ul><ul><li><p>符号连接</p><ul><li>符号链接也称为软链接，是将一个路径名链接到一个文件。这些文件是一种特别类型的文件。事实上，它只是一个文本文件（如图中的abc文件），其中包含它提供链接的另一个文件的路径名，如图中虚线箭头所示。另一个文件是实际包含所有数据的文件。所有读、写文件内容的命令被用于符号链接时，将着链接方向前进来访问实际的文件。<br>与硬链接不同的是，符号链接确实是一个新文件，当然它具有不同的I节点号；而硬链接并没有建立新文件。<br>符号链接没有硬链接的限制，可以对目录文件做符号链接，也可以在不同文件系统之间做符号链接。<br>用ln -s命令建立符号链接时，源文件最好用绝对路径名。这样可以在任何工作目录下进行符号链接。而当源文件用相对路径时，如果当前的工作路径与要创建的符号链接文件所在路径不同，就不能进行链接。<br>符号链接保持了链接与源文件或目录之间的区别：<br>删除源文件或目录，只删除了数据，不会删除链接。一旦以同样文件名创建了源文件，链接将继续指向该文件的新数据。<br>在目录长列表中，符号链接作为一种特殊的文件类型显示出来，其第一个字母是l。符号链接的大小是其链接文件的路径名中的字节数。<br>当用ln -s命令列出文件时，可以看到符号链接名后有一个箭头指向源文件或目录，例如lrwxrwxrwx … 14 jun 20 10:20 /etc/motd-&gt;/original_file其中，表示“文件大小”的数字“14”恰好说明源文件名original_file由14个字符构成。</li></ul></li><li><p>软连接不会更新文件，尽量写绝对路径。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vim 配置</title>
      <link href="/181004_4/"/>
      <url>/181004_4/</url>
      
        <content type="html"><![CDATA[<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ul><li><p>查找 vim 配置文件在哪</p><ul><li>:version</li><li>echo $vim</li></ul></li><li><p>vim 插件管理器 bundle</p><ul><li>PluginInstall 安装插件，要先写配置文件，bash 的 vim 配置文件在 Git 安装路径里面。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> profile </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>命令行开启 | 关闭显卡</title>
      <link href="/181004_3/"/>
      <url>/181004_3/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>寻找一种命令行开关驱动的方式以及关闭独显省电。</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><blockquote><p>安装 devcon :<br><a href="https://docs.microsoft.com/zh-cn/windows-hardware/drivers/download-the-wdk" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows-hardware/drivers/download-the-wdk</a></p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>管理员运行，进入你的安装路径（<code>C:\Program Files (x86)\Windows Kits\10\Tools\x64&gt;</code>这是 64 位的）下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devcon find * &gt; driver.txt</span><br></pre></td></tr></table></figure></p><p>例如要关闭 NVIDIA 显卡：</p><p><code>PCI\VEN_10DE&amp;DEV_139B&amp;SUBSYS_01521558&amp;REV_A2\4&amp;BED9AB3&amp;0&amp;0008: NVIDIA GeForce GTX 960M</code></p><p>截取一段编号查询并查询到唯一驱动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devcon find *VEN_10DE</span><br></pre></td></tr></table></figure></p><p>运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 关闭</span><br><span class="line">devcon disacble *VEN_10DE</span><br><span class="line">// 打开</span><br><span class="line">// devcon enable *VEN_10DE</span><br></pre></td></tr></table></figure></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>查询服务的命令 <code>sc</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// New-Alias -Name Run-SC -Value &apos;C:\Windows\System32\sc.exe&apos;</span><br><span class="line">// Run-SC query ALG</span><br><span class="line">sc query type= driver | findstr NVIDIA</span><br></pre></td></tr></table></figure></p><p>打开图形驱动管理界面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start devmgmt.msc</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> command </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>命令行下 powershell 提权</title>
      <link href="/181004_2/"/>
      <url>/181004_2/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>windows 下每次打开一个普通 cli 后发现要按 [win + X + A] 组合键才能打开管理员 cli ，感觉很麻烦，然后在网速查到了这个方法。</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>在普通 powershell 下输入下面的命令即可提权：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Process -verb runas &quot;C:\Windows\SysWOW64\WindowsPowerShell\v1.0\Powershell.exe&quot;</span><br></pre></td></tr></table></figure></p><p>后面的路径根据实际的路径修改，最好用任务管理器查看系统使用的那个，系统内可能有几个 powershell 程序。</p><h2 id="入门篇"><a href="#入门篇" class="headerlink" title="入门篇"></a>入门篇</h2><blockquote><p><a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/new-alias?view=powershell-6" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/new-alias?view=powershell-6</a><br><a href="https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_functions?view=powershell-6" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_functions?view=powershell-6</a></p></blockquote><p>其实这样输入有点麻烦，bash 有 alias 这样的命令的给命令起别名， cmd 有doskey 这样的命令，而 powershell 的是 Set-Alias 。<br>下面的命令分别是添加、获取和删除别名：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Set-Alias &#123;$alias&#125; &#123;$command&#125;</span><br><span class="line">Get-Alias | findstr &#123;$alias&#125;</span><br><span class="line">Remove-Item alias:&#123;$alias&#125;</span><br></pre></td></tr></table></figure></p><p>用 Set-Alias 找不到能传参的方式，用了函数的方式，用法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Function FuncName （args[]）</span><br><span class="line">&#123;</span><br><span class="line">      code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实际命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Function fuck &#123;Start-Process -verb runas &quot;C:\Windows\System32\WindowsPowerShell\v1.0\Powershell.exe&quot;&#125;</span><br><span class="line">Set-Alias sudo fuck</span><br></pre></td></tr></table></figure></p><p>删除函数如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del Function:&#123;$your function&#125;</span><br></pre></td></tr></table></figure></p><h2 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h2><blockquote><p><a href="https://technet.microsoft.com/zh-CN/library/hh847748.aspx" target="_blank" rel="noopener">https://technet.microsoft.com/zh-CN/library/hh847748.aspx</a></p></blockquote><p>上面的方法可以使用但是，关闭程序后旧失效了，找了一种方法把脚本写入全局。<br>找到全局设置文件 Microsoft.PowerShell_profile.ps1 ：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-Variable profile | Format-List</span><br></pre></td></tr></table></figure></p><p>如果没有自己创建一个，写入下面的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Function fuck &#123;Start-Process -verb runas &quot;C:\Windows\System32\WindowsPowerShell\v1.0\Powershell.exe&quot;&#125;</span><br><span class="line">Set-Alias sudo fuck</span><br></pre></td></tr></table></figure></p><p>保存后发现无法加载，因为默认不加载外部脚本，管理员权限下 powershell 运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>REMOTESIGNED</strong><br>脚本可以运行。这是 Windows Server 2012 R2 中的默认执行策略。<br>要求从 Internet 下载的脚本和配置文件（包括电子邮件和即时消息程序）具有受信任的发布者的数字签名。<br>不要求你在本地计算机上编写的脚本（不是从 Internet 下载的）具有数字签名。<br>如果脚本已被取消阻止（比如通过使用 Unblock-File cmdlet），则运行从 Internet 下载但未签名的脚本。<br>存在运行来自 Internet 之外的源的未签名脚本和已签名但却是恶意的脚本的风险。</p></blockquote><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>cmd 提权：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">runas /user:hackett_yu@outlook.com cmd</span><br><span class="line">doskey sudo=runas /user:&#123;$username&#125; cmd</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> command </tag>
            
            <tag> powershell </tag>
            
            <tag> script </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>中文技术文档的写作规范</title>
      <link href="/181004_1/"/>
      <url>/181004_1/</url>
      
        <content type="html"><![CDATA[<ul><li><blockquote><p><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/structure.md" target="_blank" rel="noopener">https://github.com/ruanyf/document-style-guide/blob/master/docs/structure.md</a></p></blockquote></li></ul><hr><h2 id="文档体系"><a href="#文档体系" class="headerlink" title="文档体系"></a>文档体系</h2><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><strong>简介</strong>（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li><li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li><li><strong>入门篇</strong>（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li><li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</li><li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li><li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vscode 控制台输出编码问题</title>
      <link href="/181003_1/"/>
      <url>/181003_1/</url>
      
        <content type="html"><![CDATA[<h2 id="error"><a href="#error" class="headerlink" title="error"></a>error</h2><p>vscode 的 run code 插件无法使用，原因是控制台的编码问题</p><h2 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h2><blockquote><p><a href="https://github.com/formulahendry/vscode-code-runner/issues/241#issuecomment-400633228" target="_blank" rel="noopener">github vscode-code-runner issues</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解决 chromium 缺少 google api 密钥无法登录问题</title>
      <link href="/181001_7/"/>
      <url>/181001_7/</url>
      
        <content type="html"><![CDATA[<p>管理员命令运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setx GOOGLE_API_KEY “AIzaSyAUoSnO_8k-3D4-fOp-CFopA_NQAkoVCLw”</span><br><span class="line">setx GOOGLE_DEFAULT_CLIENT_ID “6307505647-6knmr84r2pj2leudg3pp1j0h1licd6b9.apps.googleusercontent.com”</span><br><span class="line">setx GOOGLE_DEFAULT_CLIENT_SECRET “rbeWhXTLgU8oLiUeefPsEL9c”</span><br></pre></td></tr></table></figure></p><p>这三行分别是：API密钥、客户端ID、客户端密钥</p>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chromeium </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>m3u8 转 mp4</title>
      <link href="/181001_6/"/>
      <url>/181001_6/</url>
      
        <content type="html"><![CDATA[<script src="https://gist.github.com/tzmartin/fb1f4a8e95ef5fb79596bd4719671b5d.js"></script><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">"http://host/folder/file.m3u8"</span> -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 file.mp4</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> command </tag>
            
            <tag> ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解决 git LF 和 CFLF 换行问题</title>
      <link href="/181001_1/"/>
      <url>/181001_1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JSR 133 FAQ 翻译</title>
      <link href="/180927_3/"/>
      <url>/180927_3/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://xurongyang.github.io/2017/05/20/JSR-133-FAQ%E7%BF%BB%E8%AF%91/" target="_blank" rel="noopener">https://xurongyang.github.io/2017/05/20/JSR-133-FAQ%E7%BF%BB%E8%AF%91/</a><br><a href="https://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html" target="_blank" rel="noopener">https://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html</a></p></blockquote><h2 id="内存模型到底是什么"><a href="#内存模型到底是什么" class="headerlink" title="内存模型到底是什么"></a>内存模型到底是什么</h2><p>在多处理器计算机系统中，处理器一般拥有多层次的内存缓存，内存缓存一方面能够提高访问数据的速度（因为数据离处理器更近了），另一方面能降低总线的流量（因为许多内存操作可以被缓存替代）。内存缓存能极大的提高性能，但是也带来了一些挑战。例如，当两个处理器同时访问同一个内存地址时会发生什么事情？在什么情况下他们能看到相同的值？</p><p>在处理器级别，存储器模型定义了必要和充分的条件，用于知道其他处理器对存储器的写入对于当前处理器是可见的，并且当前处理器的写入对于其他处理器是可见的。一些处理器应用了强一致内存模型，所有的处理器对于同一个内存地址，看到的值都是一样的。其它一些处理器应用了弱一些的内存模型，利用内存屏障来刷新处理器本地缓存，这样处理器就能看到其它处理器的写操作的结果。这些内存屏障通常在lock和unlock操作时执行，它们对于高级程序设计语言是透明的。</p><p>在强一致内存模型下编写程序通常更为容易，因为不需要用到内存屏障。然而，即使是一致性最强的内存模型也经常会用到内存屏障。往往他们的位置都是违反直觉的。处理器设计的最新趋势鼓励了较弱的内存模型，因为它们对缓存一致性的放宽使得可以在多个处理器和更大量的内存中实现更大的可扩展性。</p><p>一个写入操作什么时间对另外一个线程可见的问题部分是由编译器重排序导致的。例如，编译器可能会决定把一个写入操作推迟执行会更加高效。只有不改变程序的语义即可。如果编译器推迟了一个操作，另一个线程直到它真正执行后才会看到操作结果，这反应了缓存的效果（最后半句有点奇怪）。</p><p>此外，写操作也可能会提前，在这种情况下，其它线程可能会提前看到一个写操作发生。所有这些都是特意设计的 - 通过给编译器，运行时或硬件提供灵活性，以最佳顺序在内存模型的范围内执行操作，我们可以实现更高的性能。</p><p>举一个简单的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Class Reordering &#123;</span><br><span class="line">  int x = 0, y = 0;</span><br><span class="line">  public void writer() &#123;</span><br><span class="line">    x = 1;</span><br><span class="line">    y = 2;</span><br><span class="line">  &#125;</span><br><span class="line">  public void reader() &#123;</span><br><span class="line">    int r1 = y;</span><br><span class="line">    int r2 = x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>假设这段代码被两个线程并发执行，并且y读取到的值是2。因为y的写入在x之后，所以程序员可能会认为x的值必定是1。然而，写操作可能被重排序了，如果发生这种情况，可能会先写入y，然后发生两个变量的读取，最后写入x。 结果是r1的值为2，但r2的值为0。</p><p>Java内存模型描述了多线程代码中的哪些行为是合法的，以及线程如何通过内存进行交互。 它描述了程序中变量之间的关系以及在实际计算机系统中存储和检索内存或寄存器的底层细节。 它可以使用各种各样的硬件和各种编译器优化来正确实现。</p><p>Java包括几种语言结构，包括volatile，final和synchronized，它们旨在帮助程序员将程序的并发要求提供给编译器。 Java内存模型定义了volatile和synchronized的行为，更重要的是确保正确同步的Java程序在所有处理器架构上正确运行。</p><p>其它语言有没有内存模型<br>大多数其他编程语言（如C和C ++）并没有直接支持多线程。 这些语言抑制编译器和体系结构中的重排序提供给程序员的保护在很大程度上取决于所使用的线程库（例如pthreads），使用的编译器以及运行代码的平台提供的保证。</p><h2 id="JSR-133讲了什么内容"><a href="#JSR-133讲了什么内容" class="headerlink" title="JSR 133讲了什么内容"></a>JSR 133讲了什么内容</h2><p>自1997年以来，在Java语言规范第17章定义的Java Memory Model中发现了几个严重的缺陷。 这些缺陷允许混淆行为（例如观察到final改变了其值），并且破坏了编译器执行常见优化的能力。</p><p>Java内存模型是一项雄心勃勃的工作; 这是第一次编程语言规范试图并入一个内存模型，可以为各种架构的并发提供一致的语义。 不幸的是，定义一个一致和直观的记忆模型比预期的困难得多。 JSR 133定义了一种用于Java语言的新内存模型，它修复了较早内存模型的缺陷。 为了做到这一点，final和volatile的语义需要改变。</p><p>完整内容可以在 <a href="http://www.cs.umd.edu/users/pugh/java/memoryModel" target="_blank" rel="noopener">The Java Memory Model</a> 找到，but the formal semantics are not for the timid（这句不懂）.It is surprising, and sobering, to discover how complicated seemingly simple concepts like synchronization really are（这句也是）.幸运的是，你不需要了解正式语义的细节 - JSR 133的目标是创建一套语义，为volatile，synchronized和final提供了一个直观的框架。</p><h2 id="JSR-133的目标包括："><a href="#JSR-133的目标包括：" class="headerlink" title="JSR 133的目标包括："></a>JSR 133的目标包括：</h2><ul><li>保持现有的安全保障，如类型安全，加强其他。 例如，变量值可能不会被创建为某个没有赋值给它的值：由某个线程观察到的变量的每个值必须是由某个线程设置过的值。</li><li>正确同步程序的语义应尽可能简单直观。</li><li>应该定义不完整或不正确同步的程序的语义，以使潜在的安全隐患最小化。（不懂）</li><li>程序员应该能够自信地说明多线程程序如何与内存交互。</li><li>应该可以在广泛的流行硬件架构中设计正确的，高性能的JVM实现。</li><li>应提供初始化安全的新保证。 如果对象被正确构造（这意味着在构造过程中它的引用不会逸出），那么可以看到对该对象的引用的所有线程也将看到在构造函数中设置的final域的值，而不需要同步。</li><li>对已存在的代码有很小的影响</li></ul><h2 id="重排序的含义是什么？"><a href="#重排序的含义是什么？" class="headerlink" title="重排序的含义是什么？"></a>重排序的含义是什么？</h2><p>有许多情况下，程序变量（对象实例字段，类静态字段和数组元素）的访问可能会以与程序指定的不同的顺序执行。 编译器可以按照优化的名义，对指令进行重排序。 数据可以在寄存器，处理器高速缓存和主存储器之间以与程序指定的顺序不同的顺序移动。</p><p>例如，如果线程先写入字段a，然后写入字段b，并且b的值不依赖于a的值，则编译器可以自由地对这些操作进行重新排序，并且缓存可以自由地刷新b的值到内存，在a之前。 有一些潜在的重新排序来源，如编译器，JIT和缓存。</p><p>编译器，运行时和硬件会创造一个as-if-serial语义的错觉，这意味着在一个单线程程序中，该程序不应该能够观察到重排序的影响。 然而，重排序可能会在不正确同步的多线程程序中发挥作用，其中一个线程能够观察到其他线程的影响，并且可能能够检测到该变量访问以与代码顺序不同的方式显示给其他线程。</p><p>大多数时候，一个线程不在乎其它线程在做什么。 但是，如果它在乎，就需要用到同步。</p><h2 id="旧内存模型有什么问题？"><a href="#旧内存模型有什么问题？" class="headerlink" title="旧内存模型有什么问题？"></a>旧内存模型有什么问题？</h2><p>旧的内存模型有几个严重的问题。它很难理解，因此被广泛的违背。例如，旧的内存模型在很多情况下都没有允许在大多数JVM中应用的重排序措施。这带来了JSR 133的形成。</p><p>例如，一个广泛认同的观点是，如果使用final，则线程之间的同步是不必要的，以保证另一个线程将看到该字段的值。 虽然这是一个合理的假设和一个明智的行为，实际上我们想要的东西如何工作，在旧的记忆模式下，根本不是这么做的。 旧的内存模型中没有任何内容表明它处理final字段与任何其他字段不同 - 意思是同步是确保所有线程都看到由构造函数编写的最终字段的值的唯一方法。 因此，线程可能会看到该字段的默认值，然后在稍后的时间内看到其构造的值。 这意味着，例如，像String这样的不可变对象似乎可以改变它们的值 - 这是一个令人不安的现象。</p><p>旧的内存模型允许volatile与非volatile的读写操作进行重排序，这与大多数开发人员对volatile的直觉不一致，从而导致混乱。</p><p>最后，正如我们将看到的那样，程序员对程序错误同步时可能会发生什么的直觉通常是错误的。 JSR-133的目标之一是提请注意到这一事实。</p><h2 id="“非正确同步”是什么意思？"><a href="#“非正确同步”是什么意思？" class="headerlink" title="“非正确同步”是什么意思？"></a>“非正确同步”是什么意思？</h2><p>不正确同步的代码对于不同人的含义不一样。 当我们谈到在Java内存模型的上下文中错误地同步的代码时，我们的意思是任何代码</p><p>有一个线程写入一个变量<br>有另一个线程读取相同的变量<br>写入和读取没有用同步操作来排序<br>当这些规则被违反时，我们说我们在这个变量上有一个数据竞争。 具有数据竞争的程序是一个不正确同步的程序。</p><h2 id="Synchronization同步操作做了什么"><a href="#Synchronization同步操作做了什么" class="headerlink" title="Synchronization同步操作做了什么"></a>Synchronization同步操作做了什么</h2><p>同步有几个方面。 最容易理解的是互斥 - 只有一个线程可以拿到一个监视器锁，因此在监视器锁上同步意味着一旦一个线程进入被监视器锁保护的同步块，则没有其他线程可以进入该监视器锁保护的块，直到第一个线程退出同步块。</p><p>但是不仅仅是互斥访问，Synchronization同步确保在同步块之前或期间，线程的内存写入以可预测的方式显示给同一监视器上同步的其他线程。 在我们退出同步程序段后，我们释放监视器锁，该监视器锁具有将缓存刷新到内存的作用，使得此线程所做的写入对其他线程可见。 在我们可以进入同步块之前，我们需要获取监视器锁，该监视器锁具有使本地处理器缓存无效的效果，以便从内存重新加载变量。 然后，我们将能够看到所有的上一版本都可以看到的写入。</p><p>在缓存方面进行讨论，可能听起来好像这些问题只影响多处理器机器。 然而，可以在单个处理器上轻松看到重新排序的效果。 例如，编译器不会将acquire之后的代码移动到它之前，也不会把release之前的代码移动到它之后。当我们说acquire和release对缓存的操作时，我们忽略了很多的细节内容。</p><p>新的内存模型语义在内存操作（读取字段，写入字段，加锁，解锁）和其他线程操作（启动和连接）上创建了一些偏序规则，其中一些操作在其他操作之前发生。 当一个动作发生在另一个动作之前，第一个被保证在第二个之前被执行并且结果对其可见。 此排序的规则如下：</p><ul><li>单线程中是完全按照代码顺序执行的</li><li>监视器的解锁操作发生在该监视器随后的加锁操作之前</li><li>对volatile字段的写入发生在该volatile字段每次后续读取之前</li><li>线程的start操作发生于该线程内的任何一行代码之前</li><li>一个线程内的所有操作都发生在join了这个线程的线程之前<br>这意味着一个线程在退出同步块之前的所有内存操作对于任何其它进入该同步块的线程都是可见的，因为所有的内存操作都发生在release之前，release发生在acquire之前。</li></ul><p>另外一个含义是，下面的这个被许多人用作内存屏障的操作不起作用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">synchronized (new Object()) &#123;&#125;</span><br></pre></td></tr></table></figure></p><p>这实际上没有任何效果，你的编译器可以完全删除它，因为编译器知道没有其他线程将在同一个监视器上同步。如果一个线程想看到另外一个线程的结果，就必须设置一个happens before规则。</p><p>重要提示：两个线程必须在同一个监视器锁上进行同步，这样才能设置happens before规则。如果线程A在X上同步，线程B在Y上同步，这样是没有效果的。release和acquire必须匹配，否则会存在数据竞争的问题。</p><h2 id="不可见变量如何看起来修改了它的值"><a href="#不可见变量如何看起来修改了它的值" class="headerlink" title="不可见变量如何看起来修改了它的值"></a>不可见变量如何看起来修改了它的值</h2><p>最好的例子是String类的一个实现。</p><p>字符串可以实现为具有三个字段的对象 - 字符数组，该数组中的偏移量和长度。 以这种方式实现String的理由，而不是仅使用字符数组，它允许多个String和StringBuffer对象共享相同的字符数组，并避免额外的对象分配和复制。 所以，例如，String.substring（）方法可以通过创建一个新的字符串来实现，该字符串与原始的String共享相同的字符数组，并且在长度和偏移量字段中只是不同。 对于字符串，这些字段都是final字段。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String s1 = &quot;/usr/tmp&quot;;</span><br><span class="line">String s2 = s1.substring(4);</span><br></pre></td></tr></table></figure></p><p>字符串s2的偏移量为4，长度为4.但是，在旧内存模型下，另一个线程可以将偏移量看作默认值为0，然后看到正确的值为4， 它将显示为字符串“/usr”更改为“/tmp”。</p><p>旧内存模型允许这种行为，几个JVM禁止了这些行为，在新的内存模型下，这种行为是违法的。</p><h2 id="新的内存模型下final域的工作原理是怎样的？"><a href="#新的内存模型下final域的工作原理是怎样的？" class="headerlink" title="新的内存模型下final域的工作原理是怎样的？"></a>新的内存模型下final域的工作原理是怎样的？</h2><p>对象的final字段的值在其构造函数中设置。假设对象被正确构造，一旦构造完成，在构造函数中分配的final字段的值将对所有其他线程都是可见的，不需要同步。 此外，final字段引用的任何其他对象或数组的值将与final字段保持同步更新。</p><p>对象被正确构造是什么意思？ 这仅仅意味着在构造过程中，不允许正在构造的对象的引用“逃脱”。 （参见安全构造技术的例子）换句话说，不要对正在构造的对象引用另外一个线程可能看到的对象; 不要将其分配给静态字段，不要将其注册为与任何其他对象的监听器，等等。 这些任务应该在构造函数完成之后完成，而不是在构造函数中完成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class FinalFieldExample &#123;</span><br><span class="line">  final int x;</span><br><span class="line">  int y;</span><br><span class="line">  static FinalFieldExample f;</span><br><span class="line">  public FinalFieldExample() &#123;</span><br><span class="line">    x = 3;</span><br><span class="line">    y = 4;</span><br><span class="line">  &#125;</span><br><span class="line">  static void writer() &#123;</span><br><span class="line">    f = new FinalFieldExample();</span><br><span class="line">  &#125;</span><br><span class="line">  static void reader() &#123;</span><br><span class="line">    if (f != null) &#123;</span><br><span class="line">      int i = f.x;</span><br><span class="line">      int j = f.y;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面的类是一个使用final字段的例子。 线程执行reader保证为f.x看到值3，因为它是final的。不能保证为y看到值4，因为它不是final的。 如果FinalFieldExample的构造函数如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public FinalFieldExample() &#123; // bad!</span><br><span class="line">  x = 3;</span><br><span class="line">  y = 4;</span><br><span class="line">  // bad construction - allowing this to escape</span><br><span class="line">  global.obj = this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>那么从<code>global.obj</code>读取this的线程不能保证为x看到3。</p><p>能看到正确构造的字段值的能力是很好的，但是如果字段本身是引用，那么你还希望你的代码可以看到它指向的对象（或数组）的最新值。 如果你的领域是一个final域，这也是保证的。 所以，你可以有一个final指向数组的指针，而不用担心其他线程看到数组的引用是正确的，但数组的内容不正确。Again, by “correct” here, we mean “up to date as of the end of the object’s constructor”, not “the latest value available”.</p><p>现在，说完所有这一切，如果在一个线程构造一个不可变对象（即只包含final字段的对象）之后，你想要确保所有其他线程都能看到正确的值，你通常还需要使用同步。 没有其他方法来确保，例如，第二个线程将会看到对不可变对象的引用。程序从final字段获得的保证应该非常小心，深入细心地了解如何在代码中管理并发性。</p><p>用JNI修改final字段的值，这样的行为没有具体定义。</p><h2 id="volatile做了什么"><a href="#volatile做了什么" class="headerlink" title="volatile做了什么"></a>volatile做了什么</h2><p>volatile字段是用于在线程之间通信状态的特殊字段。每个读取的volatile的线程都会看到最后写入volatile的值; 实际上，它们被程序员设计为不会因为缓存或者重排序看不到最新的值的字段。禁止编译器和运行时环境在寄存器中分配volatile变量。 他们还必须确保在写入之后，将它们从缓存中刷新到内存，以便它们可以立即变得对其他线程可见。 类似地，在读取volatile字段之前，缓存必须被设置为无效，使得内存（而不是本地处理器高速缓存）中的值是最新的值。对volatile变量的访问重新排序也有其他限制。</p><p>在旧的内存模型下，volatile变量之间是不可以重排序的，但是和普通变量之间是可以重排序的，这破坏了volatile对于线程间传递信号的有用性。</p><p>在新的内存模型下，volatile变量之间还是不可以重排序，但是和普通变量之间也不可以重排序了。写入volatile的值和释放synchronized锁的内存效果是一样的，读取volatile的值和synchronized加锁的内存效果是一样的。实际上，因为新的存储器模型对于其他字段和volatile字段的重排序进行了更加严格的约束，无论是不是volatile变量，线程A在写入volatile字段f时可见的任何东西对于线程B在读取f时都是可见的。</p><p>下面是使用volatile的一个例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class VolatileExample &#123;</span><br><span class="line">  int x = 0;</span><br><span class="line">  volatile boolean v = false;</span><br><span class="line">  public void writer() &#123;</span><br><span class="line">    x = 42;</span><br><span class="line">    v = true;</span><br><span class="line">  &#125;</span><br><span class="line">  public void reader() &#123;</span><br><span class="line">    if (v == true) &#123;</span><br><span class="line">      //uses x - guaranteed to see 42.</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>假设一个线程正在调用writer，另一个线程是调用reader。 对v的写入器会把x的值写入到内存，并且v从内存中获取该值。 因此，如果读者看到v的值为true，那么也可以保证看到之前发生的写入42。 在旧的记忆模型下不是这样。 如果v不是volatile的，那么编译器可以对写入器中的写入进行重新排序，读者对x的读取可能会看到0。</p><p>volatile的语义被大大加强，几乎到达了synchronized的水平。对于可见性来说，volatile操作几乎和synchronized一样。</p><p>重要提示：和synchronized一样，必须用同一个volatile才能保证可见性。</p><p>新的内存模型是否修复了“双重锁定”问题？<br>（臭名昭着的）双重检查锁定成语（也称为多线程单例模式）是一种技巧，旨在支持延迟初始化，同时避免同步的开销。在非常早期的JVM中，同步非常缓慢，开发人员急于删除它 - 也许太渴望了。双重锁定的模式如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// double-checked-locking - don&apos;t do this!</span><br><span class="line">private static Something instance = null;</span><br><span class="line">public Something getInstance() &#123;</span><br><span class="line">  if (instance == null) &#123;</span><br><span class="line">    synchronized (this) &#123;</span><br><span class="line">      if (instance == null)</span><br><span class="line">        instance = new Something();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这看起来很聪明 - 在公共代码路径上避免了同步。 它只有一个问题 - 它没有作用。为什么没有作用？最明显的原因是初始化实例和对实例字段的写入可以由编译器或缓存重新排序，这将具有返回看起来是部分构造的对象的效果。 结果将是我们读取一个未初始化的对象。 还有很多其他原因能说明为什么这是错误的。没有办法使用旧的Java内存模型进行修复。更多信息可以查看：Double-checked locking: Clever, but broken和The “Double Checked Locking is broken” declaration</p><p>许多人认为使用volatile关键字会消除在尝试使用双重检查锁定模式时出现的问题。 在1.5之前的JVM中，volatile不会确保它有效。 在新的内存模型下，使实例字段volatile将“修复”双重锁定的问题，因为在构造和读取之间存在happens before关系。</p><p>用另外一种方式更好：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">private static class LazySomethingHolder &#123;</span><br><span class="line">  public static Something something = new Something();</span><br><span class="line">&#125;</span><br><span class="line">public static Something getInstance() &#123;</span><br><span class="line">  return LazySomethingHolder.something;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>由于静态字段的初始化保证，该代码保证是正确的; 如果在静态初始化程序中设置了一个字段，那么它将被保证被正确地显示给访问该类的任何线程。</p><p>对虚拟机从业者<br>你应该看 <a href="http://gee.cs.oswego.edu/dl/jmm/cookbook.html" target="_blank" rel="noopener">The JSR-133 Cookbook for Compiler Writers</a></p><h2 id="为什么要关心内存模型？"><a href="#为什么要关心内存模型？" class="headerlink" title="为什么要关心内存模型？"></a>为什么要关心内存模型？</h2><p>你为什么要关心？ 并发错误很难调试。他们经常不出现在测试中，需要等待，直到你的程序在高负载下运行，并且难以重现。 你最好提前花费额外的努力，以确保您的程序正确同步; 虽然这不容易，但比尝试调试严重同步的应用程序要容易得多。</p>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>synchronized 实现</title>
      <link href="/180927_2/"/>
      <url>/180927_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://xurongyang.github.io/" target="_blank" rel="noopener">https://xurongyang.github.io/</a></p></blockquote><h2 id="synchronized-用法"><a href="#synchronized-用法" class="headerlink" title="synchronized 用法"></a>synchronized 用法</h2><p>synchronized是Java语言中用于线程间并发互斥访问的关键字，通常有两种用法。</p><h2 id="synchronized-修饰对象"><a href="#synchronized-修饰对象" class="headerlink" title="synchronized 修饰对象"></a>synchronized 修饰对象</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public void method() &#123;</span><br><span class="line">  synchronized (someObject) &#123;</span><br><span class="line">    // code</span><br><span class="line">  &#125;</span><br><span class="line">  // no effect</span><br><span class="line">  synchronized (new Object()) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当synchronized修饰的是对象时，实际上对synchronized块的代码加了一个对象锁，只有获取到这个锁才能执行synchronized块的代码，达到了互斥访问的效果。</p><p>倘若synchronized修饰的是new Object()呢？因为每次执行到此处时都会对这个新创建出来的对象加锁，而每次加锁的对象又都不相同，所以没有办法达到互斥访问的目的。</p><h2 id="synchronized-修饰方法"><a href="#synchronized-修饰方法" class="headerlink" title="synchronized 修饰方法"></a>synchronized 修饰方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public synchronized method1() &#123;&#125;</span><br><span class="line">public static synchronized method2() &#123;&#125;</span><br></pre></td></tr></table></figure><p>synchronized修饰方法需要区分修饰的是实例方法还是类方法，倘若修饰的是实例方法的话，那么synchronized加锁的对象就是对应的类实例，倘若修饰的是类方法的话，那么synchronized加锁的对象就是该类的Class对象。</p><p>synchronized的字节码表示<br>synchronized作为一个关键字在代码层面就是这样了，下面我们分析下它在字节码层面的表示。先看一段代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class SyncCodeBlock &#123;</span><br><span class="line">   public int i;</span><br><span class="line">   public void syncTask()&#123;</span><br><span class="line">       //同步代码库</span><br><span class="line">       synchronized (this)&#123;</span><br><span class="line">           i++;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过javap反编译，得到的字节码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Compiled from &quot;SyncCodeBlock.java&quot;</span><br><span class="line">public class SyncCodeBlock &#123;</span><br><span class="line">  public int i;</span><br><span class="line">  public SyncCodeBlock();</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_0       </span><br><span class="line">       1: invokespecial #1                  // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span><br><span class="line">       4: return        </span><br><span class="line">  public void syncTask();</span><br><span class="line">    Code:</span><br><span class="line">       0: aload_0       </span><br><span class="line">       1: dup           </span><br><span class="line">       2: astore_1      </span><br><span class="line">       3: monitorenter  </span><br><span class="line">       4: aload_0       </span><br><span class="line">       5: dup           </span><br><span class="line">       6: getfield      #2                  // Field i:I</span><br><span class="line">       9: iconst_1      </span><br><span class="line">      10: iadd          </span><br><span class="line">      11: putfield      #2                  // Field i:I</span><br><span class="line">      14: aload_1       </span><br><span class="line">      15: monitorexit   </span><br><span class="line">      16: goto          24</span><br><span class="line">      19: astore_2      </span><br><span class="line">      20: aload_1       </span><br><span class="line">      21: monitorexit   </span><br><span class="line">      22: aload_2       </span><br><span class="line">      23: athrow        </span><br><span class="line">      24: return        </span><br><span class="line">    Exception table:</span><br><span class="line">       from    to  target type</span><br><span class="line">           4    16    19   any</span><br><span class="line">          19    22    19   any</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对上面的代码做个简化，去掉与synchronized没关系的逻辑，简化版如下 ：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3: monitorenter  //进入同步方法</span><br><span class="line">//..........省略其他  </span><br><span class="line">15: monitorexit   //退出同步方法</span><br><span class="line">16: goto          24</span><br><span class="line">//省略其他.......</span><br><span class="line">21: monitorexit //退出同步方法</span><br></pre></td></tr></table></figure></p><p>当执行monitorenter指令时，会尝试获取对象的锁，如果该对象锁在执行前没有被锁定或者当前线程已经拥有了该对象的锁，就把锁的计数器加一。相应的，在执行monitorexit指令时会将锁计数器减一，当锁计数器值为0时，锁就被释放。如果获取锁失败，该线程就要阻塞等待，知道对象锁被另外一个线程释放。</p><p>值得注意的是编译器将会确保无论方法通过何种方式完成，方法中调用过的每条 monitorenter 指令都有执行其对应 monitorexit 指令，而无论这个方法是正常结束还是异常结束。为了保证在方法异常完成时 monitorenter 和 monitorexit 指令依然可以正确配对执行，编译器会自动产生一个异常处理器，这个异常处理器声明可处理所有的异常，它的目的就是用来执行 monitorexit 指令。从字节码中也可以看出多了一个monitorexit指令，它就是异常结束时被执行的释放monitor 的指令。</p><p>对于synchronized修饰的是方法的情况，在反编译的字节码中并没有monitorenter和monitorexit指令，字节码中的方法申明和代码中保持一致，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public static synchronized void syncTask();</span><br><span class="line">  Code:</span><br><span class="line">     0: getstatic     #2                  // Field i:I</span><br><span class="line">     3: iconst_1      </span><br><span class="line">     4: iadd          </span><br><span class="line">     5: putstatic     #2                  // Field i:I</span><br><span class="line">     8: return</span><br></pre></td></tr></table></figure></p><p>其实无论字节码中是monitorenter也好，还是monitorexit也好，都只是告知虚拟机进行锁操作的标志。</p><h2 id="synchronized锁优化"><a href="#synchronized锁优化" class="headerlink" title="synchronized锁优化"></a>synchronized锁优化</h2><h3 id="对象头"><a href="#对象头" class="headerlink" title="对象头"></a>对象头</h3><p>在 HotSpot 虚拟机中，对象在内存中存储布局分为 3 块区域：对象头（Header）、实例数据（Instance Data）、对齐填充。<br><img src="https://xurongyang.github.io/images/java-object.png" alt="image"></p><p>HotSpot 虚拟机的对象头包括两部分（非数组对象）信息，如下图所示：<br><img src="https://xurongyang.github.io/images/java-object-header.png" alt="images"></p><ul><li>第一部分用于存储对象自身的运行时数据，如哈希码（HashCode）、GC 分代年龄、锁状态标志、线程持有的锁、偏向线程 ID、偏向时间戳、对象分代年龄，这部分信息称为“Mark Word”；Mark Word 被设计成一个非固定的数据结构以便在极小的空间内存储尽量多的信息，它会根据自己的状态复用自己的存储空间。</li><li>第二部分是类型指针，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例；</li><li>如果对象是一个 Java 数组，那在对象头中还必须有一块用于记录数组长度的数据。因为虚拟机可以通过普通 Java 对象的元数据信息确定 Java 对象的大小，但是从数组的元数据中无法确定数组的大小。<br>这部分数据的长度在 32 位和 64 位的虚拟机（未开启压缩指针）中分别为 32bit 和 64bit。</li></ul><p>在 32 位系统下，存放 Class 指针的空间大小是 4 字节，Mark Word 空间大小也是4字节，因此头部就是 8 字节，如果是数组就需要再加 4 字节表示数组的长度，如下表所示：</p><p><img src="https://xurongyang.github.io/images/java-object-header-size.png" alt="java-object-header-size"></p><h3 id="实例数据"><a href="#实例数据" class="headerlink" title="实例数据"></a>实例数据</h3><p>实例数据部分是对象真正存储的有效信息，也是在程序代码中所定义的各种类型的字段内容。</p><p>这部分的存储顺序会受到虚拟机分配策略参数（FieldsAllocationStyle）和字段在 Java 源码中定义顺序的影响。</p><h3 id="对齐填充"><a href="#对齐填充" class="headerlink" title="对齐填充"></a>对齐填充</h3><p>对齐填充不是必然存在的，没有特别的含义，它仅起到占位符的作用。</p><p>由于 HotSpot VM 的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，也就是说对象的大小必须是 8 字节的整数倍。对象头部分是 8 字节的倍数，所以当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</p><h3 id="偏向锁"><a href="#偏向锁" class="headerlink" title="偏向锁"></a>偏向锁</h3><p>偏向锁是Java 6之后加入的新锁，它是一种针对加锁操作的优化手段，经过研究发现，在大多数情况下，锁不仅不存在多线程竞争，而且总是由同一线程多次获得，因此为了减少同一线程获取锁(会涉及到一些CAS操作,耗时)的代价而引入偏向锁。偏向锁的核心思想是，如果一个线程获得了锁，那么锁就进入偏向模式，此时Mark Word 的结构也变为偏向锁结构，当这个线程再次请求锁时，无需再做任何同步操作，即获取锁的过程，这样就省去了大量有关锁申请的操作，从而也就提供程序的性能。所以，对于没有锁竞争的场合，偏向锁有很好的优化效果，毕竟极有可能连续多次是同一个线程申请相同的锁。但是对于锁竞争比较激烈的场合，偏向锁就失效了，因为这样场合极有可能每次申请锁的线程都是不相同的，因此这种场合下不应该使用偏向锁，否则会得不偿失，需要注意的是，偏向锁失败后，并不会立即膨胀为重量级锁，而是先升级为轻量级锁。下面我们接着了解轻量级锁。</p><h3 id="轻量级锁"><a href="#轻量级锁" class="headerlink" title="轻量级锁"></a>轻量级锁</h3><p>倘若偏向锁失败，虚拟机并不会立即升级为重量级锁，它还会尝试使用一种称为轻量级锁的优化手段(1.6之后加入的)，此时Mark Word 的结构也变为轻量级锁的结构。轻量级锁能够提升程序性能的依据是“对绝大部分的锁，在整个同步周期内都不存在竞争”，注意这是经验数据。需要了解的是，轻量级锁所适应的场景是线程交替执行同步块的场合，如果存在同一时间访问同一锁的场合，就会导致轻量级锁膨胀为重量级锁。</p><h3 id="自旋锁"><a href="#自旋锁" class="headerlink" title="自旋锁"></a>自旋锁</h3><p>轻量级锁失败后，虚拟机为了避免线程真实地在操作系统层面挂起，还会进行一项称为自旋锁的优化手段。这是基于在大多数情况下，线程持有锁的时间都不会太长，如果直接挂起操作系统层面的线程可能会得不偿失，毕竟操作系统实现线程之间的切换时需要从用户态转换到核心态，这个状态之间的转换需要相对比较长的时间，时间成本相对较高，因此自旋锁会假设在不久将来，当前的线程可以获得锁，因此虚拟机会让当前想要获取锁的线程做几个空循环(这也是称为自旋的原因)，一般不会太久，可能是50个循环或100循环，在经过若干次循环后，如果得到锁，就顺利进入临界区。如果还不能获得锁，那就会将线程在操作系统层面挂起，这就是自旋锁的优化方式，这种方式确实也是可以提升效率的。最后没办法也就只能升级为重量级锁了。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://www.cnblogs.com/zhengbin/p/6490953.html" target="_blank" rel="noopener">VM——深入分析对象的内存布局</a><br><a href="http://blog.csdn.net/javazejian/article/details/72828483" target="_blank" rel="noopener">深入理解 Java 并发之 synchronized 实现原理</a></p>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>代码行统计</title>
      <link href="/180927_1/"/>
      <url>/180927_1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ cloc cloc/</span><br><span class="line">     465 text files.</span><br><span class="line">     427 unique files.</span><br><span class="line">     251 files ignored.</span><br><span class="line"></span><br><span class="line">http://cloc.sourceforge.net v 1.64  T=1.72 s (240.3 files/s, 16069.0 lines/s)</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Language                     files          blank        comment           code</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Java                           234           2277           1889          10399</span><br><span class="line">Javascript                       9            122            175           2756</span><br><span class="line">JSP                             33            176             65           2313</span><br><span class="line">HTML                            18            164             24           2001</span><br><span class="line">Python                          57            441            712           1468</span><br><span class="line">C++                             12             14             15            984</span><br><span class="line">XML                             39            109             75            801</span><br><span class="line">Bourne Shell                     2             42             44            258</span><br><span class="line">DOS Batch                        4             51              4            134</span><br><span class="line">CSS                              2             20             31             59</span><br><span class="line">JSON                             2              0              0             22</span><br><span class="line">Groovy                           2              7             15             20</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">SUM:                           414           3423           3049          21215</span><br><span class="line">-------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>英语技巧</title>
      <link href="/180921/"/>
      <url>/180921/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://language.chinadaily.com.cn/trans/2009-12/18/content_9201156.htm" target="_blank" rel="noopener">http://language.chinadaily.com.cn/trans/2009-12/18/content_9201156.htm</a></p></blockquote><p>英译汉的翻译方法和技巧是建立在英汉两种语言的对比之上的。这两种语言在词汇和句法方面的一些表达手段上各有其特点。语序调整主要指词序、句序两方面的调整。</p><p>首先我们谈谈词序的调整。</p><p>英汉语句中的主要成分主语、谓语、宾语或表语的词序基本上是一致的，但各种定语的位置和各种状语的次序在英、汉语言中则有同有异。汉语说“他正在卧室里睡觉”，而在英语中却说He is sleeping in the bedroom.（他睡觉在卧室。）；英语汉语都说“他出生于北京”，”He was born in Beijing”。</p><hr><h2 id="定语位置的调整"><a href="#定语位置的调整" class="headerlink" title="定语位置的调整"></a>定语位置的调整</h2><h3 id="单词作定语。"><a href="#单词作定语。" class="headerlink" title="单词作定语。"></a>单词作定语。</h3><ul><li>英语中，单词作定语时，通常放在它所修饰的名词前，汉语中也大体如此。有时英语中有后置的，译成汉语时一般都前置。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">something important（后置） </span><br><span class="line"></span><br><span class="line">重要的事情（前置）</span><br></pre></td></tr></table></figure><ul><li>如果英语中名词前的定语过多，译文中则不宜完全前置，因为汉语不习惯在名词前用过多的定语。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a little,yellow,ragged beggar（前置） </span><br><span class="line"></span><br><span class="line">一个要饭的，身材矮小，面黄肌瘦，衣衫褴褛。（后置）</span><br></pre></td></tr></table></figure></li></ul><h3 id="短语作定语。"><a href="#短语作定语。" class="headerlink" title="短语作定语。"></a>短语作定语。</h3><ul><li>英语中，修饰名词的短语一般放在名词之后，而汉语则反之，但间或也有放在后面的，视汉语习惯而定。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">their attempt to cross the river（后置）</span><br><span class="line"> 　　</span><br><span class="line">他们渡江的企图（前置）</span><br><span class="line"></span><br><span class="line">the decimal system of counting（后置） 　　</span><br><span class="line"></span><br><span class="line">十进制计算法（后置）</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="状语位置的调整"><a href="#状语位置的调整" class="headerlink" title="状语位置的调整"></a>状语位置的调整</h2><h3 id="单词作状语。"><a href="#单词作状语。" class="headerlink" title="单词作状语。"></a>单词作状语。</h3><ul><li>英语中单词作状语修饰形容词或其他状语时，通常放在它所修饰的形容词或状语的前面，这一点与汉语相同。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">He was very active in class.（前置） 　　</span><br><span class="line"></span><br><span class="line">他在班上很活跃。（前置）</span><br></pre></td></tr></table></figure><ul><li><p>英语中单词作状语修饰动词时，一般放在动词之后，而在汉语里则放在动词之前。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Modern science and technology are developing rapidly．（后置）</span><br><span class="line"></span><br><span class="line">现代科学技术正在迅速发展。（前置）</span><br></pre></td></tr></table></figure></li><li><p>英语中表示程度的状语在修饰状语时可前置也可后置，而在汉语中一般都前置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">He is running fast enough.（后置） 　</span><br><span class="line"></span><br><span class="line">　他跑得够快的了。（前置）</span><br></pre></td></tr></table></figure></li></ul><h3 id="短语作状语。"><a href="#短语作状语。" class="headerlink" title="短语作状语。"></a>短语作状语。</h3><ul><li><p>英语中短语状语可放在被修饰的动词之前或之后，译成汉语时则大多数放在被修饰的动词之前，但也有放在后面的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Seeing this,some of us became very worried．（前置）</span><br><span class="line"></span><br><span class="line">看到这种情况，我们有些人心里很着急。（前置）</span><br><span class="line"></span><br><span class="line">A jeep full sped fast,drenching me in spray．（后置）</span><br><span class="line"></span><br><span class="line">一辆坐满人的吉普车急驶而过，溅了我一身水。（后置）</span><br></pre></td></tr></table></figure></li><li><p>英语中地点状语一般在时间状语之前，而汉语中时间状语则往往放在地点状语之前。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">He was born in Beijing on May 20,1970．（地点在前）</span><br><span class="line"></span><br><span class="line">- 他是1970年5月20日在北京出生的。（时间在前）</span><br></pre></td></tr></table></figure></li><li><p>英语中时间状语、地点状语的排列一般是从小到大，而汉语中则是从大到小。其次我们谈谈句序的调整。这里，句序是指复合句中主句和从句的时间和逻辑关系叙述的顺序。</p></li></ul><h2 id="时间顺序的调整。"><a href="#时间顺序的调整。" class="headerlink" title="时间顺序的调整。"></a>时间顺序的调整。</h2><ul><li>英语复合句中，表示时间的从句可以放在主句之前，也可以放在主句之后，汉语中则通常先叙述先发生的事，后叙述后发生的事。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I went out for a walk after I had my dinner．（从句在主句之后）</span><br><span class="line"></span><br><span class="line">我吃了晚饭后出去散步。（从句在主句之前）</span><br></pre></td></tr></table></figure><ul><li>英语复合句中有时包含两个以上的时间从句，各个时间从句的次序比较灵活，汉语则一般按事情发生的先后安排其位置。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">He had flown yesterday from Beijing where he spent his vocation after finishing the </span><br><span class="line">meeting he had taken part in Tianjin．</span><br><span class="line"></span><br><span class="line">他本来在天津开会，会议一结束，他就去北京度假了，昨天才坐飞机回来。</span><br></pre></td></tr></table></figure><h2 id="英汉语复合句中的逻辑顺序的调整。"><a href="#英汉语复合句中的逻辑顺序的调整。" class="headerlink" title="英汉语复合句中的逻辑顺序的调整。"></a>英汉语复合句中的逻辑顺序的调整。</h2><ul><li><p>表示因果关系的英语复合句中，因果顺序灵活，在汉语中多数情况是原因在前，结果在后。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">He had to stay in bed because he was ill．（后置）</span><br><span class="line"></span><br><span class="line">因为他病了，他只好呆在床上。（前置）</span><br></pre></td></tr></table></figure></li><li><p>表示条件（假设）与结果关系的英语复合句中，条件（假设）与结果的顺序也不固定，在汉语中则是条件在前，结果在后。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I still hope you will come back if arrangements could be made．（后置）</span><br><span class="line"></span><br><span class="line">如果安排得好，我还是希望你来。（前置）</span><br></pre></td></tr></table></figure></li><li><p>表示目的与行动关系的英语复合句中，目的与行动的顺序比较固定，多数是行动在前，目的在后，汉语也如此，但有时为了强调，也可把目的放在行动之前。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Better take your umbrella in case it rains．（后置）</span><br><span class="line"></span><br><span class="line">最好带上伞以防下雨。（前置）</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> english </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文档体系</title>
      <link href="/180920/"/>
      <url>/180920/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/structure.md" target="_blank" rel="noopener">https://github.com/ruanyf/document-style-guide/blob/master/docs/structure.md</a></p></blockquote><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><strong>简介</strong>（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li><li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li><li><strong>入门篇</strong>（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li><li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</li><li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li><li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul><p>下面是两个真实范例，可参考。</p><ul><li><a href="http://redux.js.org/index.html" target="_blank" rel="noopener">Redux 手册</a></li><li><a href="http://flight-manual.atom.io/" target="_blank" rel="noopener">Atom 手册</a></li></ul><h2 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h2><p>文档的文件名不得含有空格。</p><p>文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误： 名词解释.md</span><br><span class="line"></span><br><span class="line">正确： glossary.md</span><br></pre></td></tr></table></figure><p>文件名建议只使用小写字母，不使用大写字母。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：TroubleShooting.md</span><br><span class="line"></span><br><span class="line">正确：troubleshooting.md</span><br></pre></td></tr></table></figure><p>为了醒目，某些说明文件的文件名，可以使用大写字母，比如<code>README</code>、<code>LICENSE</code>。</p><p>文件名包含多个单词时，单词之间建议使用半角的连词线（<code>-</code>）分隔。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不佳：advanced_usage.md</span><br><span class="line"></span><br><span class="line">正确：advanced-usage.md</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>中文文案排版指北</title>
      <link href="/180919/"/>
      <url>/180919/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/mzlogin/chinese-copywriting-guidelines/blob/Simplified/README.md" target="_blank" rel="noopener">https://github.com/mzlogin/chinese-copywriting-guidelines/blob/Simplified/README.md</a></p></blockquote><p>#<br><a href="https://david-dm.org/mzlogin/chinese-copywriting-guidelines#info=devDependencies" target="_blank" rel="noopener"><img src="https://david-dm.org/mzlogin/chinese-copywriting-guidelines/dev-status.svg" alt="devDependency Status"></a></p><p>统一中文文案、排版的相关用法，降低团队成员之间的沟通成本，增强网站气质。</p><p>Other languages:</p><ul><li><a href="README.en.md">English</a></li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="noopener">Chinese Traditional</a></li><li><a href="README.md">Chinese Simplified</a></li></ul><hr><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><!-- vim-markdown-toc GFM --><ul><li><a href="#空格">空格</a><ul><li><a href="#中英文之间需要增加空格">中英文之间需要增加空格</a></li><li><a href="#中文与数字之间需要增加空格">中文与数字之间需要增加空格</a></li><li><a href="#数字与单位之间无需增加空格">数字与单位之间无需增加空格</a></li><li><a href="#全角标点与其他字符之间不加空格">全角标点与其他字符之间不加空格</a></li><li><a href="#-ms-text-autospace-to-the-rescue"><code>-ms-text-autospace</code> to the rescue?</a></li></ul></li><li><a href="#标点符号">标点符号</a><ul><li><a href="#不重复使用标点符号">不重复使用标点符号</a></li></ul></li><li><a href="#全角和半角">全角和半角</a><ul><li><a href="#使用全角中文标点">使用全角中文标点</a></li><li><a href="#数字使用半角字符">数字使用半角字符</a></li><li><a href="#遇到完整的英文整句特殊名词其內容使用半角标点">遇到完整的英文整句、特殊名词，其內容使用半角标点</a></li></ul></li><li><a href="#名词">名词</a><ul><li><a href="#专有名词使用正确的大小写">专有名词使用正确的大小写</a></li><li><a href="#不要使用不地道的缩写">不要使用不地道的缩写</a></li></ul></li><li><a href="#争议">争议</a><ul><li><a href="#链接之间增加空格">链接之间增加空格</a></li><li><a href="#简体中文使用直角引号">简体中文使用直角引号</a></li></ul></li><li><a href="#工具">工具</a></li><li><a href="#谁在这样做">谁在这样做？</a></li><li><a href="#参考文献">参考文献</a></li></ul><!-- vim-markdown-toc --><h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。</p><p>与大家共勉之。」——<a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">vinta/paranoid-auto-spacing</a></p><h3 id="中英文之间需要增加空格"><a href="#中英文之间需要增加空格" class="headerlink" title="中英文之间需要增加空格"></a>中英文之间需要增加空格</h3><p>正确：</p><blockquote><p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。</p></blockquote><p>错误：</p><blockquote><p>在LeanCloud上，数据存储是围绕<code>AVObject</code>进行的。</p></blockquote><blockquote><p>在 LeanCloud上，数据存储是围绕<code>AVObject</code> 进行的。</p></blockquote><p>完整的正确用法：</p><blockquote><p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。每个 <code>AVObject</code> 都包含了与 JSON 兼容的 key-value 对应的数据。数据是 schema-free 的，你不需要在每个 <code>AVObject</code> 上提前指定存在哪些键，只要直接设定对应的 key-value 即可。</p></blockquote><p>例外：「豆瓣FM」等产品名词，按照官方所定义的格式书写。</p><h3 id="中文与数字之间需要增加空格"><a href="#中文与数字之间需要增加空格" class="headerlink" title="中文与数字之间需要增加空格"></a>中文与数字之间需要增加空格</h3><p>正确：</p><blockquote><p>今天出去买菜花了 5000 元。</p></blockquote><p>错误：</p><blockquote><p>今天出去买菜花了 5000元。</p></blockquote><blockquote><p>今天出去买菜花了5000元。</p></blockquote><h3 id="数字与单位之间无需增加空格"><a href="#数字与单位之间无需增加空格" class="headerlink" title="数字与单位之间无需增加空格"></a>数字与单位之间无需增加空格</h3><p>正确：</p><blockquote><p>我家的光纤入户宽带有 10Gbps，SSD 一共有 10TB。</p></blockquote><p>错误：</p><blockquote><p>我家的光纤入户宽带有 10 Gbps，SSD 一共有 20 TB。</p></blockquote><p>另外，度／百分比与数字之间不需要增加空格：</p><p>正确：</p><blockquote><p>今天是 233° 的高温。</p></blockquote><blockquote><p>新 MacBook Pro 有 15% 的 CPU 性能提升。</p></blockquote><p>错误：</p><blockquote><p>今天是 233 ° 的高温。</p></blockquote><blockquote><p>新 MacBook Pro 有 15 % 的 CPU 性能提升。</p></blockquote><h3 id="全角标点与其他字符之间不加空格"><a href="#全角标点与其他字符之间不加空格" class="headerlink" title="全角标点与其他字符之间不加空格"></a>全角标点与其他字符之间不加空格</h3><p>正确：</p><blockquote><p>刚刚买了一部 iPhone，好开心！</p></blockquote><p>错误：</p><blockquote><p>刚刚买了一部 iPhone ，好开心！</p></blockquote><h3 id="ms-text-autospace-to-the-rescue"><a href="#ms-text-autospace-to-the-rescue" class="headerlink" title="-ms-text-autospace to the rescue?"></a><code>-ms-text-autospace</code> to the rescue?</h3><p>Microsoft 有个 <a href="http://msdn.microsoft.com/en-us/library/ie/ms531164(v=vs.85" target="_blank" rel="noopener"><code>-ms-text-autospace</code></a>.aspx) 的 CSS 属性可以实现自动为中英文之间增加空白。不过目前并未普及，另外在其他应用场景，例如 OS X、iOS 的用户界面目前并不存在这个特性，所以请继续保持随手加空格的习惯。</p><h2 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h2><h3 id="不重复使用标点符号"><a href="#不重复使用标点符号" class="headerlink" title="不重复使用标点符号"></a>不重复使用标点符号</h3><p>正确：</p><blockquote><p>德国队竟然战胜了巴西队！</p></blockquote><blockquote><p>她竟然对你说「喵」？！</p></blockquote><p>错误：</p><blockquote><p>德国队竟然战胜了巴西队！！</p></blockquote><blockquote><p>德国队竟然战胜了巴西队！！！！！！！！</p></blockquote><blockquote><p>她竟然对你说「喵」？？！！</p></blockquote><blockquote><p>她竟然对你说「喵」？！？！？？！！</p></blockquote><h2 id="全角和半角"><a href="#全角和半角" class="headerlink" title="全角和半角"></a>全角和半角</h2><p>不明白什么是全角（全形）与半角（半形）符号？请查看维基百科词条『<a href="http://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2" target="_blank" rel="noopener">全角和半角</a>』。</p><h3 id="使用全角中文标点"><a href="#使用全角中文标点" class="headerlink" title="使用全角中文标点"></a>使用全角中文标点</h3><p>正确：</p><blockquote><p>嗨！你知道嘛？今天前台的小妹跟我说「喵」了哎！</p></blockquote><blockquote><p>核磁共振成像（NMRI）是什么原理都不知道？JFGI！</p></blockquote><p>错误：</p><blockquote><p>嗨! 你知道嘛? 今天前台的小妹跟我说 “喵” 了哎!</p></blockquote><blockquote><p>嗨!你知道嘛?今天前台的小妹跟我说”喵”了哎!</p></blockquote><blockquote><p>核磁共振成像 (NMRI) 是什么原理都不知道? JFGI!</p></blockquote><blockquote><p>核磁共振成像(NMRI)是什么原理都不知道?JFGI!</p></blockquote><h3 id="数字使用半角字符"><a href="#数字使用半角字符" class="headerlink" title="数字使用半角字符"></a>数字使用半角字符</h3><p>正确：</p><blockquote><p>这件蛋糕只卖 1000 元。</p></blockquote><p>错误：</p><blockquote><p>这件蛋糕只卖 １０００ 元。</p></blockquote><p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。</p><h3 id="遇到完整的英文整句、特殊名词，其內容使用半角标点"><a href="#遇到完整的英文整句、特殊名词，其內容使用半角标点" class="headerlink" title="遇到完整的英文整句、特殊名词，其內容使用半角标点"></a>遇到完整的英文整句、特殊名词，其內容使用半角标点</h3><p>正确：</p><blockquote><p>乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」</p></blockquote><blockquote><p>推荐你阅读《Hackers &amp; Painters: Big Ideas from the Computer Age》，非常的有趣。</p></blockquote><p>错误：</p><blockquote><p>乔布斯那句话是怎么说的？「Stay hungry，stay foolish。」</p></blockquote><blockquote><p>推荐你阅读《Hackers＆Painters：Big Ideas from the Computer Age》，非常的有趣。</p></blockquote><h2 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h2><h3 id="专有名词使用正确的大小写"><a href="#专有名词使用正确的大小写" class="headerlink" title="专有名词使用正确的大小写"></a>专有名词使用正确的大小写</h3><p>大小写相关用法原属于英文书写范畴，不属于本 wiki 讨论內容，在这里只对部分易错用法进行简述。</p><p>正确：</p><blockquote><p>使用 GitHub 登录</p></blockquote><blockquote><p>我们的客户有 GitHub、Foursquare、Microsoft Corporation、Google、Facebook, Inc.。</p></blockquote><p>错误：</p><blockquote><p>使用 github 登录</p></blockquote><blockquote><p>使用 GITHUB 登录</p></blockquote><blockquote><p>使用 Github 登录</p></blockquote><blockquote><p>使用 gitHub 登录</p></blockquote><blockquote><p>使用 gｲんĤЦ8 登录</p></blockquote><blockquote><p>我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。</p></blockquote><blockquote><p>我们的客户有 GITHUB、FOURSQUARE、MICROSOFT CORPORATION、GOOGLE、FACEBOOK, INC.。</p></blockquote><blockquote><p>我们的客户有 Github、FourSquare、MicroSoft Corporation、Google、FaceBook, Inc.。</p></blockquote><blockquote><p>我们的客户有 gitHub、fourSquare、microSoft Corporation、google、faceBook, Inc.。</p></blockquote><blockquote><p>我们的客户有 gｲんĤЦ8、ｷouЯƧquﾑгє、๓เςг๏ร๏Ŧt ς๏гק๏гคtเ๏ภn、900913、ƒ4ᄃëв๏๏к, IПᄃ.。</p></blockquote><p>注意：当网页中需要配合整体视觉风格而出现全部大写／小写的情形，HTML 中请使用标准的大小写规范进行书写；并通过 <code>text-transform: uppercase;</code>／<code>text-transform: lowercase;</code> 对表现形式进行定义。</p><h3 id="不要使用不地道的缩写"><a href="#不要使用不地道的缩写" class="headerlink" title="不要使用不地道的缩写"></a>不要使用不地道的缩写</h3><p>正确：</p><blockquote><p>我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。</p></blockquote><p>错误：</p><blockquote><p>我们需要一位熟悉 Js、h5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。</p></blockquote><h2 id="争议"><a href="#争议" class="headerlink" title="争议"></a>争议</h2><p>以下用法略带有个人色彩，即：无论是否遵循下述规则，从语法的角度来讲都是<strong>正确</strong>的。</p><h3 id="链接之间增加空格"><a href="#链接之间增加空格" class="headerlink" title="链接之间增加空格"></a>链接之间增加空格</h3><p>用法：</p><blockquote><p>请 <a href="#">提交一个 issue</a> 并分配给相关同事。</p></blockquote><blockquote><p>访问我们网站的最新动态，请 <a href="#">点击这里</a> 进行订阅！</p></blockquote><p>对比用法：</p><blockquote><p>请<a href="#">提交一个 issue</a> 并分配给相关同事。</p></blockquote><blockquote><p>访问我们网站的最新动态，请<a href="#">点击这里</a>进行订阅！</p></blockquote><h3 id="简体中文使用直角引号"><a href="#简体中文使用直角引号" class="headerlink" title="简体中文使用直角引号"></a>简体中文使用直角引号</h3><p>用法：</p><blockquote><p>「老师，『有条不紊』的『紊』是什么意思？」</p></blockquote><p>对比用法：</p><blockquote><p>“老师，‘有条不紊’的‘紊’是什么意思？”</p></blockquote><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><table><thead><tr><th>仓库</th><th>语言</th></tr></thead><tbody><tr><td><a href="https://github.com/vinta/paranoid-auto-spacing" target="_blank" rel="noopener">vinta/paranoid-auto-spacing</a></td><td>JavaScript</td></tr><tr><td><a href="https://github.com/huei90/pangu.node" target="_blank" rel="noopener">huei90/pangu.node</a></td><td>Node.js</td></tr><tr><td><a href="https://github.com/huacnlee/auto-correct" target="_blank" rel="noopener">huacnlee/auto-correct</a></td><td>Ruby</td></tr><tr><td><a href="https://github.com/sparanoid/space-lover" target="_blank" rel="noopener">sparanoid/space-lover</a></td><td>PHP (WordPress)</td></tr><tr><td><a href="https://github.com/NauxLiu/auto-correct" target="_blank" rel="noopener">nauxliu/auto-correct</a></td><td>PHP</td></tr><tr><td><a href="https://github.com/ricoa/copywriting-correct" target="_blank" rel="noopener">ricoa/copywriting-correct</a></td><td>PHP</td></tr><tr><td><a href="https://github.com/hotoo/pangu.vim" target="_blank" rel="noopener">hotoo/pangu.vim</a></td><td>Vim</td></tr><tr><td><a href="https://github.com/sparanoid/grunt-auto-spacing" target="_blank" rel="noopener">sparanoid/grunt-auto-spacing</a></td><td>Node.js (Grunt)</td></tr><tr><td><a href="https://github.com/hjiang/scripts/blob/master/add-space-between-latin-and-cjk" target="_blank" rel="noopener">hjiang/scripts/add-space-between-latin-and-cjk</a></td><td>Python</td></tr></tbody></table><h2 id="谁在这样做？"><a href="#谁在这样做？" class="headerlink" title="谁在这样做？"></a>谁在这样做？</h2><table><thead><tr><th>网站</th><th>文案</th><th>UGC</th></tr></thead><tbody><tr><td><a href="http://www.apple.com/cn/" target="_blank" rel="noopener">Apple 中国</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.apple.com/hk/" target="_blank" rel="noopener">Apple 香港</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.apple.com/tw/" target="_blank" rel="noopener">Apple 台湾</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.microsoft.com/zh-cn/" target="_blank" rel="noopener">Microsoft 中国</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.microsoft.com/zh-hk/" target="_blank" rel="noopener">Microsoft 香港</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.microsoft.com/zh-tw/" target="_blank" rel="noopener">Microsoft 台湾</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://www.zhihu.com/" target="_blank" rel="noopener">知乎</a></td><td>Yes</td><td>部分用户达成</td></tr><tr><td><a href="https://www.v2ex.com/" target="_blank" rel="noopener">V2EX</a></td><td>Yes</td><td>Yes</td></tr><tr><td><a href="https://segmentfault.com/" target="_blank" rel="noopener">SegmentFault</a></td><td>Yes</td><td>部分用户达成</td></tr><tr><td><a href="http://apple4us.com/" target="_blank" rel="noopener">Apple4us</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://www.wandoujia.com/" target="_blank" rel="noopener">豌豆荚</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://ruby-china.org/" target="_blank" rel="noopener">Ruby China</a></td><td>Yes</td><td>标题达成</td></tr><tr><td><a href="https://phphub.org/" target="_blank" rel="noopener">PHPHub</a></td><td>Yes</td><td>标题达成</td></tr><tr><td><a href="http://sspai.com/" target="_blank" rel="noopener">少数派</a></td><td>Yes</td><td>N/A</td></tr></tbody></table><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="http://grammar.about.com/od/punctuationandmechanics/a/Guidelines-For-Using-Capital-Letters.htm" target="_blank" rel="noopener">Guidelines for Using Capital Letters</a></li><li><a href="http://en.wikipedia.org/wiki/Letter_case" target="_blank" rel="noopener">Letter case - Wikipedia</a></li><li><a href="http://www.oxforddictionaries.com/words/punctuation" target="_blank" rel="noopener">Punctuation - Oxford Dictionaries</a></li><li><a href="https://owl.english.purdue.edu/owl/section/1/6/" target="_blank" rel="noopener">Punctuation - The Purdue OWL</a></li><li><a href="http://www.wikihow.com/Use-English-Punctuation-Correctly" target="_blank" rel="noopener">How to Use English Punctuation Corrently - wikiHow</a></li><li><a href="https://zh.opensuse.org/index.php?title=Help:%E6%A0%BC%E5%BC%8F" target="_blank" rel="noopener">格式 - openSUSE</a></li><li><a href="http://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2" target="_blank" rel="noopener">全角和半角 - 维基百科</a></li><li><a href="http://zh.wikipedia.org/wiki/%E5%BC%95%E8%99%9F" target="_blank" rel="noopener">引号 - 维基百科</a></li><li><a href="http://zh.wikipedia.org/wiki/%E7%96%91%E5%95%8F%E9%A9%9A%E5%98%86%E8%99%9F" target="_blank" rel="noopener">疑问惊叹号 - 维基百科</a><h1 id="中文文案排版指北"><a href="#中文文案排版指北" class="headerlink" title="中文文案排版指北"></a>中文文案排版指北</h1><a href="https://david-dm.org/mzlogin/chinese-copywriting-guidelines#info=devDependencies" target="_blank" rel="noopener"><img src="https://david-dm.org/mzlogin/chinese-copywriting-guidelines/dev-status.svg" alt="devDependency Status"></a></li></ul><p>统一中文文案、排版的相关用法，降低团队成员之间的沟通成本，增强网站气质。</p><p>Other languages:</p><ul><li><a href="README.en.md">English</a></li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="noopener">Chinese Traditional</a></li><li><a href="README.md">Chinese Simplified</a></li></ul><hr><h2 id="目录-1"><a href="#目录-1" class="headerlink" title="目录"></a>目录</h2><!-- vim-markdown-toc GFM --><ul><li><a href="#空格">空格</a><ul><li><a href="#中英文之间需要增加空格">中英文之间需要增加空格</a></li><li><a href="#中文与数字之间需要增加空格">中文与数字之间需要增加空格</a></li><li><a href="#数字与单位之间无需增加空格">数字与单位之间无需增加空格</a></li><li><a href="#全角标点与其他字符之间不加空格">全角标点与其他字符之间不加空格</a></li><li><a href="#-ms-text-autospace-to-the-rescue"><code>-ms-text-autospace</code> to the rescue?</a></li></ul></li><li><a href="#标点符号">标点符号</a><ul><li><a href="#不重复使用标点符号">不重复使用标点符号</a></li></ul></li><li><a href="#全角和半角">全角和半角</a><ul><li><a href="#使用全角中文标点">使用全角中文标点</a></li><li><a href="#数字使用半角字符">数字使用半角字符</a></li><li><a href="#遇到完整的英文整句特殊名词其內容使用半角标点">遇到完整的英文整句、特殊名词，其內容使用半角标点</a></li></ul></li><li><a href="#名词">名词</a><ul><li><a href="#专有名词使用正确的大小写">专有名词使用正确的大小写</a></li><li><a href="#不要使用不地道的缩写">不要使用不地道的缩写</a></li></ul></li><li><a href="#争议">争议</a><ul><li><a href="#链接之间增加空格">链接之间增加空格</a></li><li><a href="#简体中文使用直角引号">简体中文使用直角引号</a></li></ul></li><li><a href="#工具">工具</a></li><li><a href="#谁在这样做">谁在这样做？</a></li><li><a href="#参考文献">参考文献</a></li></ul><!-- vim-markdown-toc --><h2 id="空格-1"><a href="#空格-1" class="headerlink" title="空格"></a>空格</h2><p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。</p><p>与大家共勉之。」——<a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">vinta/paranoid-auto-spacing</a></p><h3 id="中英文之间需要增加空格-1"><a href="#中英文之间需要增加空格-1" class="headerlink" title="中英文之间需要增加空格"></a>中英文之间需要增加空格</h3><p>正确：</p><blockquote><p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。</p></blockquote><p>错误：</p><blockquote><p>在LeanCloud上，数据存储是围绕<code>AVObject</code>进行的。</p></blockquote><blockquote><p>在 LeanCloud上，数据存储是围绕<code>AVObject</code> 进行的。</p></blockquote><p>完整的正确用法：</p><blockquote><p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。每个 <code>AVObject</code> 都包含了与 JSON 兼容的 key-value 对应的数据。数据是 schema-free 的，你不需要在每个 <code>AVObject</code> 上提前指定存在哪些键，只要直接设定对应的 key-value 即可。</p></blockquote><p>例外：「豆瓣FM」等产品名词，按照官方所定义的格式书写。</p><h3 id="中文与数字之间需要增加空格-1"><a href="#中文与数字之间需要增加空格-1" class="headerlink" title="中文与数字之间需要增加空格"></a>中文与数字之间需要增加空格</h3><p>正确：</p><blockquote><p>今天出去买菜花了 5000 元。</p></blockquote><p>错误：</p><blockquote><p>今天出去买菜花了 5000元。</p></blockquote><blockquote><p>今天出去买菜花了5000元。</p></blockquote><h3 id="数字与单位之间无需增加空格-1"><a href="#数字与单位之间无需增加空格-1" class="headerlink" title="数字与单位之间无需增加空格"></a>数字与单位之间无需增加空格</h3><p>正确：</p><blockquote><p>我家的光纤入户宽带有 10Gbps，SSD 一共有 10TB。</p></blockquote><p>错误：</p><blockquote><p>我家的光纤入户宽带有 10 Gbps，SSD 一共有 20 TB。</p></blockquote><p>另外，度／百分比与数字之间不需要增加空格：</p><p>正确：</p><blockquote><p>今天是 233° 的高温。</p></blockquote><blockquote><p>新 MacBook Pro 有 15% 的 CPU 性能提升。</p></blockquote><p>错误：</p><blockquote><p>今天是 233 ° 的高温。</p></blockquote><blockquote><p>新 MacBook Pro 有 15 % 的 CPU 性能提升。</p></blockquote><h3 id="全角标点与其他字符之间不加空格-1"><a href="#全角标点与其他字符之间不加空格-1" class="headerlink" title="全角标点与其他字符之间不加空格"></a>全角标点与其他字符之间不加空格</h3><p>正确：</p><blockquote><p>刚刚买了一部 iPhone，好开心！</p></blockquote><p>错误：</p><blockquote><p>刚刚买了一部 iPhone ，好开心！</p></blockquote><h3 id="ms-text-autospace-to-the-rescue-1"><a href="#ms-text-autospace-to-the-rescue-1" class="headerlink" title="-ms-text-autospace to the rescue?"></a><code>-ms-text-autospace</code> to the rescue?</h3><p>Microsoft 有个 <a href="http://msdn.microsoft.com/en-us/library/ie/ms531164(v=vs.85" target="_blank" rel="noopener"><code>-ms-text-autospace</code></a>.aspx) 的 CSS 属性可以实现自动为中英文之间增加空白。不过目前并未普及，另外在其他应用场景，例如 OS X、iOS 的用户界面目前并不存在这个特性，所以请继续保持随手加空格的习惯。</p><h2 id="标点符号-1"><a href="#标点符号-1" class="headerlink" title="标点符号"></a>标点符号</h2><h3 id="不重复使用标点符号-1"><a href="#不重复使用标点符号-1" class="headerlink" title="不重复使用标点符号"></a>不重复使用标点符号</h3><p>正确：</p><blockquote><p>德国队竟然战胜了巴西队！</p></blockquote><blockquote><p>她竟然对你说「喵」？！</p></blockquote><p>错误：</p><blockquote><p>德国队竟然战胜了巴西队！！</p></blockquote><blockquote><p>德国队竟然战胜了巴西队！！！！！！！！</p></blockquote><blockquote><p>她竟然对你说「喵」？？！！</p></blockquote><blockquote><p>她竟然对你说「喵」？！？！？？！！</p></blockquote><h2 id="全角和半角-1"><a href="#全角和半角-1" class="headerlink" title="全角和半角"></a>全角和半角</h2><p>不明白什么是全角（全形）与半角（半形）符号？请查看维基百科词条『<a href="http://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2" target="_blank" rel="noopener">全角和半角</a>』。</p><h3 id="使用全角中文标点-1"><a href="#使用全角中文标点-1" class="headerlink" title="使用全角中文标点"></a>使用全角中文标点</h3><p>正确：</p><blockquote><p>嗨！你知道嘛？今天前台的小妹跟我说「喵」了哎！</p></blockquote><blockquote><p>核磁共振成像（NMRI）是什么原理都不知道？JFGI！</p></blockquote><p>错误：</p><blockquote><p>嗨! 你知道嘛? 今天前台的小妹跟我说 “喵” 了哎!</p></blockquote><blockquote><p>嗨!你知道嘛?今天前台的小妹跟我说”喵”了哎!</p></blockquote><blockquote><p>核磁共振成像 (NMRI) 是什么原理都不知道? JFGI!</p></blockquote><blockquote><p>核磁共振成像(NMRI)是什么原理都不知道?JFGI!</p></blockquote><h3 id="数字使用半角字符-1"><a href="#数字使用半角字符-1" class="headerlink" title="数字使用半角字符"></a>数字使用半角字符</h3><p>正确：</p><blockquote><p>这件蛋糕只卖 1000 元。</p></blockquote><p>错误：</p><blockquote><p>这件蛋糕只卖 １０００ 元。</p></blockquote><p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。</p><h3 id="遇到完整的英文整句、特殊名词，其內容使用半角标点-1"><a href="#遇到完整的英文整句、特殊名词，其內容使用半角标点-1" class="headerlink" title="遇到完整的英文整句、特殊名词，其內容使用半角标点"></a>遇到完整的英文整句、特殊名词，其內容使用半角标点</h3><p>正确：</p><blockquote><p>乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」</p></blockquote><blockquote><p>推荐你阅读《Hackers &amp; Painters: Big Ideas from the Computer Age》，非常的有趣。</p></blockquote><p>错误：</p><blockquote><p>乔布斯那句话是怎么说的？「Stay hungry，stay foolish。」</p></blockquote><blockquote><p>推荐你阅读《Hackers＆Painters：Big Ideas from the Computer Age》，非常的有趣。</p></blockquote><h2 id="名词-1"><a href="#名词-1" class="headerlink" title="名词"></a>名词</h2><h3 id="专有名词使用正确的大小写-1"><a href="#专有名词使用正确的大小写-1" class="headerlink" title="专有名词使用正确的大小写"></a>专有名词使用正确的大小写</h3><p>大小写相关用法原属于英文书写范畴，不属于本 wiki 讨论內容，在这里只对部分易错用法进行简述。</p><p>正确：</p><blockquote><p>使用 GitHub 登录</p></blockquote><blockquote><p>我们的客户有 GitHub、Foursquare、Microsoft Corporation、Google、Facebook, Inc.。</p></blockquote><p>错误：</p><blockquote><p>使用 github 登录</p></blockquote><blockquote><p>使用 GITHUB 登录</p></blockquote><blockquote><p>使用 Github 登录</p></blockquote><blockquote><p>使用 gitHub 登录</p></blockquote><blockquote><p>使用 gｲんĤЦ8 登录</p></blockquote><blockquote><p>我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。</p></blockquote><blockquote><p>我们的客户有 GITHUB、FOURSQUARE、MICROSOFT CORPORATION、GOOGLE、FACEBOOK, INC.。</p></blockquote><blockquote><p>我们的客户有 Github、FourSquare、MicroSoft Corporation、Google、FaceBook, Inc.。</p></blockquote><blockquote><p>我们的客户有 gitHub、fourSquare、microSoft Corporation、google、faceBook, Inc.。</p></blockquote><blockquote><p>我们的客户有 gｲんĤЦ8、ｷouЯƧquﾑгє、๓เςг๏ร๏Ŧt ς๏гק๏гคtเ๏ภn、900913、ƒ4ᄃëв๏๏к, IПᄃ.。</p></blockquote><p>注意：当网页中需要配合整体视觉风格而出现全部大写／小写的情形，HTML 中请使用标准的大小写规范进行书写；并通过 <code>text-transform: uppercase;</code>／<code>text-transform: lowercase;</code> 对表现形式进行定义。</p><h3 id="不要使用不地道的缩写-1"><a href="#不要使用不地道的缩写-1" class="headerlink" title="不要使用不地道的缩写"></a>不要使用不地道的缩写</h3><p>正确：</p><blockquote><p>我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。</p></blockquote><p>错误：</p><blockquote><p>我们需要一位熟悉 Js、h5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。</p></blockquote><h2 id="争议-1"><a href="#争议-1" class="headerlink" title="争议"></a>争议</h2><p>以下用法略带有个人色彩，即：无论是否遵循下述规则，从语法的角度来讲都是<strong>正确</strong>的。</p><h3 id="链接之间增加空格-1"><a href="#链接之间增加空格-1" class="headerlink" title="链接之间增加空格"></a>链接之间增加空格</h3><p>用法：</p><blockquote><p>请 <a href="#">提交一个 issue</a> 并分配给相关同事。</p></blockquote><blockquote><p>访问我们网站的最新动态，请 <a href="#">点击这里</a> 进行订阅！</p></blockquote><p>对比用法：</p><blockquote><p>请<a href="#">提交一个 issue</a> 并分配给相关同事。</p></blockquote><blockquote><p>访问我们网站的最新动态，请<a href="#">点击这里</a>进行订阅！</p></blockquote><h3 id="简体中文使用直角引号-1"><a href="#简体中文使用直角引号-1" class="headerlink" title="简体中文使用直角引号"></a>简体中文使用直角引号</h3><p>用法：</p><blockquote><p>「老师，『有条不紊』的『紊』是什么意思？」</p></blockquote><p>对比用法：</p><blockquote><p>“老师，‘有条不紊’的‘紊’是什么意思？”</p></blockquote><h2 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h2><table><thead><tr><th>仓库</th><th>语言</th></tr></thead><tbody><tr><td><a href="https://github.com/vinta/paranoid-auto-spacing" target="_blank" rel="noopener">vinta/paranoid-auto-spacing</a></td><td>JavaScript</td></tr><tr><td><a href="https://github.com/huei90/pangu.node" target="_blank" rel="noopener">huei90/pangu.node</a></td><td>Node.js</td></tr><tr><td><a href="https://github.com/huacnlee/auto-correct" target="_blank" rel="noopener">huacnlee/auto-correct</a></td><td>Ruby</td></tr><tr><td><a href="https://github.com/sparanoid/space-lover" target="_blank" rel="noopener">sparanoid/space-lover</a></td><td>PHP (WordPress)</td></tr><tr><td><a href="https://github.com/NauxLiu/auto-correct" target="_blank" rel="noopener">nauxliu/auto-correct</a></td><td>PHP</td></tr><tr><td><a href="https://github.com/ricoa/copywriting-correct" target="_blank" rel="noopener">ricoa/copywriting-correct</a></td><td>PHP</td></tr><tr><td><a href="https://github.com/hotoo/pangu.vim" target="_blank" rel="noopener">hotoo/pangu.vim</a></td><td>Vim</td></tr><tr><td><a href="https://github.com/sparanoid/grunt-auto-spacing" target="_blank" rel="noopener">sparanoid/grunt-auto-spacing</a></td><td>Node.js (Grunt)</td></tr><tr><td><a href="https://github.com/hjiang/scripts/blob/master/add-space-between-latin-and-cjk" target="_blank" rel="noopener">hjiang/scripts/add-space-between-latin-and-cjk</a></td><td>Python</td></tr></tbody></table><h2 id="谁在这样做？-1"><a href="#谁在这样做？-1" class="headerlink" title="谁在这样做？"></a>谁在这样做？</h2><table><thead><tr><th>网站</th><th>文案</th><th>UGC</th></tr></thead><tbody><tr><td><a href="http://www.apple.com/cn/" target="_blank" rel="noopener">Apple 中国</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.apple.com/hk/" target="_blank" rel="noopener">Apple 香港</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.apple.com/tw/" target="_blank" rel="noopener">Apple 台湾</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.microsoft.com/zh-cn/" target="_blank" rel="noopener">Microsoft 中国</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.microsoft.com/zh-hk/" target="_blank" rel="noopener">Microsoft 香港</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="http://www.microsoft.com/zh-tw/" target="_blank" rel="noopener">Microsoft 台湾</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://www.zhihu.com/" target="_blank" rel="noopener">知乎</a></td><td>Yes</td><td>部分用户达成</td></tr><tr><td><a href="https://www.v2ex.com/" target="_blank" rel="noopener">V2EX</a></td><td>Yes</td><td>Yes</td></tr><tr><td><a href="https://segmentfault.com/" target="_blank" rel="noopener">SegmentFault</a></td><td>Yes</td><td>部分用户达成</td></tr><tr><td><a href="http://apple4us.com/" target="_blank" rel="noopener">Apple4us</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://www.wandoujia.com/" target="_blank" rel="noopener">豌豆荚</a></td><td>Yes</td><td>N/A</td></tr><tr><td><a href="https://ruby-china.org/" target="_blank" rel="noopener">Ruby China</a></td><td>Yes</td><td>标题达成</td></tr><tr><td><a href="https://phphub.org/" target="_blank" rel="noopener">PHPHub</a></td><td>Yes</td><td>标题达成</td></tr><tr><td><a href="http://sspai.com/" target="_blank" rel="noopener">少数派</a></td><td>Yes</td><td>N/A</td></tr></tbody></table><h2 id="参考文献-1"><a href="#参考文献-1" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="http://grammar.about.com/od/punctuationandmechanics/a/Guidelines-For-Using-Capital-Letters.htm" target="_blank" rel="noopener">Guidelines for Using Capital Letters</a></li><li><a href="http://en.wikipedia.org/wiki/Letter_case" target="_blank" rel="noopener">Letter case - Wikipedia</a></li><li><a href="http://www.oxforddictionaries.com/words/punctuation" target="_blank" rel="noopener">Punctuation - Oxford Dictionaries</a></li><li><a href="https://owl.english.purdue.edu/owl/section/1/6/" target="_blank" rel="noopener">Punctuation - The Purdue OWL</a></li><li><a href="http://www.wikihow.com/Use-English-Punctuation-Correctly" target="_blank" rel="noopener">How to Use English Punctuation Corrently - wikiHow</a></li><li><a href="https://zh.opensuse.org/index.php?title=Help:%E6%A0%BC%E5%BC%8F" target="_blank" rel="noopener">格式 - openSUSE</a></li><li><a href="http://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2" target="_blank" rel="noopener">全角和半角 - 维基百科</a></li><li><a href="http://zh.wikipedia.org/wiki/%E5%BC%95%E8%99%9F" target="_blank" rel="noopener">引号 - 维基百科</a></li><li><a href="http://zh.wikipedia.org/wiki/%E7%96%91%E5%95%8F%E9%A9%9A%E5%98%86%E8%99%9F" target="_blank" rel="noopener">疑问惊叹号 - 维基百科</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>提问的智慧</title>
      <link href="/180916/"/>
      <url>/180916/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md" target="_blank" rel="noopener">https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md</a></p></blockquote><p><strong>How To Ask Questions The Smart Way</strong></p><p>Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen</p><p>本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。</p><p>原文网址：<a href="http://www.catb.org/~esr/faqs/smart-questions.html" target="_blank" rel="noopener">http://www.catb.org/~esr/faqs/smart-questions.html</a></p><p>Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu</p><p>本中文指南是基于原文 3.10 版以及 2010 年由 <a href="https://github.com/gasolin" target="_blank" rel="noopener">Gasolin</a> 所翻译版本的最新翻译；</p><p>协助指出翻译问题，<strong>请<a href="https://github.com/ryanhanwu/smartquestions/issues/new" target="_blank" rel="noopener">发 Issue</a>，或直接<a href="https://github.com/ryanhanwu/smartquestions/compare/" target="_blank" rel="noopener">发 Pull Request</a> 给我。</strong></p><p>本文另有<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README.md" target="_blank" rel="noopener">繁體中文版</a>。</p><h2 id="原文版本历史"><a href="#原文版本历史" class="headerlink" title="原文版本历史"></a><a href="https://github.com/ryanhanwu/smartquestions/blob/master/history.md" target="_blank" rel="noopener">原文版本历史</a></h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#声明">声明</a></li><li><a href="#简介">简介</a></li><li><a href="#在提问之前">在提问之前</a></li><li><a href="#当你提问时">当你提问时</a><ul><li><a href="#慎选提问的论坛">慎选提问的论坛</a></li><li><a href="#stack-overflow">Stack Overflow</a></li><li><a href="#网站和-irc-论坛">网站和 IRC 论坛</a></li><li><a href="#第二步使用项目邮件列表">第二步，使用项目邮件列表</a></li><li><a href="#使用有意义且描述明确的标题">使用有意义且描述明确的标题</a></li><li><a href="#使问题容易回复">使问题容易回复</a></li><li><a href="#用清晰正确精准并合法语法的语句">用清晰、正确、精准并合法语法的语句</a></li><li><a href="#使用易于读取且标准的文件格式发送问题">使用易于读取且标准的文件格式发送问题</a></li><li><a href="#精确地描述问题并言之有物">精确地描述问题并言之有物</a></li><li><a href="#话不在多而在精">话不在多而在精</a></li><li><a href="#别动辄声称找到-bug">别动辄声称找到 Bug</a></li><li><a href="#可以低声下气但还是要先做功课">可以低声下气，但还是要先做功课</a></li><li><a href="#描述问题症状而非猜测">描述问题症状而非猜测</a></li><li><a href="#按发生时间先后列出问题症状">按发生时间先后列出问题症状</a></li><li><a href="#描述目标而不是过程">描述目标而不是过程</a></li><li><a href="#别要求使用私人电邮回复">别要求使用私人电邮回复</a></li><li><a href="#清楚明确的表达你的问题以及需求">清楚明确的表达你的问题以及需求</a></li><li><a href="#询问有关代码的问题时">询问有关代码的问题时</a></li><li><a href="#别把自己家庭作业的问题贴上来">别把自己家庭作业的问题贴上来</a></li><li><a href="#去掉无意义的提问句">去掉无意义的提问句</a></li><li><a href="#即使你很急也不要在标题写紧急">即使你很急也不要在标题写紧急</a></li><li><a href="#礼多人不怪而且有时还很有帮助">礼多人不怪，而且有时还很有帮助</a></li><li><a href="#问题解决后加个简短的补充说明">问题解决后，加个简短的补充说明</a></li></ul></li><li><a href="#如何解读答案">如何解读答案</a><ul><li><a href="#rtfm-和-stfw如何知道你已完全搞砸了">RTFM 和 STFW：如何知道你已完全搞砸了</a></li><li><a href="#如果还是搞不懂">如果还是搞不懂</a></li><li><a href="#处理无礼的回应">处理无礼的回应</a></li></ul></li><li><a href="#如何避免扮演失败者">如何避免扮演失败者</a></li><li><a href="#不该问的问题">不该问的问题</a></li><li><a href="#好问题与蠢问题">好问题与蠢问题</a></li><li><a href="#如果得不到回答">如果得不到回答</a></li><li><a href="#如何更好地回答问题">如何更好地回答问题</a></li><li><a href="#相关资源">相关资源</a></li><li><a href="#鸣谢">鸣谢</a></li></ul><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：</p><p><strong>本指南不提供此项目的实际支持服务！</strong></p><p>我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。</p><p>如果你是因为需要某些协助而正在阅读这本指南，并且最后离开是因为发现从本指南作者们身上得不到直接的协助，那么你就是我们所说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中是教你如何从那些真正懂得你所遇到软件或硬件问题的人取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在<a href="http://www.catb.org/~esr/faqs/hacker-howto.html" target="_blank" rel="noopener">黑客</a>的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。</p><p>不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件<strong>好事</strong>；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。</p><p>首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，”好问题！”是诚挚的大力称赞。</p><p>尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。</p><p>我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 <code>失败者（撸瑟）</code> （由于历史原因，我们有时把它拼作 <code>lusers</code>）。</p><p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。</p><p>我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答<code>赢家（winner）</code>的问题。</p><p>如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。</p><p>所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 – 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。</p><p>如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 – 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。</p><p>（欢迎对本指南提出改进意见。你可以 email 你的建议至 <a href="esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。然而请注意，本文并非<a href="http://www.ietf.org/rfc/rfc1855.txt" target="_blank" rel="noopener">网络礼节</a>的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。</p><h2 id="在提问之前"><a href="#在提问之前" class="headerlink" title="在提问之前"></a>在提问之前</h2><p>在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：</p><ol><li>尝试在你准备提问的论坛的旧文章中搜索答案。</li><li>尝试上网搜索以找到答案。</li><li>尝试阅读手册以找到答案。</li><li>尝试阅读常见问题文件（FAQ）以找到答案。</li><li>尝试自己检查或试验以找到答案。</li><li>向你身边的强者朋友打听以找到答案。</li><li>如果你是程序开发者，请尝试阅读源代码以找到答案。</li></ol><p>当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所<strong>学到</strong>的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。</p><p>运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（既搜索 <a href="http://groups.google.com/" target="_blank" rel="noopener">Google 论坛</a>，也搜索网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 <code>我在 Google 中搜过下列句子但没有找到什么有用的东西</code> 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。</p><p>别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。</p><p>准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。</p><p>小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着<code>蠢问题…</code>， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。</p><p>绝不要自以为<strong>够格</strong>得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去<strong>挣到</strong>一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。</p><p>另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。<code>谁能给点提示？</code>、<code>我的这个例子里缺了什么？</code>以及<code>我应该检查什么地方</code>比<code>请把我需要的确切的过程贴出来</code>更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。</p><h2 id="当你提问时"><a href="#当你提问时" class="headerlink" title="当你提问时"></a>当你提问时</h2><h3 id="慎选提问的论坛"><a href="#慎选提问的论坛" class="headerlink" title="慎选提问的论坛"></a>慎选提问的论坛</h3><p>小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：</p><ul><li>在与主题不合的论坛上贴出你的问题。</li><li>在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。</li><li>在太多的不同新闻群组上重复转贴同样的问题（cross-post）。</li><li>向既非熟人也没有义务解决你问题的人发送私人电邮。</li></ul><p>黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。</p><p>因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括<strong>阅读</strong> FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。</p><p>向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 – 如果你不确定，那就向别处发送，或者压根别发。</p><p>在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p><p>别像机关枪似的一次”扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。</p><p>搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。</p><p>一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。</p><p>可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。</p><h3 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h3><p>搜索，<strong>然后</strong> 在 Stack Exchange 问。</p><p>近年来，Stack Exchange community 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。</p><p>因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。</p><p>Stack Exchange 已经成长到<a href="http://stackexchange.com/sites" target="_blank" rel="noopener">超过一百个网站</a>，以下是最常用的几个站：</p><ul><li>Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。</li><li>Stack Overflow 是问写程序有关的问题。</li><li>Server Fault 是问服务器和网管相关的问题。</li></ul><h3 id="网站和-IRC-论坛"><a href="#网站和-IRC-论坛" class="headerlink" title="网站和 IRC 论坛"></a>网站和 IRC 论坛</h3><p>本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。</p><p>事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用<strong>我们的</strong>版本”。</p><p>在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p><p>通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。</p><p>在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。</p><h3 id="第二步，使用项目邮件列表"><a href="#第二步，使用项目邮件列表" class="headerlink" title="第二步，使用项目邮件列表"></a>第二步，使用项目邮件列表</h3><p>当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：</p><ul><li>任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。</li><li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。</li><li>大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li><li>如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li></ul><p>如果一个项目既有”使用者” 也有”开发者”（或”黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向”使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。</p><p>然而，如果你<strong>确信</strong>你的问题很特别，而且在”使用者” 列表或论坛中几天都没有回复，可以试试前往”开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p><p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p><h3 id="使用有意义且描述明确的标题"><a href="#使用有意义且描述明确的标题" class="headerlink" title="使用有意义且描述明确的标题"></a>使用有意义且描述明确的标题</h3><p>在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的<code>帮帮忙</code>、<code>跪求</code>、<code>急</code>（更别说<code>救命啊！！！！</code>这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。</p><p>一个好标题范例是<code>目标 —— 差异</code>式的描述，许多技术支持组织就是这样做的。在<code>目标</code>部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p><blockquote><p>蠢问题：救命啊！我的笔记本电脑不能正常显示了！</p></blockquote><blockquote><p>聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。</p></blockquote><blockquote><p>更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。</p></blockquote><p>编写<code>目标 —— 差异</code> 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境<strong>和</strong>你遇到的问题。</p><p>总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。</p><p>如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 <code>Re: 测试</code> 或者 <code>Re: 新 bug</code> 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。</p><p>对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。</p><p>仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。</p><p>在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你<strong>只想</strong>在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。</p><h3 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h3><p>以<code>请将你的回复寄到……</code>来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，<a href="http://linuxmafia.com/faq/Mail/muas.html" target="_blank" rel="noopener">换个好点的</a>；如果是操作系统不支持这种邮件程序，也换个好点的。</p><p>在论坛，要求通过电子邮件回复是非常无礼的，除非你相信回复的信息可能比较敏感（而且有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如<code>追踪此讨论串</code>、<code>有回复时发送邮件提醒</code>等功能。</p><h3 id="用清晰、正确、精准并语法正确的语句"><a href="#用清晰、正确、精准并语法正确的语句" class="headerlink" title="用清晰、正确、精准并语法正确的语句"></a>用清晰、正确、精准并语法正确的语句</h3><p>我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。</p><p>正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它<strong>必须很</strong>准确，而且有迹象表明你是在思考和关注问题。</p><p>正确地拼写、使用标点和大小写，不要将<code>its</code>混淆为<code>it&#39;s</code>，<code>loose</code>搞成<code>lose</code>或者将<code>discrete</code>弄成<code>discreet</code>。不要<strong>全部用大写</strong>，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。<a href="http://en.wikipedia.org/wiki/Alan_Cox" target="_blank" rel="noopener">Alan Cox</a> 也许可以这样做，但你不行）。</p><p>更白话的说，如果你写得像是个半文盲[译注：<a href="http://zh.wikipedia.org/wiki/小白" target="_blank" rel="noopener">小白</a>]，那多半得不到理睬。也不要使用即时通信中的简写或<a href="http://zh.wikipedia.org/wiki/火星文" target="_blank" rel="noopener">火星文</a>，如将<code>的</code>简化为<code>d</code>会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p><p>如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。</p><p>如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：<br>[译注：以下附上原文以供使用]</p><blockquote><p>English is not my native language; please excuse typing errors.</p></blockquote><ul><li>英文不是我的母语，请原谅我的错字或语法。</li></ul><blockquote><p>If you speak $LANGUAGE, please email/PM me;<br>I may need assistance translating my question.</p></blockquote><ul><li>如果你说<strong>某语言</strong>，请寄信/私讯给我；我需要有人协助我翻译我的问题。</li></ul><blockquote><p>I am familiar with the technical terms,<br>but some slang expressions and idioms are difficult for me.</p></blockquote><ul><li>我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。</li></ul><blockquote><p>I’ve posted my question in $LANGUAGE and English.<br>I’ll be glad to translate responses, if you only use one or the other.</p></blockquote><ul><li>我把我的问题用<strong>某语言</strong>和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。</li></ul><h3 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h3><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p><ul><li>使用纯文字而不是 HTML (<a href="http://archive.birdhouse.org/etc/evilmail.html" target="_blank" rel="noopener">关闭 HTML</a> 并不难）。</li><li>使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。</li><li>不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。</li><li>但是，对一些特殊的文件<strong>不要</strong>设置固定宽度（譬如日志档案拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。</li><li>在英语论坛中，不要使用<code>Quoted-Printable</code> MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的<code>=20</code>符号既难看也分散注意力，甚至有可能破坏内容的语意。</li><li>绝对，<strong>永远</strong>不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。</li><li>如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的<code>智能引号</code>功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉<code>智能引号</code>单选框），以免在你的邮件中到处散布垃圾字符。</li><li>在论坛，勿滥用<code>表情符号</code>和<code>HTML</code>功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。</li></ul><p>如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的<code>查看源代码</code>命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。</p><h3 id="精确地描述问题并言之有物"><a href="#精确地描述问题并言之有物" class="headerlink" title="精确地描述问题并言之有物"></a>精确地描述问题并言之有物</h3><ul><li>仔细、清楚地描述你的问题或 Bug 的症状。</li><li>描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：<code>Fedora Core 4</code>、<code>Slackware 9.1</code>等）。</li><li>描述在提问前你是怎样去研究和理解这个问题的。</li><li>描述在提问前为确定问题而采取的诊断步骤。</li><li>描述最近做过什么可能相关的硬件或软件变更。</li><li>尽可能的提供一个可以<code>重现这个问题的可控环境</code>的方法。</li></ul><p>尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。</p><p>以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。</p><p><a href="http://www.chiark.greenend.org.uk/~sgtatham/" target="_blank" rel="noopener">Simon Tatham</a> 写过一篇名为《<a href="http://www.chiark.greenend.org.uk/~sgtatham/bugs-tw.html" target="_blank" rel="noopener">如何有效的报告 Bug</a>》的出色文章。强力推荐你也读一读。</p><h3 id="话不在多而在精"><a href="#话不在多而在精" class="headerlink" title="话不在多而在精"></a>话不在多而在精</h3><p>你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。</p><p>这样做的用处至少有三点。<br>第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；<br>第二，简化问题使你更有可能得到<strong>有用</strong>的答案；<br>第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。</p><h3 id="别动辄声称找到-Bug"><a href="#别动辄声称找到-Bug" class="headerlink" title="别动辄声称找到 Bug"></a>别动辄声称找到 Bug</h3><p>当你在使用软件中遇到问题，除非你非常、<strong>非常</strong>的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的<code>Bug</code>，你应该能提供相应位置的修正或替代文件。</p><p>请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前<a href="#在提问之前">已经做了这些，是吧</a>？）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p><p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有<code>Bug</code>时，这尤其严重。</p><p>提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是<strong>你</strong>做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。</p><h3 id="低声下气不能代替你的功课"><a href="#低声下气不能代替你的功课" class="headerlink" title="低声下气不能代替你的功课"></a>低声下气不能代替你的功课</h3><p>有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：<code>我知道我只是个可悲的新手，一个撸瑟，但...</code>。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。</p><p>别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。</p><p>有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。</p><h3 id="描述问题症状而非你的猜测"><a href="#描述问题症状而非你的猜测" class="headerlink" title="描述问题症状而非你的猜测"></a>描述问题症状而非你的猜测</h3><p>告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。</p><p><strong>蠢问题</strong></p><blockquote><p>我在编译内核时接连遇到 SIG11 错误，<br>我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组），<br>256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，<br>但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。<br>所有内存都换过了，没有效果。相关部分的标准编译记录如下…。</p></blockquote><p>由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：<code>所有的诊断专家都来自密苏里州。</code> 美国国务院的官方座右铭则是：<code>让我看看</code>（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：<code>我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。</code>） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！</p><h3 id="按发生时间先后列出问题症状"><a href="#按发生时间先后列出问题症状" class="headerlink" title="按发生时间先后列出问题症状"></a>按发生时间先后列出问题症状</h3><p>问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</p><p>如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，<code>多</code>不等于<code>好</code>。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。</p><p>如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。</p><h3 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h3><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p><p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p><p><strong>蠢问题</strong></p><blockquote><p>我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），<br>但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。</p></blockquote><p>第二种提问法比较聪明，你可能得到像是<code>建议采用另一个更合适的工具</code>的回复。</p><h3 id="别要求使用私人电邮回复"><a href="#别要求使用私人电邮回复" class="headerlink" title="别要求使用私人电邮回复"></a>别要求使用私人电邮回复</h3><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。</p><p>当你要求私下回复时，这个过程和奖励都被中止。别这样做，让<strong>回复者</strong>来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。</p><p>这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是<code>向我发电邮，我将为论坛归纳这些回复</code>。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。</p><h3 id="清楚明确的表达你的问题以及需求"><a href="#清楚明确的表达你的问题以及需求" class="headerlink" title="清楚明确的表达你的问题以及需求"></a>清楚明确的表达你的问题以及需求</h3><p>漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。</p><p>如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。</p><p>要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。</p><p>所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问<code>我想更好的理解 X，可否指点一下哪有好一点说明？</code>通常比问<code>你能解释一下 X 吗？</code>更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。</p><h3 id="询问有关代码的问题时"><a href="#询问有关代码的问题时" class="headerlink" title="询问有关代码的问题时"></a>询问有关代码的问题时</h3><p>别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：<code>它不能工作</code>会让你完全被忽略。只贴几十行代码，然后说一句：<code>在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;</code>比较有可能让你得到回应。</p><p>最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能<strong>刚好</strong>展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看<a href="#话不在多而在精">话不在多而在精</a>一节）。</p><p>一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。</p><p>如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p><h3 id="别把自己家庭作业的问题贴上来"><a href="#别把自己家庭作业的问题贴上来" class="headerlink" title="别把自己家庭作业的问题贴上来"></a>别把自己家庭作业的问题贴上来</h3><p>黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由<strong>你</strong>来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。</p><p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的<strong>使用者</strong>邮件列表或论坛中提问。尽管黑客们<strong>会</strong>看出来，但一些有经验的使用者也许仍会给你一些提示。</p><h3 id="去掉无意义的提问句"><a href="#去掉无意义的提问句" class="headerlink" title="去掉无意义的提问句"></a>去掉无意义的提问句</h3><p>避免用无意义的话结束提问，例如<code>有人能帮我吗？</code>或者<code>这有答案吗？</code>。</p><p>首先：如果你对问题的描述不是很好，这样问更是画蛇添足。</p><p>其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：<code>没错，有人能帮你</code>或者<code>不，没答案</code>。</p><p>一般来说，避免用 <code>是或否</code>、<code>对或错</code>、<code>有或没有</code>类型的问句，除非你想得到<a href="http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/questions-with-yes-or-no-answers.html" target="_blank" rel="noopener">是或否类型的回答</a>。</p><h3 id="即使你很急也不要在标题写紧急"><a href="#即使你很急也不要在标题写紧急" class="headerlink" title="即使你很急也不要在标题写紧急"></a>即使你很急也不要在标题写<code>紧急</code></h3><p>这是你的问题，不是我们的。宣称<code>紧急</code>极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，<code>紧急</code>这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。</p><p>有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。</p><p>当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如<code>紧急：帮我救救这个毛绒绒的小海豹！</code>肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。</p><p>如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。</p><h3 id="礼多人不怪，而且有时还很有帮助"><a href="#礼多人不怪，而且有时还很有帮助" class="headerlink" title="礼多人不怪，而且有时还很有帮助"></a>礼多人不怪，而且有时还很有帮助</h3><p>彬彬有礼，多用<code>请</code>和<code>谢谢您的关注</code>，或<code>谢谢你的关照</code>。让大家都知道你对他们花时间免费提供帮助心存感激。</p><p>坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）</p><p>然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。</p><p>（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得<code>先谢了</code>意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说<code>先谢了</code>，<strong>然后</strong>事后再对回复者表示感谢，或者换种方式表达感激，譬如用<code>谢谢你的关注</code>或<code>谢谢你的关照</code>。）</p><h3 id="问题解决后，加个简短的补充说明"><a href="#问题解决后，加个简短的补充说明" class="headerlink" title="问题解决后，加个简短的补充说明"></a>问题解决后，加个简短的补充说明</h3><p>问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。</p><p>最理想的方式是向最初提问的话题回复此消息，并在标题中包含<code>已修正</code>，<code>已解决</code>或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串<code>问题 X</code>和<code>问题 X - 已解决</code>的潜在回复者就明白不用再浪费时间了（除非他个人觉得<code>问题 X</code>的有趣），因此可以利用此时间去解决其它问题。</p><p>补充说明不必很长或是很深入；简单的一句<code>你好，原来是网线出了问题！谢谢大家 – Bill</code>比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。</p><p>对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此<strong>之后</strong>才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。</p><p>除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。</p><p>至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。</p><p>思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。</p><p>在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。</p><h2 id="如何解读答案"><a href="#如何解读答案" class="headerlink" title="如何解读答案"></a>如何解读答案</h2><p><a id="RTFM"></a></p><h3 id="RTFM-和-STFW：如何知道你已完全搞砸了"><a href="#RTFM-和-STFW：如何知道你已完全搞砸了" class="headerlink" title="RTFM 和 STFW：如何知道你已完全搞砸了"></a>RTFM 和 STFW：如何知道你已完全搞砸了</h3><p>有一个古老而神圣的传统：如果你收到<code>RTFM （Read The Fucking Manual）</code>的回应，回答者认为你<strong>应该去读他妈的手册</strong>。当然，基本上他是对的，你应该去读一读。</p><p>RTFM 有一个年轻的亲戚。如果你收到<code>STFW（Search The Fucking Web）</code>的回应，回答者认为你<strong>应该到他妈的网上搜索</strong>过了。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 <strong><a href="http://lmgtfy.com/" target="_blank" rel="noopener">Google 是你的朋友</a></strong>！）</p><p>在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。</p><p>通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为</p><ul><li><strong>你需要的信息非常容易获得</strong>；</li><li><strong>你自己去搜索这些信息比灌给你，能让你学到更多</strong>。</li></ul><p>你不应该因此不爽；<strong>依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见</strong>。你应该对他祖母般的慈祥表示感谢。</p><h3 id="如果还是搞不懂"><a href="#如果还是搞不懂" class="headerlink" title="如果还是搞不懂"></a>如果还是搞不懂</h3><p>如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。</p><p>比方说，如果我回答你：<code>看来似乎是 zentry 卡住了；你应该先清除它。</code>，然后，这是一个<strong>很糟的</strong>后续问题回应：<code>zentry 是什么？</code> <strong>好</strong>的问法应该是这样：<code>哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？</code></p><h3 id="处理无礼的回应"><a href="#处理无礼的回应" class="headerlink" title="处理无礼的回应"></a>处理无礼的回应</h3><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。</p><p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这<strong>没有</strong>发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而<strong>你</strong>将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p><p>另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p><p>（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会<strong>正常</strong>交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们<strong>喜欢</strong>我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。</p><p>Jeff Bigler 的观察总结和这个相关也值得一读 (<strong><a href="http://www.mit.edu/~jcb/tact.html" target="_blank" rel="noopener">tact filters</a></strong>)。</p><p>在下一节，我们会谈到另一个问题，当<strong>你</strong>行为不当时所会受到的<code>冒犯</code>。</p><h2 id="如何避免扮演失败者"><a href="#如何避免扮演失败者" class="headerlink" title="如何避免扮演失败者"></a>如何避免扮演失败者</h2><p>在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。</p><p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：</p><p>熬过去，这很正常。事实上，它是有益健康且合理的。</p><p>社区的标准不会自行维持，它们是通过参与者积极而<strong>公开地</strong>执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p><p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称<code>如果你不想帮助用户就闭嘴。</code> 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。</p><p>夸张的讲法是：你要的是<strong>友善</strong>（以上述方式）还是有用？两个里面挑一个。</p><p>记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心<strong>你</strong>和<strong>他的社区</strong>而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。</p><p>有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是<strong>真的</strong>会把问题搞砸。</p><p>这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。</p><p>也别让自己卷入口水战，最好不要理睬大多数的口水战 – 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。</p><h2 id="不该问的问题"><a href="#不该问的问题" class="headerlink" title="不该问的问题"></a>不该问的问题</h2><p>以下是几个经典蠢问题，以及黑客没回答时心中所想的：</p><p>问题：<a href="#q1">我能在哪找到 X 程序或 X 资源？</a></p><p>问题：<a href="#q2">我怎样用 X 做 Y？</a></p><p>问题：<a href="#q3">如何设定我的 shell 提示？</a></p><p>问题：<a href="#q4">我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</a></p><p>问题：<a href="#q5">我的程序/设定/SQL 语句没有用</a></p><p>问题：<a href="#q6">我的 Windows 电脑有问题，你能帮我吗？</a></p><p>问题：<a href="#q7">我的程序不会动了，我认为系统工具 X 有问题</a></p><p>问题：<a href="#q8">我在安装 Linux（或者 X ）时有问题，你能帮我吗？</a></p><p>问题：<a href="#q9">我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</a></p><hr><p><a id="q1"></a></p><blockquote><p>问题：我能在哪找到 X 程序或 X 资源？</p></blockquote><p>回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 <a href="http://www.google.com" target="_blank" rel="noopener">Google</a> 吗？</p><p><a id="q2"></a></p><blockquote><p>问题：我怎样用 X 做 Y？</p></blockquote><p>回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。</p><p><a id="q3"></a></p><blockquote><p>问题：如何设定我的 shell 提示？？</p></blockquote><p>回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 <a href="#RTFM">RTFM</a>，然后自己去找出来。</p><p><a id="q4"></a></p><blockquote><p>问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</p></blockquote><p>回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。</p><p><a id="q5"></a></p><blockquote><p>问题：我的{程序/设定/SQL 语句}不工作</p></blockquote><p>回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种</p><ul><li>你还有什么要补充的吗？</li><li>真糟糕，希望你能搞定。</li><li>这关我有什么屁事？</li></ul><p><a id="q6"></a></p><blockquote><p>问题：我的 Windows 电脑有问题，你能帮我吗？</p></blockquote><p>回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。</p><p>注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你<strong>可以</strong>问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。</p><p><a id="q7"></a></p><blockquote><p>问题：我的程序不会动了，我认为系统工具 X 有问题</p></blockquote><p>回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。</p><p><a id="q8"></a></p><blockquote><p>问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？</p></blockquote><p>回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在<a href="http://www.linux.org/groups/index.html" target="_blank" rel="noopener">这儿</a>找到使用者群组的清单）。</p><p>注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 <code>Linux</code> 和<strong>所有</strong>被怀疑的硬件作关键词仔细搜索。</p><p><a id="q9"></a></p><blockquote><p>问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</p></blockquote><p>回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！</p><h2 id="好问题与蠢问题"><a href="#好问题与蠢问题" class="headerlink" title="好问题与蠢问题"></a>好问题与蠢问题</h2><p>最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我可以在哪儿找到关于 Foonly Flurbamatic 的资料？</p></blockquote><p>这种问法无非想得到 <a href="#RTFM">STFW</a> 这样的回答。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？</p></blockquote><p>这个问题已经 STFW 过了，看起来他真的遇到了麻烦。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我从 foo 项目找来的源码没法编译。它怎么这么烂？</p></blockquote><p>他觉得都是别人的错，这个傲慢自大的提问者。</p><p><strong>聪明问题</strong>：</p><blockquote><p>foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？</p></blockquote><p>提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我的主机板有问题了，谁来帮我？</p></blockquote><p>某黑客对这类问题的回答通常是：<code>好的，还要帮你拍拍背和换尿布吗？</code>，然后按下删除键。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？</p></blockquote><p>这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。</p><p>在最后一个问题中，注意<code>告诉我答案</code>和<code>给我启示，指出我还应该做什么诊断工作</code>之间微妙而又重要的区别。</p><p>事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。</p><p>通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。</p><p>事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的<strong>名</strong>人，而是因为我用了正确的方式来提问。</p><p>黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我<strong>像</strong>个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。</p><h2 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h2><p>如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。</p><p>总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。</p><p>你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。</p><p>有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。</p><p>另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。</p><p>对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。</p><h2 id="如何更好地回答问题"><a href="#如何更好地回答问题" class="headerlink" title="如何更好地回答问题"></a>如何更好地回答问题</h2><p><strong>态度和善一点</strong>。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p><p><strong>对初犯者私下回复</strong>。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。</p><p><strong>如果你不确定，一定要说出来</strong>！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p><p><strong>如果帮不了忙，也别妨碍他</strong>。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。</p><p><strong>试探性的反问以引出更多的细节</strong>。如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。</p><p>尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。</p><p><strong>如果你决定回答，就请给出好的答案</strong>。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（wordaround），应推荐更好的工具，重新界定问题。</p><p><strong>正面的回答问题</strong>！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 <code>试试看 A 或是 B</code> 或者 <code>试试 X 、 Y 、 Z 、 A 、 B 、 C</code> 并附上一个链接一点用都没有。</p><p><strong>帮助你的社区从问题中学习</strong>。当回复一个好问题时，问问自己<code>如何修改相关文件或常见问题文件以免再次解答同样的问题？</code>，接着再向文件维护者发一份补丁。</p><p>如果你是在研究一番后才做出的回答，<strong>展现你的技巧而不是直接端出结果</strong>。毕竟<code>授人以鱼不如授人以渔</code>。</p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/" target="_blank" rel="noopener">Unix 系统和网络基本原理</a>。</p><p>当你发布软件或补丁时，试着按<a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html" target="_blank" rel="noopener">软件发布实践</a>操作。</p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。</p>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mermaid.js 使用</title>
      <link href="/180915/"/>
      <url>/180915/</url>
      
        <content type="html"><![CDATA[<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><blockquote><p><a href="https://mermaidjs.github.io/flowchart.html" target="_blank" rel="noopener">https://mermaidjs.github.io/flowchart.html</a></p></blockquote><p>需要导入 js，可以在 markdown 里使用</p><h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line"></span><br><span class="line">        section A section</span><br><span class="line">        Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">        Future task               :         des3, after des2, 5d</span><br><span class="line">        Future task2               :         des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">        section Critical tasks</span><br><span class="line">        Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class="line">        Implement parser and jison          :crit, done, after des1, 2d</span><br><span class="line">        Create tests for parser             :crit, active, 3d</span><br><span class="line">        Future task in critical line        :crit, 5d</span><br><span class="line">        Create tests for renderer           :2d</span><br><span class="line">        Add to mermaid                      :1d</span><br></pre></td></tr></table></figure><h3 id="基本顺序图"><a href="#基本顺序图" class="headerlink" title="基本顺序图"></a>基本顺序图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    Alice -&gt;&gt; Bob: Hello Bob, how are you?</span><br><span class="line">    Bob--&gt;&gt;John: How about you John?</span><br><span class="line">    Bob--x Alice: I am good thanks!</span><br><span class="line">    Bob-x John: I am good thanks!</span><br><span class="line">    Note right of John: Bob thinks a long&lt;br/&gt;long time, so long&lt;br/&gt;that the text does&lt;br/&gt;not fit on a row.</span><br><span class="line"></span><br><span class="line">    Bob--&gt;Alice: Checking with John...</span><br><span class="line">    Alice-&gt;John: Yes... John, how are you?</span><br></pre></td></tr></table></figure><h3 id="基本流程图"><a href="#基本流程图" class="headerlink" title="基本流程图"></a>基本流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[Square Rect] -- Link text --&gt; B((Circle))</span><br><span class="line">    A --&gt; C(Round Rect)</span><br><span class="line">    B --&gt; D&#123;Rhombus&#125;</span><br><span class="line">    C --&gt; D</span><br></pre></td></tr></table></figure><h3 id="更大的带样式流程图"><a href="#更大的带样式流程图" class="headerlink" title="更大的带样式流程图"></a>更大的带样式流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">    sq[Square shape] --&gt; ci((Circle shape))</span><br><span class="line"></span><br><span class="line">    subgraph A subgraph</span><br><span class="line">        od&gt;Odd shape]-- Two line&lt;br/&gt;edge comment --&gt; ro</span><br><span class="line">        di&#123;Diamond with &lt;br/&gt; line break&#125; -.-&gt; ro(Rounded&lt;br&gt;square&lt;br&gt;shape)</span><br><span class="line">        di==&gt;ro2(Rounded square shape)</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    %% Notice that no text in shape are added here instead that is appended further down</span><br><span class="line">    e --&gt; od3&gt;Really long text with linebreak&lt;br&gt;in an Odd shape]</span><br><span class="line"></span><br><span class="line">    %% Comments after double percent signs</span><br><span class="line">    e((Inner / circle&lt;br&gt;and some odd &lt;br&gt;special characters)) --&gt; f(,.?!+-*ز)</span><br><span class="line"></span><br><span class="line">    cyr[Cyrillic]--&gt;cyr2((Circle shape Начало));</span><br><span class="line"></span><br><span class="line">    classDef green fill:#9f6,stroke:#333,stroke-width:2px;</span><br><span class="line">    classDef orange fill:#f96,stroke:#333,stroke-width:4px;</span><br><span class="line">    class sq,e green</span><br><span class="line">    class di orange</span><br></pre></td></tr></table></figure><h3 id="Loops-alt-and-opt"><a href="#Loops-alt-and-opt" class="headerlink" title="Loops, alt and opt"></a>Loops, alt and opt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    loop Daily query</span><br><span class="line">        Alice-&gt;&gt;Bob: Hello Bob, how are you?</span><br><span class="line">        alt is sick</span><br><span class="line">            Bob-&gt;&gt;Alice: Not so good :(</span><br><span class="line">        else is well</span><br><span class="line">            Bob-&gt;&gt;Alice: Feeling fresh like a daisy</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        opt Extra response</span><br><span class="line">            Bob-&gt;&gt;Alice: Thanks for asking</span><br><span class="line">        end</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><h3 id="Message-to-self-in-loop"><a href="#Message-to-self-in-loop" class="headerlink" title="Message to self in loop"></a>Message to self in loop</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant Alice</span><br><span class="line">    participant Bob</span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">    loop Healthcheck</span><br><span class="line">        John-&gt;&gt;John: Fight against hypochondria</span><br><span class="line">    end</span><br><span class="line">    Note right of John: Rational thoughts&lt;br/&gt;prevail...</span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br><span class="line">    John-&gt;&gt;Bob: How about you?</span><br><span class="line">    Bob--&gt;&gt;John: Jolly good!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解决 Ubuntu 16.04 没有 「在打字时停用触摸板」选项</title>
      <link href="/180913/"/>
      <url>/180913/</url>
      
        <content type="html"><![CDATA[<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="使用-syndaemon-程序"><a href="#使用-syndaemon-程序" class="headerlink" title="使用 syndaemon 程序"></a>使用 syndaemon 程序</h3><blockquote><p><a href="https://wiki.archlinux.org/index.php/Touchpad_Synaptics_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#.E5.9C.A8.E6.89.93.E5.AD.97.E6.97.B6.E7.A6.81.E7.94.A8.E8.A7.A6.E6.91.B8.E6.9D.BF" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Touchpad_Synaptics_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#.E5.9C.A8.E6.89.93.E5.AD.97.E6.97.B6.E7.A6.81.E7.94.A8.E8.A7.A6.E6.91.B8.E6.9D.BF</a><br><a href="https://linux.die.net/man/1/syndaemon" target="_blank" rel="noopener">https://linux.die.net/man/1/syndaemon</a></p></blockquote><ul><li>名称：syndaemon - 一个程序，用于监视键盘活动并在使用键盘时禁用触摸板。</li><li>概要：syndaemon [ -i idle-time ] [ -m poll-inverval ] [ -d ] [ -p pid-file ] [ -t ] [ -k ] [ -K ] [ -R ]</li><li>描述：键入时禁用触摸板可避免不必要的指针移动，从而导致焦点偏向错误的窗口。</li><li>选项</li></ul><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-i &lt; 空闲时间 &gt;</td><td>在启用触摸板之前最后一次按键后等待的秒数。（默认为2.0秒）</td></tr><tr><td>-m &lt; poll-interval &gt;</td><td>在两个轮询间隔之间等待多少毫秒。如果此值太低，将导致不必要的唤醒。如果该值太高，则可能不会注意到某些按键（在两个间隔之间发生按下和释放）。使用-R运行时，此开关无效。默认值为200毫秒</td></tr><tr><td>-d</td><td>从守护进程开始，即在后台运行</td></tr><tr><td>-p &lt; pid-file &gt;</td><td>创建具有指定文件名的pid文件。只有在守护程序模式下启动程序时才会创建pid文件</td></tr><tr><td>-t</td><td>仅响应键盘活动，禁用点击和滚动，而不禁用鼠标移动</td></tr><tr><td>-k</td><td>监视键盘活动时忽略修饰键</td></tr><tr><td>-K</td><td>像-k一样，但也忽略了Modifier + Key组合</td></tr><tr><td>-R</td><td>使用XRecord扩展来检测键盘活动，而不是轮询键盘状态</td></tr></tbody></table><ul><li>使用 syndaemon<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># syndaemon 可以监控键盘活动并在打字时禁用触摸板，有多个选项可以控制禁用条件。可以通过下面命令查看帮助：</span></span><br><span class="line">$ syndaemon -h</span><br><span class="line"><span class="comment"># 例如要在打字 0.5 秒后禁用点击和滚动，忽略 Ctrl 等修饰键，使用</span></span><br><span class="line">$ syndaemon -i 0.5 -t -K -R</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="设置开机启动脚本（利用-rc-local）"><a href="#设置开机启动脚本（利用-rc-local）" class="headerlink" title="设置开机启动脚本（利用 rc.local）"></a>设置开机启动脚本（利用 rc.local）</h3><blockquote><p><a href="https://www.linuxidc.com/Linux/2017-09/147166.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2017-09/147166.htm</a></p></blockquote><p>rc.local脚本是一个Ubuntu开机后会自动执行的脚本，我们可以在该脚本内添加命令行指令。该脚本位于/etc/路径下，需要root权限才能修改。</p><p>该脚本具体格式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh -e</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># rc.local</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This script is executed at the end of each multiuser runlevel.</span></span><br><span class="line"><span class="comment"># Make sure that the script will "exit 0" on success or any other</span></span><br><span class="line"><span class="comment"># value on error.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In order to enable or disable this script just change the execution</span></span><br><span class="line"><span class="comment"># bits.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default this script does nothing.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure></p><p>在 exit 0 前添加如下代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">syndaemon -i 1 -t -K -R</span><br></pre></td></tr></table></figure></p><p>注意: 一定要将命令添加在exit 0之前。里面可以直接写命令或者执行Shell脚本文件sh。</p>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> command </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>配置 jDK_1.8 环境变量</title>
      <link href="/180828_1/"/>
      <url>/180828_1/</url>
      
        <content type="html"><![CDATA[<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><ul><li>Windows 10 64 位家庭版</li><li>JDK_1.8_64</li></ul><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><ul><li>配置环境变量如下：</li></ul><table><thead><tr><th>变量名</th><th>变量值</th></tr></thead><tbody><tr><td>JAVA_HOME</td><td>C:\Program Files\Java\jdk1.8.0_171</td></tr><tr><td>CLASSPATH</td><td>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</td></tr><tr><td>Path</td><td>C:\Program Files\Java\jdk1.8.0_171\bin</td></tr><tr><td>Path</td><td>C:\Program Files\Java\jdk1.8.0_171\jre\bin</td></tr></tbody></table><ul><li>JDK 的安装路径为：C:\Program Files\Java\jdk1.8.0_171</li><li>Path 的变量值不能带 %JAVA_HOME ,实测带的话 javac 命令不识别</li><li>注意 CLASSPATH 的变量值前面的点</li></ul>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> profile </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>命令行编译 Eclipse 创建的 Java 程序</title>
      <link href="/180828_2/"/>
      <url>/180828_2/</url>
      
        <content type="html"><![CDATA[<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ul><li>工程路径：F:\Workplace\Eclipse\JavaHXJS</li><li>目标文件：F:\Workplace\Eclipse\JavaHXJS\src\com\aes\Test.java</li><li>运行如下：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F:\Workplace\Eclipse\JavaHXJS&gt;javac src\com\aes\Test.java</span><br><span class="line">F:\Workplace\Eclipse\JavaHXJS&gt;<span class="built_in">cd</span> src</span><br><span class="line">F:\Workplace\Eclipse\JavaHXJS\src&gt;java com.aes.Test</span><br><span class="line">Test successed</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>把《编程珠玑》读薄</title>
      <link href="/180720_2/"/>
      <url>/180720_2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>August 11, 2013<br>作者：Hawstein<br>出处   :<a href="http://hawstein.com/posts/make-thiner-programming-pearls.html" target="_blank" rel="noopener">http://hawstein.com/posts/make-thiner-programming-pearls.html</a><br> 声明：本文采用以下协议进行授权： <a href="https://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh" target="_blank" rel="noopener">自由转载-非商用-非衍生-保持署名|Creative Commons BY-NC-ND 3.0</a> ，转载请注明作者及出处。</p></blockquote><h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><hr><p>具体化你的解决的问题。下面是A和B的对话。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A：我该如何对磁盘文件进行排序？</span><br><span class="line">B：需要排序的内容是什么？文件中有多少条记录？每个记录的格式是什么？</span><br><span class="line">A：该文件包含至多10,000,000个记录，每条记录都是一个7位整数。</span><br><span class="line">B：如果文件那么小，为什么要使用磁盘排序呢？为什么不在主存中对它排序？</span><br><span class="line">A：该功能是某大型系统中的一部分，大概只能提供1MB主存给它。</span><br><span class="line">B：你能将记录方面的内容说得更详细一些吗？</span><br><span class="line">A：每个记录是一个7位正整数，没有其它的关联数据，每个整数至多只能出现一次。</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p>经过一系统的问题，我们可以将一个定义模糊不清的问题变得具体而清晰：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">所输入的是一个文件，至多包含n个正整数，每个正整数都要小于n，这里n=10^7。</span><br><span class="line">如果输入时某一个整数出现了两次，就会产生一个致命的错误。</span><br><span class="line">这些整数与其它任何数据都不关联。</span><br><span class="line">输出：</span><br><span class="line">以增序形式输出经过排序的整数列表。</span><br><span class="line">约束：</span><br><span class="line">大概有1MB的可用主存，但可用磁盘空间充足。运行时间至多允许几分钟，</span><br><span class="line">10秒钟是最适宜的运行时间。</span><br></pre></td></tr></table></figure><p>如果主存容量不是严苛地限制在1MB，比如说可以是1MB多，或是1~2MB之间， 那么我们就可以一次性将所有数据都加载到主存中，用Bitmap来做。 10,000,000个数就需要10,000,000位，也就是10,000,000b = 1.25MB。</p><p>程序可分为三个部分：第一，初始化所有的位为0；第二，读取文件中每个整数， 如果该整数对应的位已经为1，说明前面已经出现过这个整数，抛出异常，退出程序 (输入要求每个整数都只能出现一次)。否则，将相应的位置1；第三， 检查每个位，如果某个位是1，就写出相应的整数，从而创建已排序的输出文件。</p><p>如果主存容量严苛地限制在1MB，而使用Bitmap需要1.25MB， 因此无法一次载入完成排序。那么，我们可以将该文件分割成两个文件， 再分别用Bitmap处理。分割策略可以简单地把前一半的数据放到一个文件， 后一半的数据放到另一个文件，分别排序后再做归并。 也可以把文件中小于某个数(比如5,000,000)的整数放到一个文件，叫less.txt， 把其余的整数放到另一个文件，叫greater.txt。分别排序后， 把greater.txt的排序结果追加到less.txt的排序结果即可。</p><h2 id="啊哈！算法"><a href="#啊哈！算法" class="headerlink" title="啊哈！算法"></a>啊哈！算法</h2><hr><p>第2章围绕3个问题展开。</p><ul><li>给定一个包含32位整数的顺序文件，它至多只能包含40亿个这样的整数， 并且整数的次序是随机的。请查找一个此文件中不存在的32位整数。 在有足够主存的情况下，你会如何解决这个问题？ 如果你可以使用若干外部临时文件，但可用主存却只有上百字节， 你会如何解决这个问题？<br>这是CTCI中的一道题目，详细解答请戳以下链接：</li></ul><p><a href="http://www.hawstein.com/posts/12.3.html" target="_blank" rel="noopener">请猛戳我</a></p><ul><li>请将一个具有n个元素的一维向量向左旋转i个位置。例如，假设n=8,i=3， 那么向量abcdefgh旋转之后得到向量defghabc。<br>这个问题很常见了，做3次翻转即可，无需额外空间：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reverse(<span class="number">0</span>, i<span class="number">-1</span>); <span class="comment">// cbadefgh</span></span><br><span class="line">reverse(i, n<span class="number">-1</span>); <span class="comment">// cbahgfed</span></span><br><span class="line">reverse(<span class="number">0</span>, n<span class="number">-1</span>); <span class="comment">// defghabc</span></span><br></pre></td></tr></table></figure><ul><li>给定一本英语单词词典，请找出所有的变位词集。例如，因为“pots”， “stop”，“tops”相互之间都是由另一个词的各个字母改变序列而构成的， 因此这些词相互之间就是变位词。<br>这个问题可以分3步来解决。第一步将每个单词按字典序排序， 做为原单词的签名，这样一来，变位词就会具有相同的签名。 第二步对所有的单词按照其签名进行排序，这样一来，变位词就会聚集到一起。 第三步将变位词分组，形成变位词集。示意图如下：<br><img src="http://www.hawstein.com/assets/img/2013/8/11/anagrams.png" alt=""></li></ul><h2 id="数据决定程序结构"><a href="#数据决定程序结构" class="headerlink" title="数据决定程序结构"></a>数据决定程序结构</h2><p>恰当的数据视图实际上决定了程序的结构。 我们常常可以通过重新组织内部数据来使程序变得小而美。<br>发明家悖论：更一般性的问题也许更容易解决。(有时候吧)<br>程序员在节省空间方面无计可施时，将自己从代码中解脱出来， 退回起点并集中心力研究数据，常常能有奇效。数据的表示形式是程序设计的根本。<br>下面是退回起点进行思考时的几条原则：</p><ul><li>使用数组重新编写重复代码。冗长的相似代码常常可以使用最简单的数据结构—— 数组来更好地表述。</li><li>封装复杂结构。当需要非常复杂的数据结构时，使用抽象术语进行定义， 并将操作表示为类。</li><li>尽可能使用高级工具。超文本，名字-值对，电子表格，数据库， 编程语言等都是特定问题领域中的强大的工具。</li><li>从数据得出程序的结构。在动手编写代码之前，优秀的程序员会彻底理解输入， 输出和中间数据结构，并围绕这些结构创建程序。</li></ul><p>提到的书籍：Polya的《How to Solve it》，中文书《怎样解题》； Kernighan和Plauger的《Elements of Programming Style》；Fred Brooks的《人月神话》 Steve McConnell的《代码大全》；《Rapid Development》； 《Software Project Survival Guide》</p><h2 id="编写正确的程序"><a href="#编写正确的程序" class="headerlink" title="编写正确的程序"></a>编写正确的程序</h2><p>本章以二分搜索为例子，讲述了如何对程序进行验证及正确性分析。</p><p>深入阅读：David Gries的《Science of Programming》 是程序验证领域里极佳的一本入门书籍。</p><h2 id="编程中的次要问题"><a href="#编程中的次要问题" class="headerlink" title="编程中的次要问题"></a>编程中的次要问题</h2><p>到目前为止，你已经做了一切该做的事：通过深入挖掘定义了正确的问题， 通过仔细选择算法和数据结构平衡了真正的需求，通过程序验证技术写出了优雅的代码， 并且对其正确性相当有把握。万事俱备，只欠编程。</p><ul><li>使用断言assert</li><li>自动化测试程序</li></ul><p>进阶阅读：《Practice of Programming》第5章(调试)，第6章(测试) 《Code Complete》第25章(单元测试)，第26章(调试)</p><h2 id="程序性能分析"><a href="#程序性能分析" class="headerlink" title="程序性能分析"></a>程序性能分析</h2><p>下图展示了一个程序的性能提升过程， 该程序的作用是对三维空间中n个物体的运动进行仿真。从图中可以看出， 一个程序可以从多方面进行性能提升，而其中算法和数据结构的选择又显得尤为重要。</p><p><img src="http://www.hawstein.com/assets/img/2013/8/11/improve.png" alt=""></p><p>从设计层面提升程序性能：</p><ol><li>问题定义。良好的问题定义可以有效减少程序运行时间和程序长度。</li><li>系统结构。将大型系统分解成模块，也许是决定其性能的最重要的单个因素。</li><li>算法和数据结构。这个不用说了。</li><li>代码调优。针对代码本身的改进。</li><li>系统软件。有时候改变系统所基于的软件比改变系统本身更容易。</li><li>硬件。更快的硬件可以提高系统的性能。</li></ol><p>深入阅读：Butler Lampson的“Hints for Computer System Design”， 该论文特别适合于集成硬件和软件的计算机系统设计。</p><h2 id="粗略估算"><a href="#粗略估算" class="headerlink" title="粗略估算"></a>粗略估算</h2><p>这一章讲述了估算技术，我认为是相当有用的一章。<br>文中先抛出一个问题：密西西比河一天流出多少水？如果让你来回答， 你会怎么答，注意不能去Google哦。<br>作者是这么回答这个问题：假设河的出口大约有1英里宽和20英尺深(1/250英里)， 而河水的流速是每小时5英里，也就是每天120英里。则可以计算出一天的流量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1英里 * 1/250英里 * 120英里/天  约等于  1/2 英里^3/天</span><br></pre></td></tr></table></figure><p>上述算式非常简单，可是在看到这些文字之前，如果有人真的问你， 密西西比河一天流出多少水？你真的能答上来吗？还是愣了一下后，摆摆手，说： 这我哪知道！<br>对于上面的问题，我们至少可以注意到以下两点：</p><ol><li>你需要把问题转换成一个可计算的具体模型。这一点往往不需要太担心， 因为我们做的是估算，所以可以忽视很多无关紧要的因素，可以去简化你的模型， 记住我们要的只是一个粗略计算的结果。比如对于上面的问题， 计算密西西比河一天流出多少水其实就是计算其一天的流量，利用中学所学知识， 流量 = 截面积 x 流速，那我们就只需计算密西西比河的出水口的截面积和流速即可。 我们可以将出水口简化成一个矩形，因此就只需要知道出水口的宽和深即可。</li><li>你需要知道常识性的东西。上面我们已经把问题转换成了一个可计算的具体模型： 流量 = 出水口宽 x 出水口深 x 流速。接下来呢？你需要代入具体的数值去求得答案。 而这就需要你具备一些常识性的知识了。比如作者就估计了密西西比河的出口有1英里宽， 20英尺深(如果你估计只有几十米宽，那就相差得太离谱了)。 这些常识性的知识比第1点更值得关注，因为你无法给出一个靠谱的估算值往往是因为这点。</li></ol><p>当我们懂得如何把一个问题具体化定义出来并为其选用适当的模型， 并且我们也积累了必要的常识性的知识后，回答那些初看起来无从下手的问题也就不难了。 这就是估算的力量。</p><p>以下是估算时的一些有用提示：</p><ul><li>两个答案比一个答案好。即鼓励你从多个角度去对一个问题进行估算， 如果从不同角度得到的答案差别都不大，说明这个估算值是比较靠谱的。</li><li>快速检验。即量纲检验。即等式两边最终的量纲要一致。 这一点在等式简单的时候相当显而易见。比如位移的单位是米，时间单位是秒， 速度单位是米/秒，那显然我们应该要用位移去除以时间来得到速度， 这样才能保证它们单位的一致。你可能会说，我了个去，这种小学生都懂的事， 你好意思拿出来讲。其实不然，当你面对的是一个具有多个变量的复杂物理公式， 或者你提出某种物理假设，正在考虑将其公式化，该方法可以切切实实地帮你做出检验。</li><li>经验法则。“72法则”：1.假设以年利率r%投资一笔钱y年，如果r<em>y = 72， 那么你的投资差不多会翻倍。2.如果一个盘子里的菌群以每小时3%的速率增长， 那么其数量每天(24小时)都会翻倍。在误差不超过千分之五的情况下， \pi秒就是一个纳世纪。也就是说：<br>3.14秒 = 10^(-9) </em> 100年 = 10^(-7) 年</li></ul><p>也就是说，1年大概是3.14x10^7 秒。所以如果有人告诉你，一个程序运行10^7 秒， 你应该能很快反应出，他说的其实是4个月。</p><ul><li>实践。与许多其他活动一样，估算技巧只能通过实践来提高。</li></ul><p>如果问题的规模太大，我们还可以通过求解它的小规模同质问题来做估算。比如， 我们想测试某个程序运行10亿次需要多长时间，如果你真去跑10亿次， 说不定运行几个小时都没结束，那不是很悲剧？我们可以运行这个程序1万次或是10万次， 得出结果然后倍增它即可。当然，这个结果未必是准确的， 因为你没法保证运行时间是随着运行次数线性增加的。谨慎起见，我们可以运行不同的次数， 来观察它的变化趋势。比如运行10次，100次，1000次，10000次等， 观察它的运行时间是否是线性增加的，或是一条二次曲线。</p><p>有时候，我们需要为估算的结果乘上一个安全系数。比如， 我们预估完成某项功能需要时间t，那根据以往经验，也许我们需要为这个值乘上2或4， 这样也许才是一个靠谱的预估值。</p><p>Little定律：系统中物体的平均数量等于物体离开系统的平均速率和每个物体在系统中停留 的平均时间的乘积。(如果物体离开和进入系统的总体出入流是平衡的， 那么离开速率也就是进入速率)</p><p>举个例子，比如你正在排除等待进入一个火爆的夜总会， 你可以通过估计人们进入的速率来了解自己还要等待多长时间。根据Little定律， 你可以推论：这个地方可以容纳约60人，每个人在里面逗留时间大约是3小时， 因此我们进入夜总会的速率大概是每小时20人。现在队伍中我们前面还有20人， 也就意味着我们还要等待大约一个小时。</p><p>深入阅读：Darrell Huff的《How To Lie With Statistics》；关键词： 费米近似(Fermi estimate, Fermi problem)</p><h2 id="算法设计技术"><a href="#算法设计技术" class="headerlink" title="算法设计技术"></a>算法设计技术</h2><hr><p>这一章就一个小问题研究了4种不同的算法，重点强调这些算法的设计技术。 研究的这个小问题是一个非常常见的面试题：子数组之和的最大值。 如果之前没有听过，建议Google之。</p><p>深入阅读：Aho,Hopcroft和Ullman的《Data Structures and Algorithms》 Cormen,Leiserson,Rivest和Stein的《Introduction to Algorithms》</p><h2 id="代码调优"><a href="#代码调优" class="headerlink" title="代码调优"></a>代码调优</h2><hr><p>前面各章讨论了提高程序效率的高层次方法：问题定义，系统结构， 算法设计及数据结构选择。本章讨论的则是低层次的方法：代码调优。</p><p>代码调优的最重要原理就是尽量少用它。不成熟的优化是大量编程灾害的根源。 它会危及程序的正确性，功能性以及可维护性。当效率很重要时， 第一步就是对系统进行性能监视，以确定其运行时间的分布状况。 效率问题可以由多种方法来解决，只有在确信没有更好的解决方案时才考虑进行代码调优。</p><p>事实上，如果不是十分十分必要，不要去做代码调优， 因为它会牺牲掉软件的其他许多性质。</p><p>so，just skip this chapter。</p><h2 id="节省空间"><a href="#节省空间" class="headerlink" title="节省空间"></a>节省空间</h2><hr><p>本章讲述了节省空间的一些重要方法。</p><p>减少程序所需数据的存储空间，一般有以下方法：</p><ul><li>不存储，重新计算。</li><li>稀疏数据结构。下面着重讲一下这点。</li><li>数据压缩。可以通过压缩的方式对对象进行编码，以减少存储空间。</li><li>分配策略。只有在需要的时候才进行分配。</li><li>垃圾回收。对废弃的存储空间进行回收再利用。</li></ul><p>以下是节省代码空间的几种通用技术：</p><ul><li>函数定义。用函数替换代码中的常见模式可以简化程序，同时减少代码的空间需求。</li><li>解释程序。用解释程序命令替换长的程序文本。</li><li>翻译成机器语言。可以将大型系统中的关键部分用汇编语言进行手工编码。</li></ul><h3 id="稀疏数据结构"><a href="#稀疏数据结构" class="headerlink" title="稀疏数据结构"></a>稀疏数据结构</h3><p>假设我们有一个200 x 200的矩阵(共40000个元素)，里面只有2000个元素有值， 其它的都为0，示意图如下：<br><img src="http://www.hawstein.com/assets/img/2013/8/11/matrix.png" alt=""></p><p>显然这是一个稀疏矩阵，直接用一个200 x 200 的二维数组来存储这些数据会造成大量的空间浪费，共需要200x200x4B=160KB。 所以，我们应该想办法用另一种形式来存储这些数据。</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>使用数组表示所有的列，同时使用链表来表示给定列中的活跃元素。 如下图所示：<br><img src="http://www.hawstein.com/assets/img/2013/8/11/sparse_matrix.png" alt=""></p><p>该结构中，有200个指针(colhead)和2000条记录(每条记录是两个整数和一个指针)， 占用空间是200x4B + 2000x12B = 24800B = 24.8KB， 比直接用二维数组存储(160KB)要小很多。</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>我们可以开三个数组来保存这些数，如下图所示：<br><img src="http://www.hawstein.com/assets/img/2013/8/11/3array.png" alt=""></p><p>firstincol是一个长度为201的数组，对于第i列，在数组row中， 下标为firstincol[i]到firstincol[i+1]-1对应的行元素非0， 其值存储在相应的pointnum数组中。</p><p>比如对于上图，在第0列中，元素值非0的行有3行，分别是row[0],row[1],row[2], 元素值是pointnum[0],pointnum[1],pointnum[2]；在第1列中，元素值非0的行有2行， 分别是row[3],row[4]，元素值是pointnum[3],pointnum[4]。依次类推。</p><p>该结构所需要的存储空间为2x2000x4B + 201x4B = 16804B = 16.8KB。 由于row数组中的元素全部都小于200，所以每个元素可以用一个unsigned char来保存， firstincol数组中元素最大也就2000，所以可以用一个short(或unsigned short)来保存， pointnum中的元素是一个4B的int， 最终所需空间变为：2000x4B + 2000x1B + 201x2B = 10402B = 10.4KB。</p><p>深入阅读：Fred Brooks的《人月神话》</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><hr><p>本章先简单介绍了插入排序，然后着重讲述快速排序。</p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&gt;<span class="number">0</span> &amp;&amp; a[j<span class="number">-1</span>]&gt;a[j]; --j)</span><br><span class="line">            swap(a[j<span class="number">-1</span>], a[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 版本2</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort1</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = a[i];</span><br><span class="line">        <span class="keyword">int</span> j = i;</span><br><span class="line">        <span class="keyword">for</span>(; j&gt;<span class="number">0</span> &amp;&amp; a[j<span class="number">-1</span>]&gt;t; --j)</span><br><span class="line">            a[j] = a[j<span class="number">-1</span>];</span><br><span class="line">        a[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><blockquote><blockquote><p>我们在这里规定：小于等于pivot的元素移到左边，大于pivot的元素移到右边。</p></blockquote></blockquote><h3 id="实现1：单向移动版本"><a href="#实现1：单向移动版本" class="headerlink" title="实现1：单向移动版本"></a>实现1：单向移动版本</h3><p>这个版本的关键是设置一快一慢两个指针，慢指针左侧都是小于等于pivot(包含慢指针所在位置)， 慢指针到快指针之间的值是大于pivot，快指针右侧的值是还未比较过的。示意图如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">小于等于pivot    ｜    大于pivot    ｜    ？</span><br><span class="line">             slow                fast</span><br></pre></td></tr></table></figure><p>快指针一次一步向前走，遇到大于pivot什么也不做继续向前走。遇到小于等于pivot的元素， 则慢指针slow向前走一步，然后交换快慢指针指向的元素。一次划分结束后， 再递归对左右两侧的元素进行快排。代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组快排</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> head, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a==<span class="literal">NULL</span> || head==end) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> slow = head, fast = head + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> pivot = a[head];</span><br><span class="line">    <span class="keyword">while</span>(fast != end) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[fast] &lt;= pivot)</span><br><span class="line">            swap(a[++slow], a[fast]);</span><br><span class="line">        ++fast;</span><br><span class="line">    &#125;</span><br><span class="line">    swap(a[head], a[slow]);</span><br><span class="line">    QSort(a, head, slow);</span><br><span class="line">    QSort(a, slow+<span class="number">1</span>, end);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>排序数组a只需要调用QSort(a, 0, n)即可。该思路同样可以很容易地在链表上实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单链表快排</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(Node *head, Node *end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span> || head==end) <span class="keyword">return</span>;</span><br><span class="line">    Node *slow = head, *fast = head-&gt;next;</span><br><span class="line">    <span class="keyword">int</span> pivot = head-&gt;data;</span><br><span class="line">    <span class="keyword">while</span>(fast != end)&#123;</span><br><span class="line">        <span class="keyword">if</span>(fast-&gt;data &lt;= pivot)&#123;</span><br><span class="line">            slow = slow-&gt;next;</span><br><span class="line">            swap(slow-&gt;data, fast-&gt;data);</span><br><span class="line">        &#125;</span><br><span class="line">        fast = fast-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    swap(head-&gt;data, slow-&gt;data);</span><br><span class="line">    qsort(head, slow);</span><br><span class="line">    qsort(slow-&gt;next, end);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>排序头指针为head的单链表只需调用qsort(head, NULL)即可。</p><h3 id="实现2：双向移动版本"><a href="#实现2：双向移动版本" class="headerlink" title="实现2：双向移动版本"></a>实现2：双向移动版本</h3><p>版本1能能够快速完成对随机整数数组的排序，但如果数组有序， 或是数组中元素相同，快排的时间复杂度会退化成O(n^2 )，性能变得非常差。</p><p>一种缓解方案是使用双向移动版本的快排，它每次划分也是使用两个指针， 不过一个是从左向右移动，一个是从右向左移动，示意图如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">小于等于pivot    ｜    ？    ｜    大于pivot</span><br><span class="line">               i            j</span><br></pre></td></tr></table></figure><p>指针j不断向左移动，直到遇到小于等于pivot，就交换指针i和j所指元素 (指针i一开始指向pivot)；指针i不断向右移动，直到遇到大于pivot的， 就交换指针i和j所指元素。pivot在这个过程中，不断地换来换去， 最终会停在分界线上，分界线左边都是小于等于它的元素，右边都是大于它的元素。 这样就避免了最后还要交换一次pivot的操作，代码也变得美观许多。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pivot = a[low], i=low, j=high;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j &amp;&amp; a[j]&gt;pivot) --j;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) swap(a[i], a[j]);</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j &amp;&amp; a[i]&lt;=pivot) ++i;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) swap(a[i], a[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> first, <span class="keyword">int</span> last)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(first&lt;last)&#123;</span><br><span class="line">        <span class="keyword">int</span> k = partition(a, first, last);</span><br><span class="line">        quicksort(a, first, k<span class="number">-1</span>);</span><br><span class="line">        quicksort(a, k+<span class="number">1</span>, last);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，如果对于partition函数，你如果觉得大循环内的两个swap还是做了些无用功的话， 也可以把pivot的赋值放到最后一步，而不是在这个过程中swap来swap去的。代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pivot = a[low], i=low, j=high;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j &amp;&amp; a[j]&gt;pivot) --j;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) a[i++] = a[j];</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j &amp;&amp; a[i]&lt;=pivot) ++i;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) a[j--] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    a[i] = pivot;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果数组基本有序，那随机选择pivot(而不像上面那样选择第一个做为pivot) 会得到更好的性能。在partition函数里，我们只需要在数组中随机选一个元素， 然后将它和数组中第一个元素交换，后面的划分代码无需改变， 就可以达到随机选择pivot的效果。</p><h3 id="进一步优化"><a href="#进一步优化" class="headerlink" title="进一步优化"></a>进一步优化</h3><p>对于小数组，用插入排序之类的简单方法来排序反而会更快，因此在快排中， 当数组长度小于某个值时，我们就什么也不做。对应到代码中， 就是修改quicksort中的if条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(first &lt; last)  改为  if(last-first &gt; cutoff)</span><br></pre></td></tr></table></figure><p>其中cutoff是一个小整数。程序结束时，数组并不是有序的， 而是被组合成一块一块随机排列的值，并且满足这样的条件： 某一块中的元素小于它右边任何块中的元素。我们必须通过另一种排序算法对块内进行排序。 由于数组是几乎有序的，因此插入排序比较适用。</p><p>这种方法结合了快排和插入排序，让它们去做各自擅长的事情，往往比单纯用快排要快。</p><p>深入阅读：Don Knuth的《The Art of Computer Programming, Volume 3: Sorting and Searching》；Robert Sedgewick的《Algorithms》； 《Algorithms in C》,《Algorithms in C++》,《Algorithms in Java》。</p><h2 id="取样问题"><a href="#取样问题" class="headerlink" title="取样问题"></a>取样问题</h2><hr><p>本章讲述了一个小的随机抽样问题，并用不同的方法来解决它。</p><p>问题：对于整数m和n，其中m&lt;n，输出0~n-1范围内m个随机整数的有序列表， 不允许重复。</p><p>比如m=3, n=5，那么一种可能输出是0，2，3(要求有序)。实现1来自Knuth的TAOCP， 时间复杂度O(n)：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GenKnuth</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span>((bigrand()%(n-i)) &lt; m) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">--m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，bigrand()的作用是返回一个很大的随机整数。</p><p>实现2：在一个初始为空的集合里面插入随机整数，直到个数足够。代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GenSets</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"><span class="keyword">while</span>(s.size() &lt; m)</span><br><span class="line">s.insert(bigrand() % n);</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator i;</span><br><span class="line"><span class="keyword">for</span>(i=s.begin(); i!=s.end(); ++i)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现3：把包含整数0～n-1的数组顺序打乱，然后把前m个元素排序输出。 该方法的性能通常不如Knuth的算法。代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GenShuf</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; ++i)</span><br><span class="line">x[i] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> j = randint(i, n<span class="number">-1</span>);</span><br><span class="line">swap(x[i], x[j]);</span><br><span class="line">&#125;</span><br><span class="line">sort(x, x+m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; ++i)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>深入阅读：Don Knuth的《The Art of Computer Programming, Volume 2: Seminumerical Algorithms》</p><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><hr><p>本章详细研究这样一个搜索问题：在没有其他相关数据的情况下，如何存储一组整数？ 为些介绍了5种数据结构：有序数组，有序链表，二叉搜索树，箱，位向量。</p><p>其中，二叉搜索树应该熟练掌握，以下是一种实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    Node *lchild, *rchild, *parent;</span><br><span class="line">    Node(): lchild(<span class="literal">NULL</span>), rchild(<span class="literal">NULL</span>), parent(<span class="literal">NULL</span>) &#123; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BST</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> kMax = <span class="number">1000</span>;</span><br><span class="line">    Node *root_, *parent_, nodes_[kMax];</span><br><span class="line">    <span class="keyword">int</span> size_;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function">Node* <span class="title">minimum</span><span class="params">(Node* node)</span></span>;</span><br><span class="line">    <span class="function">Node* <span class="title">maximum</span><span class="params">(Node* node)</span></span>;</span><br><span class="line">    <span class="function">Node* <span class="title">successor</span><span class="params">(Node* node)</span></span>;</span><br><span class="line">    <span class="function">Node* <span class="title">predecessor</span><span class="params">(Node* node)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(Node* &amp;node, <span class="keyword">int</span> x)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InorderTraver</span><span class="params">(Node* node)</span></span>;</span><br><span class="line">    <span class="function">Node* <span class="title">Find</span><span class="params">(Node* node, <span class="keyword">int</span> x)</span></span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    BST(): root_(<span class="literal">NULL</span>), parent_(<span class="literal">NULL</span>), size_(<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(nodes_, <span class="string">'\0'</span>, <span class="keyword">sizeof</span>(nodes_));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InorderTraver</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Node* <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Remove</span><span class="params">(Node* z)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Node* BST::minimum(Node* node) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(node-&gt;lchild)</span><br><span class="line">        node = node-&gt;lchild;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node* BST::maximum(Node* node) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(node-&gt;rchild)</span><br><span class="line">        node = node-&gt;rchild;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node* BST::successor(Node* node) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node-&gt;rchild)</span><br><span class="line">        <span class="keyword">return</span> minimum(node-&gt;rchild);</span><br><span class="line">    Node *y = node-&gt;parent;</span><br><span class="line">    <span class="keyword">while</span>(y &amp;&amp; node==y-&gt;rchild) &#123;</span><br><span class="line">        node = y;</span><br><span class="line">        y = node-&gt;parent;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node* BST::predecessor(Node* node) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node-&gt;lchild)</span><br><span class="line">        <span class="keyword">return</span> maximum(node-&gt;lchild);</span><br><span class="line">    Node *y = node-&gt;parent;</span><br><span class="line">    <span class="keyword">while</span>(y &amp;&amp; node==y-&gt;lchild) &#123;</span><br><span class="line">        node = y;</span><br><span class="line">        y = node-&gt;parent;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> BST::Insert(Node* &amp;node, <span class="keyword">int</span> x) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        nodes_[size_].data = x;</span><br><span class="line">        nodes_[size_].parent = parent_;</span><br><span class="line">        node = &amp;nodes_[size_];</span><br><span class="line">        ++size_;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    parent_ = node;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; node-&gt;data)</span><br><span class="line">        Insert(node-&gt;lchild, x);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        Insert(node-&gt;rchild, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> BST::Insert(<span class="keyword">int</span> x) &#123;</span><br><span class="line">    Insert(root_, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> BST::InorderTraver(Node* node) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    InorderTraver(node-&gt;lchild);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;node-&gt;data&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    InorderTraver(node-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> BST::InorderTraver() &#123;</span><br><span class="line">    InorderTraver(root_);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node* BST::Find(Node* node, <span class="keyword">int</span> x) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; node-&gt;data) <span class="keyword">return</span> Find(node-&gt;lchild, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &gt; node-&gt;data) <span class="keyword">return</span> Find(node-&gt;rchild, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node* BST::Find(<span class="keyword">int</span> x) &#123;</span><br><span class="line">    <span class="keyword">return</span> Find(root_, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> BST::Remove(Node* z) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!z-&gt;lchild &amp;&amp; !z-&gt;rchild) &#123;</span><br><span class="line">        <span class="keyword">if</span>(z == root_) root_ = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(z == z-&gt;parent-&gt;lchild)</span><br><span class="line">            z-&gt;parent-&gt;lchild = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            z-&gt;parent-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(z-&gt;lchild==<span class="literal">NULL</span> || z-&gt;rchild==<span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(z == root_) &#123;</span><br><span class="line">            <span class="keyword">if</span>(z-&gt;lchild) root_ = z-&gt;lchild;</span><br><span class="line">            <span class="keyword">else</span> root_ = z-&gt;rchild;</span><br><span class="line">            root_-&gt;parent = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(z==z-&gt;parent-&gt;lchild &amp;&amp; z-&gt;lchild) &#123;</span><br><span class="line">                z-&gt;parent-&gt;lchild = z-&gt;lchild;</span><br><span class="line">                z-&gt;lchild-&gt;parent = z-&gt;parent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(z==z-&gt;parent-&gt;lchild &amp;&amp; z-&gt;rchild) &#123;</span><br><span class="line">                z-&gt;parent-&gt;lchild = z-&gt;rchild;</span><br><span class="line">                z-&gt;rchild-&gt;parent = z-&gt;parent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(z==z-&gt;parent-&gt;rchild &amp;&amp; z-&gt;lchild) &#123;</span><br><span class="line">                z-&gt;parent-&gt;rchild = z-&gt;lchild;</span><br><span class="line">                z-&gt;lchild-&gt;parent = z-&gt;parent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                z-&gt;parent-&gt;rchild = z-&gt;rchild;</span><br><span class="line">                z-&gt;rchild-&gt;parent = z-&gt;parent;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        Node *s = predecessor(z);</span><br><span class="line">        z-&gt;data = s-&gt;data;</span><br><span class="line">        <span class="keyword">if</span>(z == s-&gt;parent)</span><br><span class="line">            s-&gt;parent-&gt;lchild = s-&gt;lchild;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s-&gt;parent-&gt;rchild = s-&gt;lchild;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(s-&gt;lchild)</span><br><span class="line">            s-&gt;lchild-&gt;parent = s-&gt;parent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h2><hr><p>本章主要介绍堆，下面是关于堆的一些主要操作：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 最大堆实现, 数组下标从1开始，a[0]不使用。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 交换两数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把第i个元素向上移动</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShiftUp</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">1</span> &amp;&amp; a[i]&gt;a[i/<span class="number">2</span>]) &#123;</span><br><span class="line">        swap(a[i], a[i/<span class="number">2</span>]);</span><br><span class="line">        i &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把第i个元素向下移动</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShiftDown</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>((i=<span class="number">2</span>*i) &lt;= n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i+<span class="number">1</span>&lt;=n &amp;&amp; a[i+<span class="number">1</span>]&gt;a[i]) ++i;</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt; a[i/<span class="number">2</span>]) swap(a[i], a[i/<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把数组a变成具备最大堆性质的数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeHeap</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n/<span class="number">2</span>; i&gt;<span class="number">0</span>; --i)</span><br><span class="line">        ShiftDown(a, n, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向堆中插入元素x</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> &amp;n, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    a[++n] = x;</span><br><span class="line">    ShiftUp(a, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除堆中第i个元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> &amp;n, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    a[i] = a[n--];</span><br><span class="line">    <span class="keyword">if</span>(i&gt;<span class="number">1</span> &amp;&amp; a[i]&gt;a[i/<span class="number">2</span>]) ShiftUp(a, i);</span><br><span class="line">    <span class="keyword">else</span> ShiftDown(a, n, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 堆排序，时间复杂度O(nlogn)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapSort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    MakeHeap(a, n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n; i&gt;<span class="number">1</span>; --i) &#123;</span><br><span class="line">        swap(a[i], a[<span class="number">1</span>]);</span><br><span class="line">        ShiftDown(a, i<span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><hr><p>程序1：循环输入并将每个单词插入集合S(忽略重复单词)，然后排序输出。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; s;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt;::iterator j;</span><br><span class="line"><span class="built_in">string</span> t;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; t)</span><br><span class="line">s.insert(t);</span><br><span class="line"><span class="keyword">for</span>(j=s.begin(); j!=s.end(); ++j)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序2：单词计数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt;::iterator j;</span><br><span class="line"><span class="built_in">string</span> t;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; t)</span><br><span class="line">m[t]++;</span><br><span class="line"><span class="keyword">for</span>(j=m.begin(); j!=m.end(); ++j)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;j-&gt;first&lt;&lt;<span class="string">" "</span>&lt;&lt;j-&gt;second&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序3：建立自己的哈希表(散列表)，以下是一种实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hash</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Hash(): seed_(<span class="number">131</span>), size_(<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(head_, <span class="number">0</span>, <span class="keyword">sizeof</span>(head_));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> id = hash(str);</span><br><span class="line">        <span class="keyword">char</span> *dst = (<span class="keyword">char</span>*)node_[size_].word;</span><br><span class="line">        <span class="keyword">while</span>(*dst++ = *str++);</span><br><span class="line">        node_[size_].next = head_[id];</span><br><span class="line">        head_[id] = &amp;node_[size_];</span><br><span class="line">        ++size_;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Find</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> id = hash(str);</span><br><span class="line">        <span class="keyword">for</span>(Node* p=head_[id]; p; p=p-&gt;next) &#123;</span><br><span class="line">            <span class="keyword">char</span>* dst = (<span class="keyword">char</span>*)p-&gt;word;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(; *(str+i) &amp;&amp; *(str+i)==*(dst+i); ++i);</span><br><span class="line">            <span class="keyword">if</span>(!*(str+i) &amp;&amp; !*(dst+i)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str)</span> </span>&#123;<span class="comment">// BKDR Hash Function</span></span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> hash = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(*str) &#123;</span><br><span class="line">            hash = hash * seed_ + (*str++);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (hash &amp; <span class="number">0x7FFFFFFF</span>) % kHashSize;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> seed_;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> size_;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> kWordSize = <span class="number">26</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> kNodeSize = <span class="number">20000</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> kHashSize = <span class="number">10001</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">        <span class="keyword">char</span> word[kWordSize];</span><br><span class="line">        Node *next;</span><br><span class="line">    &#125;;</span><br><span class="line">    Node node_[kNodeSize];</span><br><span class="line">    Node* head_[kHashSize];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h2><hr><p>假设我们有以下字符串及一个char*数组：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">20</span>] = <span class="string">"hawstein"</span>;</span><br><span class="line"><span class="keyword">char</span>* pc[<span class="number">20</span>];</span><br></pre></td></tr></table></figure><p>我们让指针pc[i]指向字符串的第i个字符，即：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">8</span>; ++i)</span><br><span class="line">pc[i] = &amp;c[i];</span><br></pre></td></tr></table></figure><p>这时候我们输出pc[i]，会得到字符串”hawstein”的所有后缀：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hawstein</span><br><span class="line">awstein</span><br><span class="line">wstein</span><br><span class="line">stein</span><br><span class="line">tein</span><br><span class="line">ein</span><br><span class="line">in</span><br><span class="line">n</span><br></pre></td></tr></table></figure><p>然后，我们对数组pc进行排序，将所有后缀按字典序排序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort(pc, pc+<span class="number">8</span>, cmp);</span><br></pre></td></tr></table></figure><p>其中，比较函数cmp如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span>* p, <span class="keyword">char</span>*q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(p, q) &lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时，我们再输出pc[i]，会得到排序后的结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">awstein</span><br><span class="line">ein</span><br><span class="line">hawstein</span><br><span class="line">in</span><br><span class="line">n</span><br><span class="line">stein</span><br><span class="line">tein</span><br><span class="line">wstein</span><br></pre></td></tr></table></figure><p>我们把数组pc称为“后缀数组”。这里需要注意，数组pc 中存储的是指向每个后缀首字符的地址。我们也可以存储每个后缀首字符在原数组中的下标， 效果是一样的。</p><p>本章中用后缀数组解决了一个小问题：可重叠最长重复子串。比如对于字符串”banana”， 其后缀数组为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">ana</span><br><span class="line">anana</span><br><span class="line">banana</span><br><span class="line">na</span><br><span class="line">nana</span><br></pre></td></tr></table></figure><p>扫描一次数组，比较相邻子串，找到相邻子串的最长公共前缀即可。本例为”ana”， 其中一个a是重叠的。</p><p>后缀数组是处理字符串的有力工具，常见的两种实现方法是：倍增算法和DC3算法。 推荐阅读以下材料来学习后缀数组：</p><blockquote><blockquote><p>许智磊，《后缀数组》<br>罗穗骞，《后缀数组——处理字符串的有力工具》</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> booknote </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>中国程序员容易发音错误的单词</title>
      <link href="/180720_1/"/>
      <url>/180720_1/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>单词</th><th>正确发音</th><th>错误发音</th></tr></thead><tbody><tr><td>access <a href="http://dict.youdao.com/dictvoice?audio=access&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ækses]</td><td>❌ [ək’ses]</td></tr><tr><td>agile <a href="http://dict.youdao.com/dictvoice?audio=agile&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ædʒaɪl]</td><td>❌ [ə’dʒaɪl]</td></tr><tr><td>amazon <a href="http://dict.youdao.com/dictvoice?audio=amazon&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æməzən]</td><td>❌ [‘əmeizən; ə’meizən]</td></tr><tr><td>analogy <a href="http://dict.youdao.com/dictvoice?audio=analogy&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [əˈnælədʒi]</td><td>❌ [ænə’lɒdʒi]</td></tr><tr><td>Angular <a href="http://dict.youdao.com/dictvoice?audio=Angular&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æŋgjʊlə]</td><td>❌ [‘æŋɡələ; ‘æŋdʒʌlə]</td></tr><tr><td>AJAX <a href="http://dict.youdao.com/dictvoice?audio=AJAX&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘eidʒæks]</td><td>❌ [ə’dʒʌks]</td></tr><tr><td>alias <a href="http://dict.youdao.com/dictvoice?audio=alias&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈeɪliəs]</td><td>❌ [ə’lais]</td></tr><tr><td>Apache <a href="http://dict.youdao.com/dictvoice?audio=Apache&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ə’pætʃɪ]</td><td>❌ [ʌpʌtʃ]</td></tr><tr><td>app <a href="http://dict.youdao.com/dictvoice?audio=app&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [æp]</td><td>❌ [eipi’pi]</td></tr><tr><td>archive <a href="http://dict.youdao.com/dictvoice?audio=archive&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɑːkaɪv]</td><td>❌ [‘ətʃɪv]</td></tr><tr><td>array <a href="http://dict.youdao.com/dictvoice?audio=array&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ə’rei]</td><td>❌ [æ’rei]</td></tr><tr><td>ASCII <a href="http://dict.youdao.com/dictvoice?audio=ascii&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æski]</td><td>❌ [ɑːsk]</td></tr><tr><td>aspect <a href="http://dict.youdao.com/dictvoice?audio=aspect&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æspekt]</td><td>❌ [ə’spekt]</td></tr><tr><td>avatar <a href="http://dict.youdao.com/dictvoice?audio=avatar&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ævətɑː]</td><td>❌ [ə’vʌtɑ]</td></tr><tr><td>Azure <a href="http://dict.youdao.com/dictvoice?audio=azure&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘æʒə]</td><td>❌ [ˈæzʊʒə]</td></tr><tr><td>bind <a href="http://dict.youdao.com/dictvoice?audio=bind&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [baɪnd]</td><td>❌ [bɪnd]</td></tr><tr><td>cache <a href="http://dict.youdao.com/dictvoice?audio=cache&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [kæʃ]</td><td>❌ [kætʃ]</td></tr><tr><td>Daemon <a href="http://dict.youdao.com/dictvoice?audio=Daemon&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘diːmən]</td><td>❌ [[dæmən]]</td></tr><tr><td>deny <a href="http://dict.youdao.com/dictvoice?audio=deny&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [dɪ’naɪ]</td><td>❌ [‘dæni]</td></tr><tr><td>deque <a href="http://dict.youdao.com/dictvoice?audio=deque&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘dek]</td><td>❌ [di’kju]</td></tr><tr><td>digest <a href="http://dict.youdao.com/dictvoice?audio=digest&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ n. [‘dɑɪdʒɛst] v. [dɑɪ’dʒɛst]</td><td>❌ [‘dɪgɛst]</td></tr><tr><td>Django <a href="http://dict.youdao.com/dictvoice?audio=Django&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈdʒæŋɡoʊ]</td><td>❌ [diˈdʒæŋɡoʊ]</td></tr><tr><td>doc <a href="http://dict.youdao.com/dictvoice?audio=doc&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [dɒk]</td><td>❌ [daʊk]</td></tr><tr><td>facade <a href="http://dict.youdao.com/dictvoice?audio=facade&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [fə’sɑːd]</td><td>❌ [‘feikeid]</td></tr><tr><td>fedora <a href="http://dict.youdao.com/dictvoice?audio=fedora&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [fɪ’dɔːrə]</td><td>❌ [‘fedərə]</td></tr><tr><td>Git <a href="http://dict.youdao.com/dictvoice?audio=git&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ɡɪt]</td><td>❌ [dʒɪt]</td></tr><tr><td>GNU <a href="https://upload.wikimedia.org/wikipedia/commons/2/24/En-gnu.ogg" target="_blank" rel="noopener">🔊</a></td><td>✅ [gnu:]</td><td></td></tr><tr><td>GUI <a href="http://dict.youdao.com/dictvoice?audio=GUI&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈɡui]</td><td></td></tr><tr><td>Haskell <a href="http://dict.youdao.com/dictvoice?audio=haskell&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈhæskəl]</td><td>❌ [hæˈskəl]</td></tr><tr><td>height <a href="http://dict.youdao.com/dictvoice?audio=height&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [haɪt]</td><td>❌ [heɪt]</td></tr><tr><td>hidden <a href="http://dict.youdao.com/dictvoice?audio=hidden&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘hɪdn]</td><td>❌ [‘haɪdn]</td></tr><tr><td>image <a href="http://dict.youdao.com/dictvoice?audio=image&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɪmɪdʒ]</td><td>❌ [ɪ’meɪdʒ]</td></tr><tr><td>integer <a href="http://dict.youdao.com/dictvoice?audio=integer&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɪntɪdʒə]</td><td>❌ [ˈɪntaɪgə]</td></tr><tr><td>issue <a href="http://dict.youdao.com/dictvoice?audio=issue&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘ɪʃuː]</td><td>❌ [ˈaɪʃuː]</td></tr><tr><td>Java <a href="http://dict.youdao.com/dictvoice?audio=java&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘dʒɑːvə]</td><td>❌ [‘dʒɑːvɑː]</td></tr><tr><td>jpg(jpeg) <a href="http://dict.youdao.com/dictvoice?audio=JPEG&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘dʒeɪpeɡ]</td><td>❌ [ˈdʒeɪˈpi:ˈdʒiː]</td></tr><tr><td>lambda <a href="http://dict.youdao.com/dictvoice?audio=lambda&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈlæmdə]</td><td>❌ [ˈlɒŋmdɑ]</td></tr><tr><td>linear <a href="http://dict.youdao.com/dictvoice?audio=linear&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘lɪnɪə]</td><td>❌ [‘laɪə]</td></tr><tr><td>Linux <a href="http://dict.youdao.com/dictvoice?audio=linux&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘lɪnəks]</td><td>❌ [ˈlɪnʌks; ˈlɪnjuːks]</td></tr><tr><td>locale <a href="http://dict.youdao.com/dictvoice?audio=locale&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [ləʊ’kɑːl]</td><td>❌ [ˈloʊk(ə)l]</td></tr><tr><td>main <a href="http://dict.youdao.com/dictvoice?audio=main&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [meɪn]</td><td>❌ [mɪn]</td></tr><tr><td>margin <a href="http://dict.youdao.com/dictvoice?audio=margin&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘mɑːdʒɪn]</td><td>❌ [‘mʌgɪn]</td></tr><tr><td>matrix <a href="http://dict.youdao.com/dictvoice?audio=matrix&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈmeɪtrɪks]</td><td>❌ [ˈmɑ:trɪks]</td></tr><tr><td>maven <a href="http://dict.youdao.com/dictvoice?audio=maven&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘meɪvn]</td><td>❌ [‘maːvn]</td></tr><tr><td>Microsoft <a href="http://dict.youdao.com/dictvoice?audio=Microsoft&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘maikrəusɔft]</td><td>❌ [‘mikrəusɔft]</td></tr><tr><td>module <a href="http://dict.youdao.com/dictvoice?audio=module&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘mɒdjuːl]</td><td>❌ [‘məʊdl]</td></tr><tr><td>nginx</td><td>✅ Engine X</td><td></td></tr><tr><td>null <a href="http://dict.youdao.com/dictvoice?audio=null&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [nʌl]</td><td>❌ [naʊ]</td></tr><tr><td>OS X</td><td>✅ OS ten</td><td></td></tr><tr><td>phantom <a href="http://dict.youdao.com/dictvoice?audio=phantom&amp;type=2" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘fæntəm]</td><td>❌ [‘pæntəm]</td></tr><tr><td>parameter <a href="http://dict.youdao.com/dictvoice?audio=parameter&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [pə’ræmɪtə]</td><td>❌ [‘pærəmɪtə]</td></tr><tr><td>putty <a href="http://dict.youdao.com/dictvoice?audio=putty&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ˈpʌti]</td><td>❌ [ˈpuːti]</td></tr><tr><td>query <a href="http://dict.youdao.com/dictvoice?audio=query&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘kwɪəri]</td><td>❌ [‘kwaɪri]</td></tr><tr><td>Qt <a href="http://dict.youdao.com/dictvoice?audio=cute&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [kjuːt]</td><td></td></tr><tr><td>Realm <a href="http://dict.youdao.com/dictvoice?audio=realm&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [relm]</td><td>❌ [riəlm]</td></tr><tr><td>resolved <a href="http://dict.youdao.com/dictvoice?audio=resolved&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [rɪ’zɒlvd]</td><td>❌ [rɪ’səʊvd]</td></tr><tr><td>resort <a href="http://dict.youdao.com/dictvoice?audio=resort&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [rɪˈzɔ:t]</td><td>❌ [rɪˈsɔ:t]</td></tr><tr><td>retina <a href="http://dict.youdao.com/dictvoice?audio=retina&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘retɪnə]</td><td>❌ [ri’tina]</td></tr><tr><td>san jose <a href="http://dict.youdao.com/dictvoice?audio=san%20jose&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [sænhəu’zei]</td><td>❌ [sæn’ju:s]</td></tr><tr><td>safari <a href="http://dict.youdao.com/dictvoice?audio=safari&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [sə’fɑːrɪ]</td><td>❌ [sæfərɪ]</td></tr><tr><td>scheme <a href="http://dict.youdao.com/dictvoice?audio=scheme&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [skiːm]</td><td>❌ [s’kæmə]</td></tr><tr><td>SQL</td><td>✅ [ˈsiːkwəl]/[ˈesˈkjuːˈel]</td><td></td></tr><tr><td>sudo</td><td>✅ [‘suːduː]</td><td></td></tr><tr><td>suite <a href="http://dict.youdao.com/dictvoice?audio=suite&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [swiːt]</td><td>❌ [sjuːt]</td></tr><tr><td>typical <a href="http://dict.youdao.com/dictvoice?audio=typical&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘tɪpɪkl]</td><td>❌ [‘taɪpɪkəl]</td></tr><tr><td>Ubuntu <a href="http://dict.youdao.com/dictvoice?audio=ubuntu&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [ʊ’bʊntʊ]</td><td>❌ [juː’bʊntʊ]</td></tr><tr><td>variable <a href="http://dict.youdao.com/dictvoice?audio=variable&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘veəriəbl]</td><td>❌ [və’raiəbl]</td></tr><tr><td>vue <a href="http://dict.youdao.com/dictvoice?audio=vue&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [v’ju:]</td><td>❌ [v’ju:i]</td></tr><tr><td>width <a href="http://dict.youdao.com/dictvoice?audio=width&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [wɪdθ]</td><td>❌ [waɪdθ]</td></tr><tr><td>YouTube <a href="http://dict.youdao.com/dictvoice?audio=youtube&amp;type=1" target="_blank" rel="noopener">🔊</a></td><td>✅ [‘juː’tjuːb]</td><td>❌ [‘juː’tʊbɪ]</td></tr></tbody></table><blockquote><p>本着简单的原则, 又为了避免程序猿们出现选择困难症, ‘正确音标’采用了最接近有道词典音频的英式 DJ 音标, 不代表其唯一性.<br>专业在线英语词典请参考<a href="https://www.zhihu.com/question/19707759" target="_blank" rel="noopener">知乎链接:在线英语词典哪个比较好?</a></p></blockquote><blockquote><p>参考资料</p><ol><li><a href="https://www.zhihu.com/question/19739907" target="_blank" rel="noopener">https://www.zhihu.com/question/19739907</a></li><li><a href="https://www.v2ex.com/t/131094" target="_blank" rel="noopener">https://www.v2ex.com/t/131094</a></li><li><a href="https://www.v2ex.com/t/309350" target="_blank" rel="noopener">https://www.v2ex.com/t/309350</a></li><li><a href="https://www.v2ex.com/t/63781" target="_blank" rel="noopener">https://www.v2ex.com/t/63781</a></li><li><a href="https://www.v2ex.com/t/246033" target="_blank" rel="noopener">https://www.v2ex.com/t/246033</a></li><li><a href="https://www.v2ex.com/t/342087" target="_blank" rel="noopener">https://www.v2ex.com/t/342087</a></li><li><a href="https://github.com/shimohq/chinese-programmer-wrong-pronunciation/blob/master/README.md" target="_blank" rel="noopener">https://github.com/shimohq/chinese-programmer-wrong-pronunciation/blob/master/README.md</a></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> english </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>编程词汇表</title>
      <link href="/180719/"/>
      <url>/180719/</url>
      
        <content type="html"><![CDATA[<h3 id="A"><a href="#A" class="headerlink" title="A"></a>A</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>a block of pointers</td><td style="text-align:center">一块指针</td><td style="text-align:center">一组指针</td><td style="text-align:center"></td></tr><tr><td>abbreviation</td><td style="text-align:center">缩略语</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>abstract</td><td style="text-align:center">抽象的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>abstract syntax tree, AST</td><td style="text-align:center">抽象语法树</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>abstraction</td><td style="text-align:center">抽象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>abstraction barrier</td><td style="text-align:center">抽象屏障</td><td style="text-align:center">抽象阻碍</td><td style="text-align:center"></td></tr><tr><td>abstraction of function calls</td><td style="text-align:center">函数调用抽象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>access</td><td style="text-align:center">访问</td><td style="text-align:center">存取</td><td style="text-align:center"></td></tr><tr><td>access function</td><td style="text-align:center">访问函数</td><td style="text-align:center">存取函数</td><td style="text-align:center"></td></tr><tr><td>accumulator</td><td style="text-align:center">累加器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>activate</td><td style="text-align:center">激活</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>ad hoc</td><td style="text-align:center">专设</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>adapter</td><td style="text-align:center">适配器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>address</td><td style="text-align:center">地址</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>algebraic data type</td><td style="text-align:center">代数数据类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>algorithm</td><td style="text-align:center">算法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>alias</td><td style="text-align:center">别名</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>allocate</td><td style="text-align:center">分配</td><td style="text-align:center">配置</td><td style="text-align:center"></td></tr><tr><td>alternative</td><td style="text-align:center">备选</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>amortized analysis</td><td style="text-align:center">平摊分析</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>anaphoric</td><td style="text-align:center">指代</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>annotation</td><td style="text-align:center">注解</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>anonymous function</td><td style="text-align:center">匿名函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>antecedent</td><td style="text-align:center">前提</td><td style="text-align:center">前件</td><td style="text-align:center">先决条件</td></tr><tr><td>append</td><td style="text-align:center">追加</td><td style="text-align:center">拼接</td><td style="text-align:center"></td></tr><tr><td>application</td><td style="text-align:center">应用</td><td style="text-align:center">应用程序</td><td style="text-align:center"></td></tr><tr><td>application framework</td><td style="text-align:center">应用框架</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>application program interface, API</td><td style="text-align:center">应用程序编程接口</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>application service provider, ASP</td><td style="text-align:center">应用程序服务提供商</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>applicative</td><td style="text-align:center">应用序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>argument</td><td style="text-align:center">参数</td><td style="text-align:center">自变量</td><td style="text-align:center">实际参数/实参</td></tr><tr><td>arithmetic</td><td style="text-align:center">算术</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>array</td><td style="text-align:center">数组</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>artificial intelligence, AI</td><td style="text-align:center">人工智能</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>assemble</td><td style="text-align:center">组合</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>assembly</td><td style="text-align:center">汇编</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>assignment</td><td style="text-align:center">赋值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>assignment operator</td><td style="text-align:center">赋值操作符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>associated</td><td style="text-align:center">关联的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>association list, alist</td><td style="text-align:center">关联列表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>atom</td><td style="text-align:center">原子</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>atomic</td><td style="text-align:center">原子的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>atomic value</td><td style="text-align:center">原子型值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>attribute</td><td style="text-align:center">属性</td><td style="text-align:center">特性</td><td style="text-align:center"></td></tr><tr><td>augmented</td><td style="text-align:center">扩充</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>automatic memory management</td><td style="text-align:center">自动内存管理</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>automatically infer</td><td style="text-align:center">自动推导</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>autometa theory</td><td style="text-align:center">自动机理论</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>auxiliary</td><td style="text-align:center">辅助</td><td style="text-align:center"></td></tr></tbody></table><h3 id="B"><a href="#B" class="headerlink" title="B"></a>B</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>backquote</td><td style="text-align:center">反引用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>backtrace</td><td style="text-align:center">回溯</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>backward compatible</td><td style="text-align:center">向下兼容</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bandwidth</td><td style="text-align:center">带宽</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>base case</td><td style="text-align:center">基本情形</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>base class</td><td style="text-align:center">基类</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Bayes’ theorem</td><td style="text-align:center">贝叶斯定理</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>best viable function</td><td style="text-align:center">最佳可行函式</td><td style="text-align:center">最佳可行函数</td><td style="text-align:center"></td></tr><tr><td>Bezier curve</td><td style="text-align:center">贝塞尔曲线</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bignum</td><td style="text-align:center">大数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>binary operator</td><td style="text-align:center">二元操作符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>binary search</td><td style="text-align:center">二分查找</td><td style="text-align:center">二分搜索</td><td style="text-align:center">二叉搜索</td></tr><tr><td>binary search tree</td><td style="text-align:center">二叉搜索树</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>binary tree</td><td style="text-align:center">二叉树</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>binding</td><td style="text-align:center">绑定</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>binding vector</td><td style="text-align:center">绑定向量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bit</td><td style="text-align:center">位</td><td style="text-align:center">比特</td><td style="text-align:center"></td></tr><tr><td>bit manipulation</td><td style="text-align:center">位操作</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>black box abstraction</td><td style="text-align:center">黑箱抽象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>block</td><td style="text-align:center">块</td><td style="text-align:center">区块</td><td style="text-align:center"></td></tr><tr><td>block structure</td><td style="text-align:center">块结构</td><td style="text-align:center">区块结构</td><td style="text-align:center"></td></tr><tr><td>block name</td><td style="text-align:center">代码块名字</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Blub paradox</td><td style="text-align:center">Blub 困境</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>body</td><td style="text-align:center">体</td><td style="text-align:center">主体</td><td style="text-align:center"></td></tr><tr><td>boilerplate</td><td style="text-align:center">公式化</td><td style="text-align:center">样板</td><td style="text-align:center"></td></tr><tr><td>bookkeeping</td><td style="text-align:center">簿记</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>boolean</td><td style="text-align:center">布尔</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>border</td><td style="text-align:center">边框</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bottom-up design</td><td style="text-align:center">自底向上的设计</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bottom-up programming</td><td style="text-align:center">自底向上编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bound</td><td style="text-align:center">边界</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bounds checking</td><td style="text-align:center">边界检查</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>box notation</td><td style="text-align:center">箱子表示法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>brace</td><td style="text-align:center">花括弧</td><td style="text-align:center">花括号</td><td style="text-align:center"></td></tr><tr><td>bracket</td><td style="text-align:center">方括弧</td><td style="text-align:center">方括号</td><td style="text-align:center"></td></tr><tr><td>branch</td><td style="text-align:center">分支</td><td style="text-align:center">跳转</td><td style="text-align:center"></td></tr><tr><td>breadth-first</td><td style="text-align:center">广度优先</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>breadth-first search, BFS</td><td style="text-align:center">广度优先搜索</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>breakpoint</td><td style="text-align:center">断点</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>brevity</td><td style="text-align:center">简洁</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>buffer</td><td style="text-align:center">缓冲区</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>buffer overflow attack</td><td style="text-align:center">缓冲区溢出攻击</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bug</td><td style="text-align:center">臭虫</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>building</td><td style="text-align:center">创建</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>built-in</td><td style="text-align:center">内置</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>byte</td><td style="text-align:center">字节</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>bytecode</td><td style="text-align:center">字节码</td><td style="text-align:center"></td></tr></tbody></table><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>cache</td><td style="text-align:center">缓存</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>call</td><td style="text-align:center">调用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>callback</td><td style="text-align:center">回调</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>CamelCase</td><td style="text-align:center">驼峰式大小写</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>candidate function</td><td style="text-align:center">候选函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>capture</td><td style="text-align:center">捕捉</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>case</td><td style="text-align:center">分支</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>character</td><td style="text-align:center">字符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>checksum</td><td style="text-align:center">校验和</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>child class</td><td style="text-align:center">子类</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>choke point</td><td style="text-align:center">滞塞点</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>chunk</td><td style="text-align:center">块</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>circular definition</td><td style="text-align:center">循环定义</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>clarity</td><td style="text-align:center">清晰</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>class</td><td style="text-align:center">类</td><td style="text-align:center">类别</td><td style="text-align:center"></td></tr><tr><td>class declaration</td><td style="text-align:center">类声明</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>class library</td><td style="text-align:center">类库</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>client</td><td style="text-align:center">客户</td><td style="text-align:center">客户端</td><td style="text-align:center"></td></tr><tr><td>clipboard</td><td style="text-align:center">剪贴板</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>clone</td><td style="text-align:center">克隆</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>closed world assumption</td><td style="text-align:center">封闭世界假定</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>closure</td><td style="text-align:center">闭包</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>clutter</td><td style="text-align:center">杂乱</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>code</td><td style="text-align:center">代码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>code bloat</td><td style="text-align:center">代码膨胀</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>collection</td><td style="text-align:center">收集器</td><td style="text-align:center">复合类型</td><td style="text-align:center"></td></tr><tr><td>column</td><td style="text-align:center">行</td><td style="text-align:center">栏</td><td style="text-align:center"></td></tr><tr><td>column-major order</td><td style="text-align:center">行主序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>comma</td><td style="text-align:center">逗号</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>command-line</td><td style="text-align:center">命令行</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>command-line interface, CLI</td><td style="text-align:center">命令行界面</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Common Lisp Object System, CLOS</td><td style="text-align:center">Common Lisp 对象系统</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Common Gateway Interface, CGI</td><td style="text-align:center">通用网关接口</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compatible</td><td style="text-align:center">兼容</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compilation</td><td style="text-align:center">编译</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compilation parameter</td><td style="text-align:center">编译参数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compile</td><td style="text-align:center">编译</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compile inline</td><td style="text-align:center">内联编译</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compile time</td><td style="text-align:center">编译期</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compiled form</td><td style="text-align:center">编译后的形式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compiler</td><td style="text-align:center">编译器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>complex</td><td style="text-align:center">复杂</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>complexity</td><td style="text-align:center">复杂度</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>compliment</td><td style="text-align:center">补集</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>component</td><td style="text-align:center">组件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>composability</td><td style="text-align:center">可组合性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>composition</td><td style="text-align:center">组合</td><td style="text-align:center">组合函数</td><td style="text-align:center"></td></tr><tr><td>compound value</td><td style="text-align:center">复合数据</td><td style="text-align:center">复合值</td><td style="text-align:center"></td></tr><tr><td>compression</td><td style="text-align:center">压缩</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>computation</td><td style="text-align:center">计算</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>computer</td><td style="text-align:center">计算机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>concatenation</td><td style="text-align:center">串接</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>concept</td><td style="text-align:center">概念</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>concrete</td><td style="text-align:center">具体</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>concurrency</td><td style="text-align:center">并发</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>concurrent</td><td style="text-align:center">并发</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>conditional</td><td style="text-align:center">条件式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>conditional variable</td><td style="text-align:center">条件变量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>configuration</td><td style="text-align:center">配置</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>connection</td><td style="text-align:center">连接</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>cons</td><td style="text-align:center">构造</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>cons cell</td><td style="text-align:center">构元</td><td style="text-align:center">cons 单元</td><td style="text-align:center"></td></tr><tr><td>consequent</td><td style="text-align:center">结果</td><td style="text-align:center">推论</td><td style="text-align:center"></td></tr><tr><td>consistent</td><td style="text-align:center">一致性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>constant</td><td style="text-align:center">常量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>constraint</td><td style="text-align:center">约束</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>constraint programming</td><td style="text-align:center">约束式编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>container</td><td style="text-align:center">容器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>content-based filtering</td><td style="text-align:center">基于内容的过滤</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>context</td><td style="text-align:center">上下文</td><td style="text-align:center">语境</td><td style="text-align:center">环境</td></tr><tr><td>continuation</td><td style="text-align:center">延续性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>continuous integration, CI</td><td style="text-align:center">持续集成</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>control</td><td style="text-align:center">控件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>cooperative multitasking</td><td style="text-align:center">协作式多任务</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>copy</td><td style="text-align:center">拷贝</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>corollary</td><td style="text-align:center">推论</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>coroutine</td><td style="text-align:center">协程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>corruption</td><td style="text-align:center">程序崩溃</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>crash</td><td style="text-align:center">崩溃</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>create</td><td style="text-align:center">创建</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>crystallize</td><td style="text-align:center">固化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>curly</td><td style="text-align:center">括弧状的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>curried</td><td style="text-align:center">柯里的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>currying</td><td style="text-align:center">柯里化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>cursor</td><td style="text-align:center">光标</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>curvy</td><td style="text-align:center">卷曲的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>cycle</td><td style="text-align:center">周期</td><td style="text-align:center"></td></tr></tbody></table><h3 id="D"><a href="#D" class="headerlink" title="D"></a>D</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>dangling pointer</td><td style="text-align:center">迷途指针</td><td style="text-align:center">野指针</td><td style="text-align:center"></td></tr><tr><td>Defense Advanced Research Projects Agency, DARPA</td><td style="text-align:center">美国国防部高级研究计划局</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>data</td><td style="text-align:center">数据</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>data structure</td><td style="text-align:center">数据结构</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>data type</td><td style="text-align:center">数据类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>data-driven</td><td style="text-align:center">数据驱动</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>database</td><td style="text-align:center">数据库</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>database schema</td><td style="text-align:center">数据库模式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>datagram</td><td style="text-align:center">数据报文</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dead lock</td><td style="text-align:center">死锁</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>debug</td><td style="text-align:center">调试</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>debugger</td><td style="text-align:center">调试器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>debugging</td><td style="text-align:center">调试</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>declaration</td><td style="text-align:center">声明</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>declaration forms</td><td style="text-align:center">声明形式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>declarative</td><td style="text-align:center">声明式</td><td style="text-align:center">说明式</td><td style="text-align:center"></td></tr><tr><td>declarative knowledge</td><td style="text-align:center">声明式知识</td><td style="text-align:center">说明式知识</td><td style="text-align:center"></td></tr><tr><td>declarative programming</td><td style="text-align:center">声明式编程</td><td style="text-align:center">说明式编程</td><td style="text-align:center"></td></tr><tr><td>declarativeness</td><td style="text-align:center">可声明性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>declaring</td><td style="text-align:center">声明</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>deconstruction</td><td style="text-align:center">解构</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>deduction</td><td style="text-align:center">推导</td><td style="text-align:center">推断</td><td style="text-align:center"></td></tr><tr><td>default</td><td style="text-align:center">缺省</td><td style="text-align:center">默认</td><td style="text-align:center"></td></tr><tr><td>defer</td><td style="text-align:center">推迟</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>deficiency</td><td style="text-align:center">缺陷</td><td style="text-align:center">不足</td><td style="text-align:center"></td></tr><tr><td>define</td><td style="text-align:center">定义</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>definition</td><td style="text-align:center">定义</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>delegate</td><td style="text-align:center">委托</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>delegation</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dellocate</td><td style="text-align:center">释放</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>demarshal</td><td style="text-align:center">散集</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>deprecated</td><td style="text-align:center">废弃</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>depth-first</td><td style="text-align:center">深度优先</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>depth-first search, BFS</td><td style="text-align:center">深度优先搜索</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>derived</td><td style="text-align:center">派生</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>derived class</td><td style="text-align:center">派生类</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>design pattern</td><td style="text-align:center">设计模式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>designator</td><td style="text-align:center">指示符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>destructive</td><td style="text-align:center">破坏性的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>destructive function</td><td style="text-align:center">破坏性函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>destructuring</td><td style="text-align:center">解构</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>device driver</td><td style="text-align:center">硬件驱动程序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dimensions</td><td style="text-align:center">维度</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>directive</td><td style="text-align:center">指令</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>directive</td><td style="text-align:center">指示符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>directory</td><td style="text-align:center">目录</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>disk</td><td style="text-align:center">盘</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dispatch</td><td style="text-align:center">分派</td><td style="text-align:center">派发</td><td style="text-align:center"></td></tr><tr><td>distributed computing</td><td style="text-align:center">分布式计算</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>DLL hell</td><td style="text-align:center">DLL 地狱</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>document</td><td style="text-align:center">文档</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dotted list</td><td style="text-align:center">点状列表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dotted-pair notation</td><td style="text-align:center">带点尾部表示法</td><td style="text-align:center">带点尾部记法</td><td style="text-align:center"></td></tr><tr><td>duplicate</td><td style="text-align:center">复本</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dynamic binding</td><td style="text-align:center">动态绑定</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dynamic extent</td><td style="text-align:center">动态范围</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dynamic languages</td><td style="text-align:center">动态语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dynamic scope</td><td style="text-align:center">动态作用域</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>dynamic type</td><td style="text-align:center">动态类型</td><td style="text-align:center"></td></tr></tbody></table><h3 id="E"><a href="#E" class="headerlink" title="E"></a>E</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>effect</td><td style="text-align:center">效果</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>efficiency</td><td style="text-align:center">效率</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>efficient</td><td style="text-align:center">高效</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>elaborate</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>elucidating</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>embedded language</td><td style="text-align:center">嵌入式语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>emulate</td><td style="text-align:center">仿真</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>encapsulation</td><td style="text-align:center">封装</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>enum</td><td style="text-align:center">枚举</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>enumeration type</td><td style="text-align:center">枚举类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>enumrators</td><td style="text-align:center">枚举器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>environment</td><td style="text-align:center">环境</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>equal</td><td style="text-align:center">相等</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>equality</td><td style="text-align:center">相等性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>equation</td><td style="text-align:center">方程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>equivalence</td><td style="text-align:center">等价性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>error message</td><td style="text-align:center">错误信息</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>error-checking</td><td style="text-align:center">错误检查</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>escaped</td><td style="text-align:center">逃脱</td><td style="text-align:center">溢出</td><td style="text-align:center"></td></tr><tr><td>escape character</td><td style="text-align:center">转义字符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>evaluate</td><td style="text-align:center">求值</td><td style="text-align:center">评估</td><td style="text-align:center"></td></tr><tr><td>evaluation</td><td style="text-align:center">求值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>event</td><td style="text-align:center">事件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>event driven</td><td style="text-align:center">事件驱动</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>exception</td><td style="text-align:center">异常</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>exception handling</td><td style="text-align:center">异常处理</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>exception specification</td><td style="text-align:center">异常规范</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>exit</td><td style="text-align:center">退出</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>expendable</td><td style="text-align:center">可扩展的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>explicit</td><td style="text-align:center">显式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>exploratory programming</td><td style="text-align:center">探索式编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>export</td><td style="text-align:center">导出</td><td style="text-align:center">引出</td><td style="text-align:center"></td></tr><tr><td>expression</td><td style="text-align:center">表达式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>expressive power</td><td style="text-align:center">表达能力</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>extensibility</td><td style="text-align:center">可扩展性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>extent</td><td style="text-align:center">范围</td><td style="text-align:center">程度</td><td style="text-align:center"></td></tr><tr><td>external representation</td><td style="text-align:center">外部表示法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>extreme programming</td><td style="text-align:center">极限编程</td><td style="text-align:center"></td></tr></tbody></table><h3 id="F"><a href="#F" class="headerlink" title="F"></a>F</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>factorial</td><td style="text-align:center">阶乘</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>family</td><td style="text-align:center">（类型的）系</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>feasible</td><td style="text-align:center">可行的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>feature</td><td style="text-align:center">特色</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>field</td><td style="text-align:center">字段</td><td style="text-align:center">栏位</td><td style="text-align:center"></td></tr><tr><td>file</td><td style="text-align:center">文件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>file handle</td><td style="text-align:center">文件句柄</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>fill pointer</td><td style="text-align:center">填充指针</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>fineo-grained</td><td style="text-align:center">细粒度</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>firmware</td><td style="text-align:center">固件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>first-class</td><td style="text-align:center">第一类的</td><td style="text-align:center">第一级的</td><td style="text-align:center">一等的</td></tr><tr><td>first-class function</td><td style="text-align:center">第一级函数</td><td style="text-align:center">第一类函数</td><td style="text-align:center">一等函数</td></tr><tr><td>first-class object</td><td style="text-align:center">第一类的对象</td><td style="text-align:center">第一级的对象</td><td style="text-align:center">一等公民</td></tr><tr><td>fixed-point</td><td style="text-align:center">不动点</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>fixnum</td><td style="text-align:center">定长数</td><td style="text-align:center">定点数</td><td style="text-align:center"></td></tr><tr><td>flag</td><td style="text-align:center">标记</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>flash</td><td style="text-align:center">闪存</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>flexibility</td><td style="text-align:center">灵活性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>floating-point</td><td style="text-align:center">浮点数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>floating-point notation</td><td style="text-align:center">浮点数表示法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>flush</td><td style="text-align:center">刷新</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>fold</td><td style="text-align:center">折叠</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>font</td><td style="text-align:center">字体</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>force</td><td style="text-align:center">迫使</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>form</td><td style="text-align:center">形式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>form</td><td style="text-align:center">表单</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>formal parameter</td><td style="text-align:center">形参</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>formal relation</td><td style="text-align:center">形式关系</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>forward</td><td style="text-align:center">转发</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>forward references</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>fractal</td><td style="text-align:center">分形</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>fractions</td><td style="text-align:center">派系</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>framework</td><td style="text-align:center">框架</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>freeware</td><td style="text-align:center">自由软件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>function</td><td style="text-align:center">函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>function literal</td><td style="text-align:center">函数字面常量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>function object</td><td style="text-align:center">函数对象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>functional arguments</td><td style="text-align:center">函数型参数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>functional programming</td><td style="text-align:center">函数式编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>functionality</td><td style="text-align:center">功能性</td><td style="text-align:center"></td></tr></tbody></table><h3 id="G"><a href="#G" class="headerlink" title="G"></a>G</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>game</td><td style="text-align:center">游戏</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>garbage</td><td style="text-align:center">垃圾</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>garbage collection</td><td style="text-align:center">垃圾回收</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>garbage collector</td><td style="text-align:center">垃圾回收器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>generalized</td><td style="text-align:center">泛化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>generalized variable</td><td style="text-align:center">广义变量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>generate</td><td style="text-align:center">生成</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>generator</td><td style="text-align:center">生成器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>generic</td><td style="text-align:center">通用的</td><td style="text-align:center">泛化的</td><td style="text-align:center"></td></tr><tr><td>generic algorithm</td><td style="text-align:center">通用算法</td><td style="text-align:center">泛型算法</td><td style="text-align:center"></td></tr><tr><td>generic function</td><td style="text-align:center">通用函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>generic programming</td><td style="text-align:center">通用编程</td><td style="text-align:center">泛型编程</td><td style="text-align:center"></td></tr><tr><td>genrative programming</td><td style="text-align:center">生产式编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>global</td><td style="text-align:center">全局的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>global declaration</td><td style="text-align:center">全局声明</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>glue program</td><td style="text-align:center">胶水程序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>goto</td><td style="text-align:center">跳转</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>graphical user interface, GUI</td><td style="text-align:center">图形用户界面</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>greatest common divisor</td><td style="text-align:center">最大公因数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Greenspun’s tenth rule</td><td style="text-align:center">格林斯潘第十定律</td><td style="text-align:center"></td></tr></tbody></table><h3 id="H"><a href="#H" class="headerlink" title="H"></a>H</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>hack</td><td style="text-align:center">破解</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>hacker</td><td style="text-align:center">黑客</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>handle</td><td style="text-align:center">处理器</td><td style="text-align:center">处理程序</td><td style="text-align:center">句柄</td></tr><tr><td>hard disk</td><td style="text-align:center">硬盘</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>hard-wire</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>hardware</td><td style="text-align:center">硬件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>hash tables</td><td style="text-align:center">哈希表</td><td style="text-align:center">散列表</td><td style="text-align:center"></td></tr><tr><td>header</td><td style="text-align:center">头部</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>header file</td><td style="text-align:center">头文件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>heap</td><td style="text-align:center">堆</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>helper</td><td style="text-align:center">辅助函数</td><td style="text-align:center">辅助方法</td><td style="text-align:center"></td></tr><tr><td>heuristic</td><td style="text-align:center">启发式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>high-order</td><td style="text-align:center">高阶</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>higher-order function</td><td style="text-align:center">高阶函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>higher-order procedure</td><td style="text-align:center">高阶过程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>hyperlink</td><td style="text-align:center">超链接</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>HyperText Markup Language, HTML</td><td style="text-align:center">超文本标记语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>HyperText Transfer Protocol, HTTP</td><td style="text-align:center">超文本传输协议</td><td style="text-align:center"></td></tr></tbody></table><h3 id="I"><a href="#I" class="headerlink" title="I"></a>I</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>identical</td><td style="text-align:center">一致</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>identifier</td><td style="text-align:center">标识符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>identity</td><td style="text-align:center">同一性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>ill type</td><td style="text-align:center">类型不正确</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>illusion</td><td style="text-align:center">错觉</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>imperative</td><td style="text-align:center">命令式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>imperative programming</td><td style="text-align:center">命令式编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>implement</td><td style="text-align:center">实现</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>implementation</td><td style="text-align:center">实现</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>implicit</td><td style="text-align:center">隐式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>import</td><td style="text-align:center">导入</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>incremental testing</td><td style="text-align:center">增量测试</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>indent</td><td style="text-align:center">缩排</td><td style="text-align:center">缩进</td><td style="text-align:center"></td></tr><tr><td>indentation</td><td style="text-align:center">缩排</td><td style="text-align:center">缩进</td><td style="text-align:center"></td></tr><tr><td>indented</td><td style="text-align:center">缩排</td><td style="text-align:center">缩进</td><td style="text-align:center"></td></tr><tr><td>indention</td><td style="text-align:center">缩排</td><td style="text-align:center">缩进</td><td style="text-align:center"></td></tr><tr><td>infer</td><td style="text-align:center">推导</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>infinite loop</td><td style="text-align:center">无限循环</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>infinite recursion</td><td style="text-align:center">无限递归</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>infinite precision</td><td style="text-align:center">无限精度</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>infix</td><td style="text-align:center">中序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>information</td><td style="text-align:center">信息</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>information technology, IT</td><td style="text-align:center">信息技术</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>inheritance</td><td style="text-align:center">继承</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>initialization</td><td style="text-align:center">初始化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>initialize</td><td style="text-align:center">初始化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>inline</td><td style="text-align:center">内联</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>inline expansion</td><td style="text-align:center">内联展开</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>inner class</td><td style="text-align:center">内嵌类</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>inner loop</td><td style="text-align:center">内层循环</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>input</td><td style="text-align:center">输入</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>instances</td><td style="text-align:center">实例</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>instantiate</td><td style="text-align:center">实例化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>instructive</td><td style="text-align:center">教学性的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>instrument</td><td style="text-align:center">记录仪</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>integer</td><td style="text-align:center">整数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>integrate</td><td style="text-align:center">集成</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interactive language</td><td style="text-align:center">交互式语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interactive programming environment</td><td style="text-align:center">交互式编程环境</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interactive testing</td><td style="text-align:center">交互式测试</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interacts</td><td style="text-align:center">交互</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interface</td><td style="text-align:center">接口</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>intermediate form</td><td style="text-align:center">过渡形式</td><td style="text-align:center">中间形式</td><td style="text-align:center"></td></tr><tr><td>internal</td><td style="text-align:center">内部</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>internet</td><td style="text-align:center">互联网</td><td style="text-align:center">因特网</td><td style="text-align:center"></td></tr><tr><td>interpolation</td><td style="text-align:center">插值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interpret</td><td style="text-align:center">解释</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interpreter</td><td style="text-align:center">解释器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>interrupt</td><td style="text-align:center">中止</td><td style="text-align:center">中断</td><td style="text-align:center"></td></tr><tr><td>intersection</td><td style="text-align:center">交集</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>inter-process communication, IPC</td><td style="text-align:center">进程间通信</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>invariants</td><td style="text-align:center">约束条件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>invoke</td><td style="text-align:center">调用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>item</td><td style="text-align:center">项</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>iterate</td><td style="text-align:center">迭代</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>iteration</td><td style="text-align:center">迭代的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>iterative</td><td style="text-align:center">迭代的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>iterator</td><td style="text-align:center">迭代器</td><td style="text-align:center"></td></tr></tbody></table><h3 id="J"><a href="#J" class="headerlink" title="J"></a>J</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>jagged</td><td style="text-align:center">锯齿状的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>job control language, JCL</td><td style="text-align:center">作业控制语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>judicious</td><td style="text-align:center">明智的</td><td style="text-align:center"></td></tr></tbody></table><h3 id="K"><a href="#K" class="headerlink" title="K"></a>K</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>kernel</td><td style="text-align:center">核心</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>kernel language</td><td style="text-align:center">核心语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>keyword argument</td><td style="text-align:center">关键字参数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>keywords</td><td style="text-align:center">关键字</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>kludge</td><td style="text-align:center">蹩脚</td><td style="text-align:center"></td></tr></tbody></table><h3 id="H-1"><a href="#H-1" class="headerlink" title="H"></a>H</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>lambda calculus</td><td style="text-align:center">lambda 演算</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>larval startup</td><td style="text-align:center">雏形创业公司</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>laser</td><td style="text-align:center">激光</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>latitude</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>layout</td><td style="text-align:center">版型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>lazy</td><td style="text-align:center">惰性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>lazy evaluation</td><td style="text-align:center">惰性求值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>legacy software</td><td style="text-align:center">历史遗留软件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>leverage</td><td style="text-align:center">杠杆</td><td style="text-align:center">(动词)利用</td><td style="text-align:center"></td></tr><tr><td>lexical</td><td style="text-align:center">词法的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>lexical analysis</td><td style="text-align:center">词法分析</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>lexical closure</td><td style="text-align:center">词法闭包</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>lexical scope</td><td style="text-align:center">词法作用域</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Language For Smart People, LFSP</td><td style="text-align:center">聪明人的语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>library</td><td style="text-align:center">库</td><td style="text-align:center">函数库</td><td style="text-align:center">函式库</td></tr><tr><td>lifetime</td><td style="text-align:center">生命期</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>linear iteration</td><td style="text-align:center">线性迭代</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>linear recursion</td><td style="text-align:center">线性递归</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>link</td><td style="text-align:center">链接</td><td style="text-align:center">连接</td><td style="text-align:center"></td></tr><tr><td>linker</td><td style="text-align:center">连接器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>list</td><td style="text-align:center">列表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>list operation</td><td style="text-align:center">列表操作</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>literal</td><td style="text-align:center">字面</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>literal constant</td><td style="text-align:center">字面常量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>literal representation</td><td style="text-align:center">字面量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>load</td><td style="text-align:center">装载</td><td style="text-align:center">加载</td><td style="text-align:center"></td></tr><tr><td>loader</td><td style="text-align:center">装载器</td><td style="text-align:center">加载器</td><td style="text-align:center"></td></tr><tr><td>local</td><td style="text-align:center">局部的</td><td style="text-align:center">局域的</td><td style="text-align:center"></td></tr><tr><td>local declarations</td><td style="text-align:center">局部声明</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>local function</td><td style="text-align:center">局部函数</td><td style="text-align:center">局域函数</td><td style="text-align:center"></td></tr><tr><td>local variable</td><td style="text-align:center">局部变量</td><td style="text-align:center">局域变量</td><td style="text-align:center"></td></tr><tr><td>locality</td><td style="text-align:center">局部性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>loop</td><td style="text-align:center">循环</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>lvalue</td><td style="text-align:center">左值</td><td style="text-align:center"></td></tr></tbody></table><h3 id="M"><a href="#M" class="headerlink" title="M"></a>M</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>machine instruction</td><td style="text-align:center">机器指令</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>machine language</td><td style="text-align:center">机器语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>machine language code</td><td style="text-align:center">机器语言代码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>machine learning</td><td style="text-align:center">机器学习</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>macro</td><td style="text-align:center">宏</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mailing list</td><td style="text-align:center">邮件列表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mainframes</td><td style="text-align:center">大型机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>maintain</td><td style="text-align:center">维护</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>manifest typing</td><td style="text-align:center">显式类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>manipulator</td><td style="text-align:center">操纵器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mapping</td><td style="text-align:center">映射</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mapping functions</td><td style="text-align:center">映射函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>marshal</td><td style="text-align:center">列集</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>math envy</td><td style="text-align:center">对数学家的妒忌</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>member</td><td style="text-align:center">成员</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>memorizing</td><td style="text-align:center">记忆化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>memory</td><td style="text-align:center">内存</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>memory allocation</td><td style="text-align:center">内存分配</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>memory leaks</td><td style="text-align:center">内存泄漏</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>menu</td><td style="text-align:center">菜单</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>message</td><td style="text-align:center">消息</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>message-passing</td><td style="text-align:center">消息传递</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>meta-</td><td style="text-align:center">元-</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>meta-programming</td><td style="text-align:center">元编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>metacircular</td><td style="text-align:center">元循环</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>method</td><td style="text-align:center">方法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>method combination</td><td style="text-align:center">方法组合</td><td style="text-align:center">方法组合机制</td><td style="text-align:center"></td></tr><tr><td>micro</td><td style="text-align:center">微</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>middleware</td><td style="text-align:center">中间件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>migration</td><td style="text-align:center">（数据库）迁移</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>minimal network</td><td style="text-align:center">最小网络</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mirror</td><td style="text-align:center">镜射</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mismatch type</td><td style="text-align:center">类型不匹配</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>model</td><td style="text-align:center">模型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>modem</td><td style="text-align:center">调制解调器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>modifier</td><td style="text-align:center">修饰符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>modularity</td><td style="text-align:center">模块性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>module</td><td style="text-align:center">模块</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>monad</td><td style="text-align:center">单子</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>monkey patch</td><td style="text-align:center">猴子补丁</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>monomorphic type language</td><td style="text-align:center">单型语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Moore’s law</td><td style="text-align:center">摩尔定律</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mouse</td><td style="text-align:center">鼠标</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>multi-task</td><td style="text-align:center">多任务</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>multiple values</td><td style="text-align:center">多值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mutable</td><td style="text-align:center">可变的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>mutex</td><td style="text-align:center">互斥锁</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Multiple Virtual Storage, MVS</td><td style="text-align:center">多重虚拟存储</td><td style="text-align:center"></td></tr></tbody></table><h3 id="N"><a href="#N" class="headerlink" title="N"></a>N</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>namespace</td><td style="text-align:center">命名空间</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>native</td><td style="text-align:center">本地的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>native code</td><td style="text-align:center">本地码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>natural language</td><td style="text-align:center">自然语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>natural language processing</td><td style="text-align:center">自然语言处理</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>nested</td><td style="text-align:center">嵌套</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>nested class</td><td style="text-align:center">嵌套类</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>network</td><td style="text-align:center">网络</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>newline</td><td style="text-align:center">换行</td><td style="text-align:center">新行</td><td style="text-align:center"></td></tr><tr><td>non-deterministic choice</td><td style="text-align:center">非确定性选择</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>non-strict</td><td style="text-align:center">非严格</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>non-strict evaluation</td><td style="text-align:center">非严格求值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>nondeclarative</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>nondestructive version</td><td style="text-align:center">非破坏性的版本</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>number crunching</td><td style="text-align:center">数字密集运算</td><td style="text-align:center"></td></tr></tbody></table><h3 id="O"><a href="#O" class="headerlink" title="O"></a>O</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>object</td><td style="text-align:center">对象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>object code</td><td style="text-align:center">目标代码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>object-oriented</td><td style="text-align:center">面向对象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>object-oriented programming</td><td style="text-align:center">面向对象编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Occam’s razor</td><td style="text-align:center">奥卡姆剃刀原则</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>on the fly</td><td style="text-align:center">运行中</td><td style="text-align:center">执行时</td><td style="text-align:center"></td></tr><tr><td>online</td><td style="text-align:center">在线</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>open source</td><td style="text-align:center">开放源码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>operand</td><td style="text-align:center">操作对象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>operating system, OS</td><td style="text-align:center">操作系统</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>operation</td><td style="text-align:center">操作</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>operator</td><td style="text-align:center">操作符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>optimization</td><td style="text-align:center">优化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>optimization of tail calls</td><td style="text-align:center">尾调用优化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>option</td><td style="text-align:center">选项</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>optional</td><td style="text-align:center">可选的</td><td style="text-align:center">选择性的</td><td style="text-align:center"></td></tr><tr><td>optional argument</td><td style="text-align:center">选择性参数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>ordinary</td><td style="text-align:center">常规的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>orthogonality</td><td style="text-align:center">正交性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>overflow</td><td style="text-align:center">溢出</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>overhead</td><td style="text-align:center">额外开销</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>overload</td><td style="text-align:center">重载</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>override</td><td style="text-align:center">覆写</td><td style="text-align:center"></td></tr></tbody></table><h3 id="P"><a href="#P" class="headerlink" title="P"></a>P</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>package</td><td style="text-align:center">包</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pair</td><td style="text-align:center">点对</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>palindrome</td><td style="text-align:center">回文</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>paradigm</td><td style="text-align:center">范式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>parallel</td><td style="text-align:center">并行</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>parallel computer</td><td style="text-align:center">并行计算机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>param</td><td style="text-align:center">参数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>parameter</td><td style="text-align:center">参数</td><td style="text-align:center">形式参数/形参</td><td style="text-align:center"></td></tr><tr><td>paren-matching</td><td style="text-align:center">括号匹配</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>parent class</td><td style="text-align:center">父类</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>parentheses</td><td style="text-align:center">括号</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Parkinson’s law</td><td style="text-align:center">帕金森法则</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>parse</td><td style="text-align:center">解析</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>parse tree</td><td style="text-align:center">解析树</td><td style="text-align:center">分析树</td><td style="text-align:center"></td></tr><tr><td>parser</td><td style="text-align:center">解析器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>partial application</td><td style="text-align:center">部分应用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>partial applied</td><td style="text-align:center">分步代入的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>partial function application</td><td style="text-align:center">部分函数应用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>particular ordering</td><td style="text-align:center">部分有序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pass by adress</td><td style="text-align:center">按址传递</td><td style="text-align:center">传址</td><td style="text-align:center"></td></tr><tr><td>pass by reference</td><td style="text-align:center">按引用传递</td><td style="text-align:center">传引用</td><td style="text-align:center"></td></tr><tr><td>pass by value</td><td style="text-align:center">按值传递</td><td style="text-align:center">传值</td><td style="text-align:center"></td></tr><tr><td>path</td><td style="text-align:center">路径</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pattern</td><td style="text-align:center">模式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pattern match</td><td style="text-align:center">模式匹配</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>perform</td><td style="text-align:center">执行</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>performance</td><td style="text-align:center">性能</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>performance-critical</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>persistence</td><td style="text-align:center">持久性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>phrenology</td><td style="text-align:center">相面</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>physical</td><td style="text-align:center">物理的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pipe</td><td style="text-align:center">管道</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pixel</td><td style="text-align:center">像素</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>placeholder</td><td style="text-align:center">占位符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>planning</td><td style="text-align:center">计画</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>platform</td><td style="text-align:center">平台</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pointer</td><td style="text-align:center">指针</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pointer arithmetic</td><td style="text-align:center">指针运算</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>poll</td><td style="text-align:center">轮询</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>polymorphic</td><td style="text-align:center">多态</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>polymorphism</td><td style="text-align:center">多态</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>polynomial</td><td style="text-align:center">多项式的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pool</td><td style="text-align:center">池</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>port</td><td style="text-align:center">端口</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>portable</td><td style="text-align:center">可移植性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>portal</td><td style="text-align:center">门户</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>positional parameters</td><td style="text-align:center">位置参数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>postfix</td><td style="text-align:center">后序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>precedence</td><td style="text-align:center">优先级</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>precedence list</td><td style="text-align:center">优先级列表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>preceding</td><td style="text-align:center">前述的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>predicate</td><td style="text-align:center">判断式</td><td style="text-align:center">谓词</td><td style="text-align:center"></td></tr><tr><td>preemptive multitasking</td><td style="text-align:center">抢占式多任务</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>premature design</td><td style="text-align:center">过早设计</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>preprocessor</td><td style="text-align:center">预处理器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>prescribe</td><td style="text-align:center">规定</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>prime</td><td style="text-align:center">素数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>primitive</td><td style="text-align:center">原语</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>primitive recursive</td><td style="text-align:center">主递归</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>primitive type</td><td style="text-align:center">原生类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>principal type</td><td style="text-align:center">主要类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>print</td><td style="text-align:center">打印</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>printed representation</td><td style="text-align:center">打印表示法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>printer</td><td style="text-align:center">打印机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>priority</td><td style="text-align:center">优先级</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>procedure</td><td style="text-align:center">过程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>procedurual</td><td style="text-align:center">过程化的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>procedurual knowledge</td><td style="text-align:center">过程式知识</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>process</td><td style="text-align:center">进程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>process priority</td><td style="text-align:center">进程优先级</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>productivity</td><td style="text-align:center">生产力</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>profile</td><td style="text-align:center">评测</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>profiler</td><td style="text-align:center">评测器</td><td style="text-align:center">性能分析器</td><td style="text-align:center"></td></tr><tr><td>programmer</td><td style="text-align:center">程序员</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>programming</td><td style="text-align:center">编程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>programming language</td><td style="text-align:center">编程语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>project</td><td style="text-align:center">项目</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>prompt</td><td style="text-align:center">提示符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>proper list</td><td style="text-align:center">正规列表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>property</td><td style="text-align:center">属性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>property list</td><td style="text-align:center">属性列表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>protocol</td><td style="text-align:center">协议</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>prototype</td><td style="text-align:center">原型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pseudo code</td><td style="text-align:center">伪码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pseudo instruction</td><td style="text-align:center">伪指令</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>purely functional language</td><td style="text-align:center">纯函数式语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>pushdown stack</td><td style="text-align:center">下推栈</td><td style="text-align:center"></td></tr></tbody></table><h3 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>qualified</td><td style="text-align:center">修饰的</td><td style="text-align:center">带前缀的</td><td style="text-align:center"></td></tr><tr><td>qualifier</td><td style="text-align:center">修饰符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>quality</td><td style="text-align:center">质量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>quality assurance, QA</td><td style="text-align:center">质量保证</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>query</td><td style="text-align:center">查询</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>query language</td><td style="text-align:center">查询语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>queue</td><td style="text-align:center">队列</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>quote</td><td style="text-align:center">引用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>quoted form</td><td style="text-align:center">引用形式</td><td style="text-align:center"></td></tr></tbody></table><h3 id="R"><a href="#R" class="headerlink" title="R"></a>R</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>race condition</td><td style="text-align:center">条件竞争</td><td style="text-align:center">竞态条件</td><td style="text-align:center"></td></tr><tr><td>radian</td><td style="text-align:center">弧度</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Redundant Array of Independent Disks, RAID</td><td style="text-align:center">冗余独立磁盘阵列</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>raise</td><td style="text-align:center">引起</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>random number</td><td style="text-align:center">随机数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>range</td><td style="text-align:center">范围</td><td style="text-align:center">区间</td><td style="text-align:center"></td></tr><tr><td>rank</td><td style="text-align:center">（矩阵）秩</td><td style="text-align:center">排名</td><td style="text-align:center"></td></tr><tr><td>rapid prototyping</td><td style="text-align:center">快速原型开发</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>rational database</td><td style="text-align:center">关系数据库</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>raw</td><td style="text-align:center">未经处理的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>read</td><td style="text-align:center">读取</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>read-evaluate-print loop, REPL</td><td style="text-align:center">读取-求值-打印循环</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>read-macro</td><td style="text-align:center">读取宏</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>record</td><td style="text-align:center">记录</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>recursion</td><td style="text-align:center">递归</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>recursive</td><td style="text-align:center">递归的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>recursive case</td><td style="text-align:center">递归情形</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>refactor</td><td style="text-align:center">重构</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>refer</td><td style="text-align:center">参考</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>reference</td><td style="text-align:center">引用</td><td style="text-align:center">参考</td><td style="text-align:center"></td></tr><tr><td>referential transparency</td><td style="text-align:center">引用透明</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>refine</td><td style="text-align:center">精化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>reflection</td><td style="text-align:center">反射</td><td style="text-align:center">映像</td><td style="text-align:center"></td></tr><tr><td>register</td><td style="text-align:center">寄存器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>registry creep</td><td style="text-align:center">注册表蠕变</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>regular expression</td><td style="text-align:center">正则表达式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>represent</td><td style="text-align:center">表现</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>request</td><td style="text-align:center">请求</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>resolution</td><td style="text-align:center">解析度</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>resolve</td><td style="text-align:center">解析</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>rest parameter</td><td style="text-align:center">剩余参数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>return</td><td style="text-align:center">返回</td><td style="text-align:center">回车</td><td style="text-align:center"></td></tr><tr><td>return value</td><td style="text-align:center">返回值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>reuse of software</td><td style="text-align:center">代码重用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>right associative</td><td style="text-align:center">右结合</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Reduced Instruction Set Computer, RISC</td><td style="text-align:center">精简指令系统计算机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>robust</td><td style="text-align:center">健壮</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>robustness</td><td style="text-align:center">健壮性</td><td style="text-align:center">鲁棒性</td><td style="text-align:center"></td></tr><tr><td>routine</td><td style="text-align:center">例程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>routing</td><td style="text-align:center">路由</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>row-major order</td><td style="text-align:center">列主序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>remote procedure call, RPC</td><td style="text-align:center">远程过程调用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>run-length encoding</td><td style="text-align:center">游程编码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>run-time typing</td><td style="text-align:center">运行期类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>runtime</td><td style="text-align:center">运行期</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>rvalue</td><td style="text-align:center">右值</td><td style="text-align:center"></td></tr></tbody></table><h3 id="S"><a href="#S" class="headerlink" title="S"></a>S</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>S-expression</td><td style="text-align:center">S-表达式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>save</td><td style="text-align:center">储存</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Secure Sockets Layer, SSL</td><td style="text-align:center">安全套接字层</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>scaffold</td><td style="text-align:center">脚手架</td><td style="text-align:center">鹰架</td><td style="text-align:center"></td></tr><tr><td>scalar type</td><td style="text-align:center">标量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>scan</td><td style="text-align:center">扫描</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>schedule</td><td style="text-align:center">调度</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>scheduler</td><td style="text-align:center">调度程序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>scope</td><td style="text-align:center">作用域</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>SCREAMING_SNAKE_CASE</td><td style="text-align:center">尖叫式蛇底大写</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>screen</td><td style="text-align:center">屏幕</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>scripting language</td><td style="text-align:center">脚本语言</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>search</td><td style="text-align:center">查找</td><td style="text-align:center">搜寻</td><td style="text-align:center"></td></tr><tr><td>segment of instructions</td><td style="text-align:center">指令片段</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>semantics</td><td style="text-align:center">语义</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>semaphore</td><td style="text-align:center">信号量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>semicolon</td><td style="text-align:center">分号</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>sequence</td><td style="text-align:center">序列</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>sequential</td><td style="text-align:center">循序的</td><td style="text-align:center">顺序的</td><td style="text-align:center"></td></tr><tr><td>sequential collection literals</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>serial</td><td style="text-align:center">串行</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>serialization</td><td style="text-align:center">序列化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>series</td><td style="text-align:center">串行</td><td style="text-align:center">级数</td><td style="text-align:center"></td></tr><tr><td>server</td><td style="text-align:center">服务器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>shadowing</td><td style="text-align:center">隐蔽了</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>sharp</td><td style="text-align:center">犀利的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>sharp-quote</td><td style="text-align:center">升引号</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>shortest path</td><td style="text-align:center">最短路径</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>SICP</td><td style="text-align:center">《计算机程序的构造与解释》</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>side effect</td><td style="text-align:center">副作用</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>signature</td><td style="text-align:center">签名</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>simple vector</td><td style="text-align:center">简单向量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>simulate</td><td style="text-align:center">模拟</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Single Point of Truth, SPOT</td><td style="text-align:center">真理的单点性</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>single-segment</td><td style="text-align:center">单段的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>sketch</td><td style="text-align:center">草图</td><td style="text-align:center">初步框架</td><td style="text-align:center"></td></tr><tr><td>slash</td><td style="text-align:center">斜线</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>slot</td><td style="text-align:center">槽</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>smart pointer</td><td style="text-align:center">智能指针</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>snake_case</td><td style="text-align:center">蛇底式小写</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>snapshot</td><td style="text-align:center">屏幕截图</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>socket</td><td style="text-align:center">套接字</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>software</td><td style="text-align:center">软件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>solution</td><td style="text-align:center">方案</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>source code</td><td style="text-align:center">源代码</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>space leak</td><td style="text-align:center">内存泄漏</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>spaghetti</td><td style="text-align:center">面条式代码</td><td style="text-align:center">意面式代码</td><td style="text-align:center"></td></tr><tr><td>spaghetti stack</td><td style="text-align:center">意面式栈</td><td style="text-align:center">面条式栈</td><td style="text-align:center"></td></tr><tr><td>spam</td><td style="text-align:center">垃圾邮件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>spec</td><td style="text-align:center">规格</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>special form</td><td style="text-align:center">特殊形式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>special variable</td><td style="text-align:center">特殊变量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>specialization</td><td style="text-align:center">特化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>specialize</td><td style="text-align:center">特化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>specialized array</td><td style="text-align:center">特化数组</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>specification</td><td style="text-align:center">规格说明</td><td style="text-align:center">规范</td><td style="text-align:center"></td></tr><tr><td>splitter</td><td style="text-align:center">切分窗口</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>sprite</td><td style="text-align:center">精灵图</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>square</td><td style="text-align:center">平方</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>square root</td><td style="text-align:center">平方根</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>squash</td><td style="text-align:center">碰撞</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>stack</td><td style="text-align:center">栈</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>stack frame</td><td style="text-align:center">栈帧</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>stakeholder</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>standard library</td><td style="text-align:center">标准函式库</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>state machine</td><td style="text-align:center">状态机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>statement</td><td style="text-align:center">陈述</td><td style="text-align:center">语句</td><td style="text-align:center"></td></tr><tr><td>static type</td><td style="text-align:center">静态类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>static type system</td><td style="text-align:center">静态类型系统</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>status</td><td style="text-align:center">状态</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>store</td><td style="text-align:center">保存</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>stream</td><td style="text-align:center">流</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>strict</td><td style="text-align:center">严格</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>strict evaluation</td><td style="text-align:center">严格求值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>string</td><td style="text-align:center">字串</td><td style="text-align:center">字符串</td><td style="text-align:center"></td></tr><tr><td>string template</td><td style="text-align:center">字串模版</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>strong type</td><td style="text-align:center">强类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>structural recursion</td><td style="text-align:center">结构递归</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>structured values</td><td style="text-align:center">结构型值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>subroutine</td><td style="text-align:center">子程序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>subset</td><td style="text-align:center">子集</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>substitution</td><td style="text-align:center">代换</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>substitution model</td><td style="text-align:center">代换模型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>subtype</td><td style="text-align:center">子类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>superclass</td><td style="text-align:center">基类</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>superfluous</td><td style="text-align:center">多余的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>supertype</td><td style="text-align:center">超集</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>support</td><td style="text-align:center">支持</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>suspend</td><td style="text-align:center">挂起</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>swapping values</td><td style="text-align:center">交换变量的值</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>symbol</td><td style="text-align:center">符号</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>symbolic computation</td><td style="text-align:center">符号计算</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>syntax</td><td style="text-align:center">语法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>system administrator</td><td style="text-align:center">系统管理员</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>system administrator disease</td><td style="text-align:center">系统管理员综合症</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>System Network Architecture, SNA</td><td style="text-align:center">系统网络体系</td><td style="text-align:center"></td></tr></tbody></table><h3 id="T"><a href="#T" class="headerlink" title="T"></a>T</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>(database)table</td><td style="text-align:center">数据表</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>table</td><td style="text-align:center">表格</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>tag</td><td style="text-align:center">标签</td><td style="text-align:center">标记</td><td style="text-align:center"></td></tr><tr><td>tail-recursion</td><td style="text-align:center">尾递归</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>tail-recursive</td><td style="text-align:center">尾递归的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>TAOCP</td><td style="text-align:center">《计算机程序设计艺术》</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>target</td><td style="text-align:center">目标</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>taxable operators</td><td style="text-align:center">需节制使用的操作符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>taxonomy</td><td style="text-align:center">分类法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>template</td><td style="text-align:center">模版</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>temporary object</td><td style="text-align:center">临时对象</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>testing</td><td style="text-align:center">测试</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>text</td><td style="text-align:center">文本</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>text file</td><td style="text-align:center">文本文件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>thread</td><td style="text-align:center">线程</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>thread safe</td><td style="text-align:center">线程安全</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>three-valued logic</td><td style="text-align:center">三值逻辑</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>throw</td><td style="text-align:center">抛出</td><td style="text-align:center">丢掷</td><td style="text-align:center">引发</td></tr><tr><td>throwaway program</td><td style="text-align:center">一次性程序</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>timestamp</td><td style="text-align:center">时间戳</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>token</td><td style="text-align:center">词法记号</td><td style="text-align:center">语义单位</td><td style="text-align:center">语元</td></tr><tr><td>top-down design</td><td style="text-align:center">自顶向下的设计</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>top-level</td><td style="text-align:center">顶层</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>trace</td><td style="text-align:center">追踪</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>trailing space</td><td style="text-align:center">行尾空白</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>transaction</td><td style="text-align:center">事务</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>transition network</td><td style="text-align:center">转移网络</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>transparent</td><td style="text-align:center">透明的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>traverse</td><td style="text-align:center">遍历</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>tree</td><td style="text-align:center">树</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>tree recursion</td><td style="text-align:center">树形递归</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>trigger</td><td style="text-align:center">触发器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>tuple</td><td style="text-align:center">元组</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Turing machine</td><td style="text-align:center">图灵机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Turing complete</td><td style="text-align:center">图灵完备</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>typable</td><td style="text-align:center">类型合法</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type</td><td style="text-align:center">类型</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type constructor</td><td style="text-align:center">类构造器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type declaration</td><td style="text-align:center">类型声明</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type hierarchy</td><td style="text-align:center">类型层级</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type inference</td><td style="text-align:center">类型推导</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type name</td><td style="text-align:center">类型名</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type safe</td><td style="text-align:center">类型安全</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type signature</td><td style="text-align:center">类型签名</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type synonym</td><td style="text-align:center">类型别名</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>type variable</td><td style="text-align:center">类型变量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>typing</td><td style="text-align:center">类型指派</td><td style="text-align:center">输入</td></tr></tbody></table><h3 id="U"><a href="#U" class="headerlink" title="U"></a>U</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>user interface, UI</td><td style="text-align:center">用户界面</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>unary</td><td style="text-align:center">一元的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>underflow</td><td style="text-align:center">下溢</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>unification</td><td style="text-align:center">合一</td><td style="text-align:center">统一</td><td style="text-align:center"></td></tr><tr><td>union</td><td style="text-align:center">并集</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>universally quantify</td><td style="text-align:center">全局量化</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>unqualfied</td><td style="text-align:center">未修饰的</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>unwinding</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>uptime</td><td style="text-align:center">运行时间</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>Uniform Resource Locator, URL</td><td style="text-align:center">统一资源定位符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>user</td><td style="text-align:center">用户</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>utilities</td><td style="text-align:center">实用函数</td><td style="text-align:center"></td></tr></tbody></table><h3 id="V"><a href="#V" class="headerlink" title="V"></a>V</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>validate</td><td style="text-align:center">验证</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>validator</td><td style="text-align:center">验证器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>value constructor</td><td style="text-align:center">值构造器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>vaporware</td><td style="text-align:center">朦胧件</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>variable</td><td style="text-align:center">变量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>variable capture</td><td style="text-align:center">变量捕捉</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>variadic input</td><td style="text-align:center">可变输入</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>variant</td><td style="text-align:center">变种</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>venture capitalist, VC</td><td style="text-align:center">风险投资商</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>vector</td><td style="text-align:center">向量</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>viable function</td><td style="text-align:center">可行函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>video</td><td style="text-align:center">视频</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>view</td><td style="text-align:center">视图</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>virtual function</td><td style="text-align:center">虚函数</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>virtual machine</td><td style="text-align:center">虚拟机</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>virtual memory</td><td style="text-align:center">虚内存</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>volatile</td><td style="text-align:center">挥发</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>vowel</td><td style="text-align:center">元音</td><td style="text-align:center"></td></tr></tbody></table><h3 id="W"><a href="#W" class="headerlink" title="W"></a>W</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>warning message</td><td style="text-align:center">警告信息</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>web server</td><td style="text-align:center">网络服务器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>weight</td><td style="text-align:center">权值</td><td style="text-align:center">权重</td><td style="text-align:center"></td></tr><tr><td>well type</td><td style="text-align:center">类型正确</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>wildcard</td><td style="text-align:center">通配符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>window</td><td style="text-align:center">窗口</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>word</td><td style="text-align:center">单词</td><td style="text-align:center">字</td><td style="text-align:center"></td></tr><tr><td>wrapper</td><td style="text-align:center">包装器</td><td style="text-align:center">包装</td><td style="text-align:center"></td></tr><tr><td>What You See Is What You Get, WYSIWYG</td><td style="text-align:center">所见即所得</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>What You See Is What You Want, WYSIWYW</td><td style="text-align:center">所见即所想</td><td style="text-align:center"></td></tr></tbody></table><h3 id="X"><a href="#X" class="headerlink" title="X"></a>X</h3><h3 id="Y"><a href="#Y" class="headerlink" title="Y"></a>Y</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>Y combinator</td><td style="text-align:center">Y组合子</td><td style="text-align:center"></td></tr></tbody></table><h3 id="Z"><a href="#Z" class="headerlink" title="Z"></a>Z</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>Z-expression</td><td style="text-align:center">Z-表达式</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td>zero-indexed</td><td style="text-align:center">零索引的</td><td style="text-align:center"></td></tr></tbody></table><h3 id="专业名词"><a href="#专业名词" class="headerlink" title="专业名词"></a>专业名词</h3><table><thead><tr><th>英文</th><th style="text-align:center">译法 1</th><th style="text-align:center">译法 2</th><th style="text-align:center">译法 3</th></tr></thead><tbody><tr><td>The Paradox of Choice</td><td style="text-align:center">选择谬论</td><td style="text-align:center"></td></tr></tbody></table><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://github.com/JuanitoFatas/Computer-Science-Glossary" target="_blank" rel="noopener">JuanitoFatas/Computer-Science-Glossary</a>        </p>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> english </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOS 6.7 开启 DHCP 服务</title>
      <link href="/180510/"/>
      <url>/180510/</url>
      
        <content type="html"><![CDATA[<p>###IP地址</p><ul><li>192.168.1.11</li></ul><p>###网关</p><ul><li>192.168.1.1</li></ul><p>###在CentOS 6.7下搭建DHCP服务</p><ul><li>[~]# yum install dhcpd      #安装dhcp<br>0X01 配置服务器网络服务</li></ul><p>首先我们要将本地的网络配置成静态地址，并重启网络服务</p><ul><li>[~]# vi /etc/sysconfig/network-scripts/icf-eth0   #将本地的网络配置成静态地址，并重启网络服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=static <span class="comment">#之前很有可能是dhcp，现在我们修改它为静态</span></span><br><span class="line">ONBOOT=yes       <span class="comment">#以前可能是no，改为yes、就是打开网络服务的时候启动这个网卡</span></span><br><span class="line">IPADDR=192.168.1.11 <span class="comment">#配置文件中可能没有这个，没有的话就自己添加这行</span></span><br></pre></td></tr></table></figure><ul><li>[~]# service network restart</li><li>[~]# vi /etc/dhcp/dhcpd.conf</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置DHCP于DNS服务器的动态信息更新模式。初学时完全可以不理这个选项，但是全局设置中一定要有这个选项，否则DHCP服务不能成功启动。</span></span><br><span class="line">ddns-update-style interim;</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面开始分配子网，网段是192.168.1.11 子网掩码是 255.255.255.0</span></span><br><span class="line"><span class="comment">#不能理解网段和子网掩码的可以去网上查一下。简单的说网段规定了分配IP的段（分配哪一段IP给客户机），子网掩码规定了网段的大小 subnet</span></span><br><span class="line">192.168.1.11 netmask 255.255.255.0 &#123;     </span><br><span class="line">    range 192.168.1.100 192.168.1.199;</span><br><span class="line"><span class="comment">#同一网段，分配给客户机的IP     </span></span><br><span class="line">    option routers 192.168.1.1; <span class="comment">#设置网关    </span></span><br><span class="line">    default-lease-time</span><br><span class="line">    600; <span class="comment">#默认租约时间     </span></span><br><span class="line">    max-lease-time 7200; <span class="comment">#最大租约时间 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###给特定MAC设置</p><ul><li>[~]# vi /etc/dhcp/dhcpd.conf  #添加如下</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host Client &#123; <span class="comment">#名字随便起</span></span><br><span class="line">    hardware ethernet 08:00:27:5e:04:27; <span class="comment">#MAC地址</span></span><br><span class="line">    fixed-address 192.168.1.123;       <span class="comment">#分配给它192.168.1.123的IP</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[~]# service dhcpd restart</li></ul><h3 id="Linux-下测试DHCP"><a href="#Linux-下测试DHCP" class="headerlink" title="Linux 下测试DHCP"></a>Linux 下测试DHCP</h3><ul><li><p>[~]# vi /etc/sysconfig/network-scripts/icf-eth0 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">BOOTPROTO=dhcp  <span class="comment">#dhcp</span></span><br><span class="line">ONBOOT=yes</span><br><span class="line">HWADDR=08:00:27:5e:04:27 <span class="comment">#MAC</span></span><br></pre></td></tr></table></figure></li><li><p>[~]# service network restart</p></li></ul><hr><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="http://blog.csdn.net/mouse_ts/article/details/51382971" target="_blank" rel="noopener">CentOS 7.x 下配置 DHCP 服务器 基础篇</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOS 6.7 安装 redis</title>
      <link href="/180103/"/>
      <url>/180103/</url>
      
        <content type="html"><![CDATA[<p>###测试点</p><figure class="highlight python"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server1:</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span>:<span class="number">7000</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span>:<span class="number">7001</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.11</span>:<span class="number">7002</span></span><br><span class="line">server2：</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.18</span>:<span class="number">7003</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.18</span>:<span class="number">7004</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.18</span>:<span class="number">7005</span></span><br></pre></td></tr></table></figure><p>###安装需要的依赖包</p><figure class="highlight python"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install gcc gcc-c++ kernel-devel automake autoconf libtool make wget tcl vim ruby rubygems unzip git -y</span></span><br></pre></td></tr></table></figure><p>###两台机器分别下载redis并安装<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># cd /usr/local/  </span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># wget http://download.redis.io/releases/redis-3.0.6.tar.gz  </span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># tar xzf redis-3.0.6.tar.gz  </span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd redis-3.0.6  </span></span><br><span class="line">[root@localhost redis-3.0.6]<span class="comment"># make</span></span><br></pre></td></tr></table></figure></p><p>###创建集群需要的目录<br>==Server1下==<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/cluster  </span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/cluster  </span><br><span class="line">mkdir 7000  </span><br><span class="line">mkdir 7001  </span><br><span class="line">mkdir 7002  autoc</span><br></pre></td></tr></table></figure></p><p>==Server2下==<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/cluster  </span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/cluster  </span><br><span class="line">mkdir 7003  </span><br><span class="line">mkdir 7004  </span><br><span class="line">mkdir 7005</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修改配置文件redis.conf</span><br><span class="line">cp /usr/<span class="built_in">local</span>/redis-3.0.6/redis.conf  /usr/<span class="built_in">local</span>/cluster</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/cluster</span><br><span class="line">vi redis.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##注意每个实例的端口号不同  </span><br><span class="line">port 7000  </span><br><span class="line">daemonize yes  </span><br><span class="line">cluster-enabled yes  </span><br><span class="line">cluster-config-file nodes.conf  </span><br><span class="line">cluster-node-timeout 5000  </span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><p>==Server1下==<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/cluster/redis.conf /usr/<span class="built_in">local</span>/cluster/7000  </span><br><span class="line">cp /usr/<span class="built_in">local</span>/cluster/redis.conf /usr/<span class="built_in">local</span>/cluster/7001  </span><br><span class="line">cp /usr/<span class="built_in">local</span>/cluster/redis.conf /usr/<span class="built_in">local</span>/cluster/7002</span><br></pre></td></tr></table></figure></p><p>==Server2下==<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/cluster/redis.conf /usr/<span class="built_in">local</span>/cluster/7003  </span><br><span class="line">cp /usr/<span class="built_in">local</span>/cluster/redis.conf /usr/<span class="built_in">local</span>/cluster/7004  </span><br><span class="line">cp /usr/<span class="built_in">local</span>/cluster/redis.conf /usr/<span class="built_in">local</span>/cluster/7005</span><br></pre></td></tr></table></figure></p><p>###分别启动这6个redis实例，并查看是否成功：ps -ef|grep redis<br>==Server1下==<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost cluster]<span class="comment"># cd /usr/local/cluster/7000  </span></span><br><span class="line">[root@localhost 7000]<span class="comment"># /usr/local/redis-3.0.6/src/redis-server redis.conf </span></span><br><span class="line">[root@localhost 7000]<span class="comment"># cd /usr/local/cluster/7001  </span></span><br><span class="line">[root@localhost 7001]<span class="comment"># /usr/local/redis-3.0.6/src/redis-server redis.conf </span></span><br><span class="line">[root@localhost 7001]<span class="comment"># cd /usr/local/cluster/7002  </span></span><br><span class="line">[root@localhost 7002]<span class="comment"># /usr/local/redis-3.0.6/src/redis-server redis.conf </span></span><br><span class="line">[root@localhost 7002]<span class="comment"># ps -ef|grep redis  </span></span><br><span class="line">root      2741     1  0 09:39 ?        00:00:00 redis-server *:7000 [cluster]  </span><br><span class="line">root      2747     1  0 09:40 ?        00:00:00 redis-server *:7001 [cluster]  </span><br><span class="line">root      2751     1  0 09:40 ?        00:00:00 redis-server *:7002 [cluster]  </span><br><span class="line">root      2755  2687  0 09:40 pts/0    00:00:00 grep redis</span><br></pre></td></tr></table></figure></p><p>==Server2下==<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost cluster]<span class="comment"># cd /usr/local/cluster/7003  </span></span><br><span class="line">[root@localhost 7003]<span class="comment"># /usr/local/redis-3.0.6/src/redis-server redis.conf </span></span><br><span class="line">[root@localhost 7003]<span class="comment"># cd /usr/local/cluster/7004  </span></span><br><span class="line">[root@localhost 7004]<span class="comment"># /usr/local/redis-3.0.6/src/redis-server redis.conf </span></span><br><span class="line">[root@localhost 7004]<span class="comment"># cd /usr/local/cluster/7005  </span></span><br><span class="line">[root@localhost 7005]<span class="comment"># /usr/local/redis-3.0.6/src/redis-server redis.conf </span></span><br><span class="line">[root@localhost 7005]<span class="comment"># ps -ef|grep redis  </span></span><br><span class="line">root      1619     1  0 09:40 ?        00:00:00 redis-server *:7003 [cluster]  </span><br><span class="line">root      1623     1  0 09:40 ?        00:00:00 redis-server *:7004 [cluster]  </span><br><span class="line">root      1627     1  0 09:41 ?        00:00:00 redis-server *:7005 [cluster]  </span><br><span class="line">root      1631  1563  0 09:41 pts/0    00:00:00 grep redis</span><br></pre></td></tr></table></figure></p><p>###执行redis的创建集群命令创建集群（注意ip地址和端口号）<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># ./redis-trib.rb  create --replicas 1 192.168.1.11:7000 192.168.1.11:7001 192.168.1.11:7002 192.168.1.18:7003 192.168.1.18:7004 192.168.1.18:7005</span></span><br></pre></td></tr></table></figure></p><p>==错误内容：==<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require&apos;: no such file to load -- redis (LoadError)</span><br><span class="line">        from /usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require&apos;</span><br><span class="line">        from ./redis-trib.rb:25</span><br></pre></td></tr></table></figure></p><p>==解决：==<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gem update --system</span><br><span class="line">gem install redis -v 3.3.5</span><br></pre></td></tr></table></figure></p><p>###再次执行第6步的命令，正常执行，提示是否允许修改配置文件，输入yes，然后整个集群配置完成！<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># ./redis-trib.rb  create --replicas 1 192.168.1.11:7000 192.168.1.11:7001 192.168.1.11:7002 192.168.1.18:7003 192.168.1.18:7004 192.168.1.18:7005 </span></span><br><span class="line">```</span><br></pre></td></tr></table></figure></p><blockquote><blockquote><blockquote><p>Creating cluster<br>Performing hash slots allocation on 6 nodes…<br>Using 3 masters:<br>192.168.1.199:7003<br>192.168.1.198:7000<br>192.168.1.199:7004<br>Adding replica 192.168.1.198:7001 to 192.168.1.199:7003<br>Adding replica 192.168.1.199:7005 to 192.168.1.198:7000<br>Adding replica 192.168.1.198:7002 to 192.168.1.199:7004<br>M: 2f70e9f2b4a06a846e46d7034a54e0fe6971beea 192.168.1.198:7000<br>   slots:5461-10922 (5462 slots) master<br>S: e60f49920cf8620927b200b0001892d08067d065 192.168.1.198:7001<br>   replicates 02f1958bd5032caca2fd47a56362c8d562d7e621<br>S: 26101db06b5c2d4431ca8308cf43d51f6939b4fc 192.168.1.198:7002<br>   replicates 6c4f18b9e8729c3ab5d43b00b0bc1e2ee976f299<br>M: 02f1958bd5032caca2fd47a56362c8d562d7e621 192.168.1.199:7003<br>   slots:0-5460 (5461 slots) master<br>M: 6c4f18b9e8729c3ab5d43b00b0bc1e2ee976f299 192.168.1.199:7004<br>   slots:10923-16383 (5461 slots) master<br>S: ebb27bd0a48b67a4f4e0584be27c1c909944e935 192.168.1.199:7005<br>   replicates 2f70e9f2b4a06a846e46d7034a54e0fe6971beea<br>Can I set the above configuration? (type ‘yes’ to accept): yes<br>Nodes configuration updated<br>Assign a different config epoch to each node<br>Sending CLUSTER MEET messages to join the cluster<br>Waiting for the cluster to join…<br>Performing Cluster Check (using node 192.168.1.198:7000)<br>M: 2f70e9f2b4a06a846e46d7034a54e0fe6971beea 192.168.1.198:7000<br>   slots:5461-10922 (5462 slots) master<br>M: e60f49920cf8620927b200b0001892d08067d065 192.168.1.198:7001<br>   slots: (0 slots) master<br>   replicates 02f1958bd5032caca2fd47a56362c8d562d7e621<br>M: 26101db06b5c2d4431ca8308cf43d51f6939b4fc 192.168.1.198:7002<br>   slots: (0 slots) master<br>   replicates 6c4f18b9e8729c3ab5d43b00b0bc1e2ee976f299<br>M: 02f1958bd5032caca2fd47a56362c8d562d7e621 192.168.1.199:7003<br>   slots:0-5460 (5461 slots) master<br>M: 6c4f18b9e8729c3ab5d43b00b0bc1e2ee976f299 192.168.1.199:7004<br>   slots:10923-16383 (5461 slots) master<br>M: ebb27bd0a48b67a4f4e0584be27c1c909944e935 192.168.1.199:7005<br>   slots: (0 slots) master<br>   replicates 2f70e9f2b4a06a846e46d7034a54e0fe6971beea<br>[OK] All nodes agree about slots configuration.<br>Check for open slots…<br>Check slots coverage…<br>[OK] All 16384 slots covered.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###测试集群</span><br><span class="line">#####server1上登录redis客户端并执行</span><br><span class="line">```bash &#123;.line-numbers&#125;</span><br><span class="line">[root@localhost src]# ./redis-cli -c -p 7000   #可执行文件</span><br></pre></td></tr></table></figure></p></blockquote></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:7000&gt; get key  </span><br><span class="line">-&gt; Redirected to slot [12539] located at 192.168.1.199:7004  </span><br><span class="line">&quot;val&quot;  </span><br><span class="line">192.168.1.199:7004&gt; set name test  </span><br><span class="line">-&gt; Redirected to slot [5798] located at 192.168.1.198:7000  </span><br><span class="line">OK  </span><br><span class="line">192.168.1.198:7000&gt; set adress shanghai  </span><br><span class="line">-&gt; Redirected to slot [1562] located at 192.168.1.199:7003  </span><br><span class="line">OK  </span><br><span class="line">192.168.1.199:7003&gt;</span><br></pre></td></tr></table></figure><p>#####server2上登录redis客户端并执行<br><figure class="highlight bash"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]<span class="comment"># redis-cli -c -p 7003</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:7003&gt; set key val  </span><br><span class="line">-&gt; Redirected to slot [12539] located at 192.168.1.199:7004  </span><br><span class="line">OK  </span><br><span class="line">192.168.1.199:7004&gt; get keyv  </span><br><span class="line">&quot;val&quot;  </span><br><span class="line">192.168.1.199:7004&gt; set key2 val2  </span><br><span class="line">-&gt; Redirected to slot [4998] located at 192.168.1.199:7003  </span><br><span class="line">OK  </span><br><span class="line">192.168.1.199:7003&gt; get key2  </span><br><span class="line">&quot;val2&quot;  </span><br><span class="line">192.168.1.199:7003&gt;</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="http://blog.csdn.net/nuli888/article/details/52134117/" target="_blank" rel="noopener">Centos完美搭建redis3.0集群并附测试</a> </li><li><a href="https://www.jianshu.com/p/728184da1699" target="_blank" rel="noopener">Ruby Gem命令详解</a>  </li><li><a href="https://redis.io/download" target="_blank" rel="noopener">Redis官网</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOS 6.7 安装 bind</title>
      <link href="/180102/"/>
      <url>/180102/</url>
      
        <content type="html"><![CDATA[<p>###本机IP</p><ul><li>192.168.1.11 </li></ul><p>###测试机IP      </p><ul><li>192.168.1.12 </li></ul><p>###网关</p><ul><li>192.168.1.1   </li></ul><p>###解析域名</p><ul><li><a href="http://www.hengxia.top" target="_blank" rel="noopener">www.hengxia.top</a></li></ul><p>###CentOS 6.7上yum安装BIND,并启动</p><ul><li>[~]# service iptables stop        #关闭防火墙</li><li>[~]# yum -y install bind          #yum安装bind</li><li>[~]# rpm -ql bind                 #查看安装版本</li><li>[~]# service named restart        #重启bind</li><li>[~]# chkconfig named on           #设置成开机启动</li></ul><p>###在CentOS 6.7配置BIND</p><ul><li>[~]# yum -y install telnet</li><li>[~]# telnet 192.168.1.11 53   #测试本机IP能否访问端口53，端口53是BIND默认端口</li><li>[~]# cp -p /etc/named.conf{,.bak} # 备份named.conf并修改 ，备份文件文件后缀为.bak</li><li>[~]# vi /etc/named.conf       #编辑bind主配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#listen-on port 53 &#123; 127.0.0.1; &#125;; 将此行注释掉</span></span><br></pre></td></tr></table></figure><ul><li>[~]# service named restart    #重启bind服务，主要为了重新读取配置文件</li><li><p>[~]# vi /etc/sysconfig/network-scripts/ifcfg-eth0 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑网卡配置文件，编辑配置好静态IP的，只需修改下面这行，即DNS1</span></span><br><span class="line">DNS1=<span class="string">"127.0.0.1"</span>        <span class="comment"># 因为CentOS6.7自己为DNS服务器，所以设自己为DNS服务器</span></span><br></pre></td></tr></table></figure></li><li><p>[~]# service network restart</p></li><li><p>[~]# cat /etc/resolv.conf  # 查看默认DNS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Generated by NetworkManager</span></span><br><span class="line">search top              <span class="comment"># 搜索top域名，例如com、cn</span></span><br><span class="line">nameserver 127.0.0.1</span><br></pre></td></tr></table></figure></li><li><p>[~]# vi /etc/named.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># allow-query &#123; localhost; &#125; #注释掉该行，即默认同意所有IP访问</span></span><br></pre></td></tr></table></figure></li><li><p>[~]# named-checkconf  # 检查配置文件named.conf,服务-checkconf命令检查服务的配置文件 </p></li><li>[~]# service named restrart  #重启bind，重读配置文件</li></ul><p>###在CentOS 6.7上DNS搭建自己的域，让当前DNS解析<a href="http://www.hengxia.top域" target="_blank" rel="noopener">www.hengxia.top域</a></p><ul><li><p>[~]# vi /etc/named.rfc1912.zones   # 编辑区域解析库文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"hengxia.top"</span> IN &#123;                 <span class="comment"># hengxia.top是域名</span></span><br><span class="line">    <span class="built_in">type</span> master;                <span class="comment"># 表示权威DNS，即第一个</span></span><br><span class="line">    file <span class="string">"hengxia.top.zone"</span>;        <span class="comment"># 域数据库，默认位于/var/named/下面，只需告知文件名 hengxia.top.zone是库文件名</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>[~]# cd /var/named</p></li><li>[~]# ls</li><li>[named]# cp -p named.localhost hengxia.top.zone         </li><li>/# 注意cp -p 保持原有属性， 用cp 要用 chgrp named hengxia.top.zone</li><li>/# 复制配置文件，</li><li><p>[named]# cat hengxia.top.zone  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解析区域数据库格式，存放名字与IP的对应关系</span></span><br><span class="line"><span class="variable">$TTL</span> 1D     <span class="comment"># 统一定义TTL(过期时间、缓存时间）                   </span></span><br><span class="line">@   IN SOA  @ rname.invalid. (                    <span class="comment"># SOA记录   IN internet技术 IN第一条要写，后面可以省略，可继承第一条IN           rname.invalid.  资源的类型          </span></span><br><span class="line">                    0   ; serial         </span><br><span class="line">                    1D  ; refresh</span><br><span class="line">                    1H  ; retry</span><br><span class="line">                    1W  ; expire</span><br><span class="line">                    3H )    ; minimum</span><br><span class="line">    NS  @                                         <span class="comment"># 代表当前配置域，例如配置hengxia.top，就代表hengxia.top</span></span><br><span class="line">    A   127.0.0.1                                 <span class="comment"># A记录 名字 到 IP   对应IPv4地址</span></span><br><span class="line">    AAAA    ::1                                   <span class="comment"># A记录 名字 到 IP   对应IPv6地址</span></span><br></pre></td></tr></table></figure></li><li><p>[named]# vi hengxia.top.zone #配置后文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$TTL</span> 1D</span><br><span class="line">@   IN SOA  dns1.hengxia.top dnsadmin.hengxia.top. (</span><br><span class="line">                    201707262051    ; serial</span><br><span class="line">                    10M ; refresh</span><br><span class="line">                    3M  ; retry</span><br><span class="line">                    1D  ; expire</span><br><span class="line">                    3D )    ; minimum</span><br><span class="line">    NS  dns1</span><br><span class="line">        NS      dns2</span><br><span class="line">dns1    A   192.168.1.11                    <span class="comment"># 本机IP</span></span><br><span class="line">dns2    A       192.168.1.11                <span class="comment"># 测试机IP</span></span><br><span class="line">websrv  A   1.1.1.1</span><br><span class="line">ftpsrv  A       2.2.2.2</span><br></pre></td></tr></table></figure></li><li><p>[named]# named-checkconf  # 检查/etc/下与named有关文件</p></li><li><p>[named]# named-checkzone hengxia.top /var/named/hengxia.top.zone # 检查域数据库文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dns_rdata_fromtext: /var/named/hengxia.top.zone:2: near <span class="string">'201707262051'</span>: out of range                                      <span class="comment"># 序列号超出范围</span></span><br><span class="line">zone hengxia.top/IN: loading from master file /var/named/hengxia.top.zone failed: out of range</span><br><span class="line">zone hengxia.top/IN: not loaded due to errors.</span><br></pre></td></tr></table></figure></li><li><p>[named]# vi hengxia.top.zone </p></li><li><p>[named]# named-checkzone hengxia.top /var/named/hengxia.top.zone</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zone hengxia.top/IN: loaded serial 2017072601</span><br><span class="line">[OK]</span><br></pre></td></tr></table></figure></li><li><p>[named]# service named restart</p></li></ul><p>###在另一台CentOS 6.7上测试DNS</p><ul><li>[~]# yum -y install bind bind-utils   # 测试工具 dig host nslookup 来自 bind-utils包</li><li><p>[~]# dig <a href="http://www.hengxia.top" target="_blank" rel="noopener">www.hengxia.top</a> @192.168.1.11  # 本机IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.62.rc1.el6 &lt;&lt;&gt;&gt; www.hengxia.top @192.168.1.11</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: SERVFAIL, id: 53941</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 0</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;www.hengxia.top.       IN  A</span><br><span class="line"></span><br><span class="line">;; Query time: 7 msec</span><br><span class="line">;; SERVER: 172.16.252.77<span class="comment">#53(192.168.1.11)</span></span><br><span class="line">;; WHEN: Wed Jul 26 19:13:37 2017</span><br><span class="line">;; MSG SIZE  rcvd: 33</span><br></pre></td></tr></table></figure></li><li><p>[~]# dig websrv.hengxia.top @192.168.1.11           # 测试成功，说明CentOS 6.7上的域搭建成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.62.rc1.el6 &lt;&lt;&gt;&gt; websrv.hengxia.top @192.168.1.11    </span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 49446</span><br><span class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 2          <span class="comment"># aa 说明是权威结果</span></span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;websrv.hengxia.top.        IN  A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">websrv.hengxia.top. 86400   IN  A   1.1.1.1</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">hengxia.top.        86400   IN  NS  dns1.hengxia.top.</span><br><span class="line">hengxia.top.        86400   IN  NS  dns2.hengxia.top.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">dns1.hengxia.top.   86400   IN  A   192.168.1.11</span><br><span class="line">dns2.hengxia.top.   86400   IN  A   192.168.1.12   <span class="comment"># 端口85400</span></span><br><span class="line"></span><br><span class="line">;; Query time: 3 msec</span><br><span class="line">;; SERVER: 172.16.252.77<span class="comment">#53(192.168.1.11)</span></span><br><span class="line">;; WHEN: Wed Jul 26 19:17:38 2017</span><br><span class="line">;; MSG SIZE  rcvd: 122</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="http://blog.csdn.net/miouqi/article/details/76422700" target="_blank" rel="noopener">CentOS 7.3使用BIND配置DNS服务器</a></p>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>谷歌高级搜索</title>
      <link href="/171231/"/>
      <url>/171231/</url>
      
        <content type="html"><![CDATA[<p><span id="jump"></span></p><h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><h5 id="技术搜索"><a href="#技术搜索" class="headerlink" title="技术搜索"></a>技术搜索</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">内容  site:segmentfault.com OR site:.github.com OR blog.csdn.net OR site:cnblogs.com OR site:jianshu.com OR site:stackoverflow.com</span><br><span class="line">OR site:.blog.* OR site:infoq.com OR .ibm.com</span><br></pre></td></tr></table></figure><h5 id="排除网页"><a href="#排除网页" class="headerlink" title="排除网页"></a>排除网页</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">百度 -site:baidu.com</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>Google 搜索通常会忽略不属于搜索运算符的标点符号。<br>请勿在符号/字词和搜索字词之间加上空格。例如，site:nytimes.com 可以正常发挥作用，但 site: nytimes.com 则不行。</p><h3 id="常用搜索技巧"><a href="#常用搜索技巧" class="headerlink" title="常用搜索技巧"></a>常用搜索技巧</h3><h5 id="搜索社交媒体"><a href="#搜索社交媒体" class="headerlink" title="搜索社交媒体"></a>搜索社交媒体</h5><p>在用于搜索社交媒体的字词前加上 @。例如：@twitter。</p><h5 id="搜索特定价格"><a href="#搜索特定价格" class="headerlink" title="搜索特定价格"></a>搜索特定价格</h5><p>在数字前加上 $。例如：camera $400。</p><h5 id="搜索-标签"><a href="#搜索-标签" class="headerlink" title="搜索 # 标签"></a>搜索 # 标签</h5><p>在字词前加上 #。例如：#throwbackthursday</p><h5 id="从搜索结果中排除特定字词"><a href="#从搜索结果中排除特定字词" class="headerlink" title="从搜索结果中排除特定字词"></a>从搜索结果中排除特定字词</h5><p>在您要排除的字词前加上 -。例如：jaguar speed -car</p><h5 id="搜索完全匹配的结果"><a href="#搜索完全匹配的结果" class="headerlink" title="搜索完全匹配的结果"></a>搜索完全匹配的结果</h5><p>为字词或短语加上引号。例如：”tallest building”。</p><h5 id="搜索通配符或未知字词"><a href="#搜索通配符或未知字词" class="headerlink" title="搜索通配符或未知字词"></a>搜索通配符或未知字词</h5><p>在字词或短语中您要放置占位符的地方加上 <em>。例如：”largest </em> in the world”。</p><h5 id="在某个数字范围内执行搜索"><a href="#在某个数字范围内执行搜索" class="headerlink" title="在某个数字范围内执行搜索"></a>在某个数字范围内执行搜索</h5><p>在两个数字之间加上 ..。例如：camera $50..$100。</p><h5 id="组合搜索"><a href="#组合搜索" class="headerlink" title="组合搜索"></a>组合搜索</h5><p>在各个搜索查询之间加上“OR”。例如：marathon OR race。</p><h5 id="搜索特定网站"><a href="#搜索特定网站" class="headerlink" title="搜索特定网站"></a>搜索特定网站</h5><p>在相应网站或域名前加上“site:”。例如：site:youtube.com 或 site:.gov。</p><h5 id="搜索相关网站"><a href="#搜索相关网站" class="headerlink" title="搜索相关网站"></a>搜索相关网站</h5><p>在已知网址前加上“related:”。例如：related:time.com。</p><h5 id="获取网站详情"><a href="#获取网站详情" class="headerlink" title="获取网站详情"></a>获取网站详情</h5><p>在相应网址前加上“info:”。</p><h5 id="查看网站的-Google-缓存版本"><a href="#查看网站的-Google-缓存版本" class="headerlink" title="查看网站的 Google 缓存版本"></a>查看网站的 Google 缓存版本</h5><p>在相应网址前加上“cache:”。</p><p><a href="#jump">TOP</a></p>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOs 6.7 安装 owncloud</title>
      <link href="/171216/"/>
      <url>/171216/</url>
      
        <content type="html"><![CDATA[<h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><ul><li>CentOS 6.7</li><li>LAMP<ul><li>PHP 5.6</li><li>MySql</li><li>Apache</li></ul></li><li>OwnCloud 9.0.10</li></ul><h2 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h2><ul><li>[~]# yum -y install mysql mysql-server mysql-devel</li></ul><h2 id="配置MySql开机自启动服务"><a href="#配置MySql开机自启动服务" class="headerlink" title="配置MySql开机自启动服务"></a>配置MySql开机自启动服务</h2><ul><li>[~]# chkconfig mysqld on   #设置mysql服务随开机启动</li><li>[~]# service mysqld start  #启动mysql服务</li><li>[~]# service mysqld start  #启动mysql服务</li><li>[~]# chkconfig –list | grep mysqld #检查自启动服务是否处于开启on状态</li></ul><h2 id="安装PHP环境"><a href="#安装PHP环境" class="headerlink" title="安装PHP环境"></a>安装PHP环境</h2><ul><li>[~]# yum -y update</li><li>[~]# rpm -Uvh <a href="https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm" target="_blank" rel="noopener">https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</a> #<a href="https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm" target="_blank" rel="noopener">链接测试</a></li><li>[~]# rpm -Uvh <a href="https://mirror.webtatic.com/yum/el6/latest.rpm" target="_blank" rel="noopener">https://mirror.webtatic.com/yum/el6/latest.rpm</a> #<a href="https://mirror.webtatic.com/yum/el6/latest.rpm" target="_blank" rel="noopener">链接测试</a></li><li>[~]# yum install -y php56w.x86_64 php56w-cli.x86_64 php56w-common.x86_64 php56w-gd.x86_64 php56w-ldap.x86_64 php56w-mbstring.x86_64 php56w-mcrypt.x86_64 php56w-mysql.x86_64 php56w-pdo.x86_64 #安装不成功，尝试换顺序</li><li>[~]# yum install -y php56w-xml</li></ul><h2 id="调试PHP环境"><a href="#调试PHP环境" class="headerlink" title="调试PHP环境"></a>调试PHP环境</h2><ul><li>[~]# chkconfig httpd on        #httpd服务加入自启动</li><li>[~]# chkconfig –list | grep httpd  #检查启动httpd服务</li><li>[~]# service httpd restart  #重启httpd服务</li></ul><h2 id="验证httpd服务"><a href="#验证httpd服务" class="headerlink" title="验证httpd服务"></a>验证httpd服务</h2><ul><li>打开浏览器,访问<a href="http://192.168.XXX.XXX" target="_blank" rel="noopener">http://192.168.XXX.XXX</a></li></ul><h2 id="安装owncloud"><a href="#安装owncloud" class="headerlink" title="安装owncloud"></a>安装owncloud</h2><ul><li>[~]# wget <a href="https://download.owncloud.org/community/owncloud-9.0.10.tar.bz2" target="_blank" rel="noopener">https://download.owncloud.org/community/owncloud-9.0.10.tar.bz2</a> #<a href="https://download.owncloud.org/community/owncloud-9.0.10.tar.bz2" target="_blank" rel="noopener">链接测试</a></li><li>[~]# tar -jxf owncloud-9.0.10.tar.bz2</li><li>[~]# mv owncloud /var/www/html</li><li>[~]# cd /var/www/html  # 检查解压文件路径是否正确</li><li>[html]# ls </li><li>[html]# pwd </li><li>[html]# chown -R apache:apache /var/www/html/owncloud/ # 更改owncloud文件夹所属用户组</li><li>[~]# chmod 777 /var/www/html/owncloud/config/</li><li>浏览器访问 <a href="http://192.168.XXX.XXX/owncloud" target="_blank" rel="noopener">http://192.168.XXX.XXX/owncloud</a></li><li>验证安装,并配置管理员用户</li><li>owncloud安装完成,简单配置语言</li></ul><p><a href="https://i.loli.net/2017/12/16/5a34d4cecfe55.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2017/12/16/5a34d4cecfe55.png" alt="1.png"></a><br><!-- delete[1] --><br><!-- https://sm.ms/delete/ASq7gfIDGl3FHu8 --></p><p><img src="https://i.loli.net/2017/12/16/5a34d58b7ff3c.png" alt="2.png"><br><!-- delete[2] --><br><!-- https://sm.ms/delete/XEapbOv3RN74DLn --></p><ul><li>完成</li></ul><hr><p>##参考链接<br><a href="https://jingyan.baidu.com/article/414eccf644cebb6b431f0abb.html" target="_blank" rel="noopener">CentOS 6.7 安装私有云owncloud</a></p>]]></content>
      
      
      <categories>
          
          <category> digest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
